# 1 "/workspace/edk2/MdePkg/Library/BaseIoLibIntrinsic/X64/IoFifo.nasm"
# 1 "<built-in>"
# 1 "<command-line>"
# 1 "/usr/include/stdc-predef.h" 1 3 4
# 1 "<command-line>" 2
# 1 "/workspace/edk2/Build/EmulatorX64/DEBUG_GCC5/X64/MdePkg/Library/BaseIoLibIntrinsic/BaseIoLibIntrinsic/DEBUG/AutoGen.h" 1
# 16 "/workspace/edk2/Build/EmulatorX64/DEBUG_GCC5/X64/MdePkg/Library/BaseIoLibIntrinsic/BaseIoLibIntrinsic/DEBUG/AutoGen.h"
# 1 "/workspace/edk2/MdePkg/Include/Base.h" 1
# 22 "/workspace/edk2/MdePkg/Include/Base.h"
# 1 "/workspace/edk2/MdePkg/Include/X64/ProcessorBind.h" 1
# 182 "/workspace/edk2/MdePkg/Include/X64/ProcessorBind.h"
  typedef unsigned long long UINT64;



  typedef long long INT64;



  typedef unsigned int UINT32;



  typedef int INT32;



  typedef unsigned short UINT16;




  typedef unsigned short CHAR16;



  typedef short INT16;




  typedef unsigned char BOOLEAN;



  typedef unsigned char UINT8;



  typedef char CHAR8;



  typedef signed char INT8;






typedef UINT64 UINTN;




typedef INT64 INTN;
# 23 "/workspace/edk2/MdePkg/Include/Base.h" 2
# 222 "/workspace/edk2/MdePkg/Include/Base.h"
typedef struct {
  UINT32 Data1;
  UINT16 Data2;
  UINT16 Data3;
  UINT8 Data4[8];
} GUID;




typedef struct {
  UINT8 Addr[4];
} IPv4_ADDRESS;




typedef struct {
  UINT8 Addr[16];
} IPv6_ADDRESS;




typedef UINT64 PHYSICAL_ADDRESS;




typedef struct _LIST_ENTRY LIST_ENTRY;




struct _LIST_ENTRY {
  LIST_ENTRY *ForwardLink;
  LIST_ENTRY *BackLink;
};
# 638 "/workspace/edk2/MdePkg/Include/Base.h"
typedef __builtin_ms_va_list VA_LIST;
# 742 "/workspace/edk2/MdePkg/Include/Base.h"
typedef UINTN *BASE_LIST;
# 813 "/workspace/edk2/MdePkg/Include/Base.h"
_Static_assert (sizeof (BOOLEAN) == 1, "sizeof (BOOLEAN) does not meet UEFI Specification Data Type requirements");
_Static_assert (sizeof (INT8) == 1, "sizeof (INT8) does not meet UEFI Specification Data Type requirements");
_Static_assert (sizeof (UINT8) == 1, "sizeof (UINT8) does not meet UEFI Specification Data Type requirements");
_Static_assert (sizeof (INT16) == 2, "sizeof (INT16) does not meet UEFI Specification Data Type requirements");
_Static_assert (sizeof (UINT16) == 2, "sizeof (UINT16) does not meet UEFI Specification Data Type requirements");
_Static_assert (sizeof (INT32) == 4, "sizeof (INT32) does not meet UEFI Specification Data Type requirements");
_Static_assert (sizeof (UINT32) == 4, "sizeof (UINT32) does not meet UEFI Specification Data Type requirements");
_Static_assert (sizeof (INT64) == 8, "sizeof (INT64) does not meet UEFI Specification Data Type requirements");
_Static_assert (sizeof (UINT64) == 8, "sizeof (UINT64) does not meet UEFI Specification Data Type requirements");
_Static_assert (sizeof (CHAR8) == 1, "sizeof (CHAR8) does not meet UEFI Specification Data Type requirements");
_Static_assert (sizeof (CHAR16) == 2, "sizeof (CHAR16) does not meet UEFI Specification Data Type requirements");
# 832 "/workspace/edk2/MdePkg/Include/Base.h"
typedef enum {
  __VerifyUint8EnumValue = 0xff
} __VERIFY_UINT8_ENUM_SIZE;

typedef enum {
  __VerifyUint16EnumValue = 0xffff
} __VERIFY_UINT16_ENUM_SIZE;

typedef enum {
  __VerifyUint32EnumValue = 0xffffffff
} __VERIFY_UINT32_ENUM_SIZE;

_Static_assert (sizeof (__VERIFY_UINT8_ENUM_SIZE) == 4, "Size of enum does not meet UEFI Specification Data Type requirements");
_Static_assert (sizeof (__VERIFY_UINT16_ENUM_SIZE) == 4, "Size of enum does not meet UEFI Specification Data Type requirements");
_Static_assert (sizeof (__VERIFY_UINT32_ENUM_SIZE) == 4, "Size of enum does not meet UEFI Specification Data Type requirements");
# 960 "/workspace/edk2/MdePkg/Include/Base.h"
typedef UINTN RETURN_STATUS;
# 17 "/workspace/edk2/Build/EmulatorX64/DEBUG_GCC5/X64/MdePkg/Library/BaseIoLibIntrinsic/BaseIoLibIntrinsic/DEBUG/AutoGen.h" 2

extern GUID gEfiCallerIdGuid;
extern GUID gEdkiiDscPlatformGuid;
extern CHAR8 *gEfiCallerBaseName;



extern UINT64 _gPcd_SkuId_Array[];
# 1 "<command-line>" 2
# 1 "/workspace/edk2/MdePkg/Library/BaseIoLibIntrinsic/X64/IoFifo.nasm"
;------------------------------------------------------------------------------
;
; Copyright (c) 2006 - 2012, Intel Corporation. All rights reserved.<BR>
; Copyright (c) 2017, AMD Incorporated. All rights reserved.<BR>
;
; SPDX-License-Identifier: BSD-2-Clause-Patent
;
;------------------------------------------------------------------------------

    DEFAULT REL
    SECTION .text

;------------------------------------------------------------------------------
; void
;
; IoReadFifo8 (
; UINTN Port,
; UINTN Size,
; void *Buffer
; );
;------------------------------------------------------------------------------
global IoReadFifo8
IoReadFifo8:
    cld
    xchg rcx, rdx
    xchg rdi, r8 ; rdi: buffer address; r8: save rdi
rep insb
    mov rdi, r8 ; restore rdi
    ret

;------------------------------------------------------------------------------
; void
;
; IoReadFifo16 (
; UINTN Port,
; UINTN Size,
; void *Buffer
; );
;------------------------------------------------------------------------------
global IoReadFifo16
IoReadFifo16:
    cld
    xchg rcx, rdx
    xchg rdi, r8 ; rdi: buffer address; r8: save rdi
rep insw
    mov rdi, r8 ; restore rdi
    ret

;------------------------------------------------------------------------------
; void
;
; IoReadFifo32 (
; UINTN Port,
; UINTN Size,
; void *Buffer
; );
;------------------------------------------------------------------------------
global IoReadFifo32
IoReadFifo32:
    cld
    xchg rcx, rdx
    xchg rdi, r8 ; rdi: buffer address; r8: save rdi
rep insd
    mov rdi, r8 ; restore rdi
    ret

;------------------------------------------------------------------------------
; void
;
; IoWriteFifo8 (
; UINTN Port,
; UINTN Size,
; void *Buffer
; );
;------------------------------------------------------------------------------
global IoWriteFifo8
IoWriteFifo8:
    cld
    xchg rcx, rdx
    xchg rsi, r8 ; rsi: buffer address; r8: save rsi
rep outsb
    mov rsi, r8 ; restore rsi
    ret

;------------------------------------------------------------------------------
; void
;
; IoWriteFifo16 (
; UINTN Port,
; UINTN Size,
; void *Buffer
; );
;------------------------------------------------------------------------------
global IoWriteFifo16
IoWriteFifo16:
    cld
    xchg rcx, rdx
    xchg rsi, r8 ; rsi: buffer address; r8: save rsi
rep outsw
    mov rsi, r8 ; restore rsi
    ret

;------------------------------------------------------------------------------
; void
;
; IoWriteFifo32 (
; UINTN Port,
; UINTN Size,
; void *Buffer
; );
;------------------------------------------------------------------------------
global IoWriteFifo32
IoWriteFifo32:
    cld
    xchg rcx, rdx
    xchg rsi, r8 ; rsi: buffer address; r8: save rsi
rep outsd
    mov rsi, r8 ; restore rsi
    ret
