#
# DO NOT EDIT
# This file is auto-generated by build utility
#
# Module Name:
#
#   GNUmakefile
#
# Abstract:
#
#   Auto-generated makefile for building modules, libraries or platform
#
    

#
# Platform Macro Definition
#
PLATFORM_NAME = EmulatorPkg
PLATFORM_GUID = 05FD064D-1073-E844-936C-A0E16317107D
PLATFORM_VERSION = 0.3
PLATFORM_RELATIVE_DIR = EmulatorPkg
PLATFORM_DIR = /workspace/edk2/EmulatorPkg
PLATFORM_OUTPUT_DIR = Build/EmulatorX64

#
# Module Macro Definition
#
MODULE_NAME = Host
MODULE_GUID = 8863C0AD-7724-C84B-88E5-A33B116D1485
MODULE_NAME_GUID = Host
MODULE_VERSION = 1.0
MODULE_TYPE = USER_DEFINED
MODULE_FILE = Host.inf
MODULE_FILE_BASE_NAME = Host
BASE_NAME = $(MODULE_NAME)
MODULE_RELATIVE_DIR = EmulatorPkg/Unix/Host
PACKAGE_RELATIVE_DIR = Unix/Host
MODULE_DIR = /workspace/edk2/EmulatorPkg/Unix/Host
FFS_OUTPUT_DIR = /workspace/edk2/Build/EmulatorX64/DEBUG_GCC5/FV/Ffs/8863C0AD-7724-C84B-88E5-A33B116D1485Host

MODULE_ENTRY_POINT = _ModuleEntryPoint
ARCH_ENTRY_POINT = _ModuleEntryPoint
IMAGE_ENTRY_POINT = _ModuleEntryPoint

INF_VERSION = 0x00010005
BASE_NAME = Host
FILE_GUID = 8863C0AD-7724-C84B-88E5-A33B116D1485
MODULE_TYPE = USER_DEFINED
VERSION_STRING = 1.0

#
# Build Configuration Macro Definition
#
ARCH = X64
TOOLCHAIN = GCC5
TOOLCHAIN_TAG = GCC5
TARGET = DEBUG

#
# Build Directory Macro Definition
#
# PLATFORM_BUILD_DIR = /workspace/edk2/Build/EmulatorX64/DEBUG_GCC5
BUILD_DIR = /workspace/edk2/Build/EmulatorX64/DEBUG_GCC5
BIN_DIR = $(BUILD_DIR)/X64
LIB_DIR = $(BIN_DIR)
MODULE_BUILD_DIR = /workspace/edk2/Build/EmulatorX64/DEBUG_GCC5/X64/EmulatorPkg/Unix/Host/Host
OUTPUT_DIR = /workspace/edk2/Build/EmulatorX64/DEBUG_GCC5/X64/EmulatorPkg/Unix/Host/Host/OUTPUT
DEBUG_DIR = /workspace/edk2/Build/EmulatorX64/DEBUG_GCC5/X64/EmulatorPkg/Unix/Host/Host/DEBUG
DEST_DIR_OUTPUT = $(OUTPUT_DIR)
DEST_DIR_DEBUG = $(DEBUG_DIR)

#
# Shell Command Macro
#
CP = cp -f
MV = mv -f
RM = rm -f
MD = mkdir -p
RD = rm -r -f


#
# Tools definitions specific to this module
#
ASLPP = gcc
ASLPP_FLAGS = -x c -E -include AutoGen.h

PKCS7SIGN = Pkcs7Sign
PKCS7SIGN_GUID =  4AAFD29D-68DF-49EE-8AA9-347D375665A7

VPDTOOL = BPDG
VPDTOOL_GUID =  8C3D856A-9BE6-468E-850A-24F7A8D38E08







ASLDLINK = gcc
ASLDLINK_FLAGS = -nostdlib -Wl,-n,-q,--gc-sections -z common-page-size=0x40 -Wl,--defsym=PECOFF_HEADER_SIZE=0 -Wl,--script=$(EDK_TOOLS_PATH)/Scripts/GccBase.lds -Wl,--entry,ReferenceAcpiTable -u ReferenceAcpiTable -Wl,-m,elf_x86_64

GENFW = GenFw
GENFW_FLAGS = 


SLINK = gcc-ar

OBJCOPY_ADDDEBUGFLAG =  --add-gnu-debuglink=$(DEBUG_DIR)/$(MODULE_NAME).debug
OBJCOPY = objcopy
OBJCOPY_FLAGS = 

DEPS_FLAGS = -MMD -MF $@.deps


ASM = gcc
ASM_FLAGS = -m64 -c -x assembler -imacros $(DEST_DIR_DEBUG)/AutoGen.h

CC_FLAGS = -m64 -g -fshort-wchar -fno-strict-aliasing -Wall -malign-double -idirafter/usr/include -c -include $(DEST_DIR_DEBUG)/AutoGen.h -DSTRING_ARRAY_NAME=$(BASE_NAME)Strings "-DEFIAPI=__attribute__((ms_abi))" -flto -DUSING_LTO -Os -D DISABLE_NEW_DEPRECATED_INTERFACES
CC = gcc

ASMLINK = bin16\link16.exe
ASMLINK_FLAGS = /nologo /tiny

TIANO = TianoCompress
TIANO_GUID =  A31280AD-481E-41B6-95E8-127F4C984779

LZMA = LzmaCompress
LZMA_GUID =  EE4E5898-3914-4259-9D6E-DC7BD79403CF

VFR = VfrCompile
VFR_FLAGS = -l -n

ASLCC = gcc
ASLCC_FLAGS = -x c -fno-lto -m64

APP_FLAGS = 

NASM_FLAGS = -f elf64
NASM = nasm


OPTROM = EfiRom
OPTROM_FLAGS = -e

DTC_FLAGS = -H epapr
DTC = dtc

MAKE = make

SYMRENAME = echo
SYMRENAME_FLAGS = Symbol renaming not needed for


LZMAF86 = LzmaF86Compress
LZMAF86_GUID =  D42AE6BD-1352-4bfb-909A-CA72A6EAE889

CRC32 = GenCrc32
CRC32_GUID =  FC1BCDB0-7D31-49AA-936A-A4600D9DD083


BROTLI = BrotliCompress
BROTLI_GUID =  3D532050-5CDA-4FD0-879E-0F7F630D5AFB

RC = objcopy
RC_FLAGS = -I binary -O elf64-x86-64 -B i386 --rename-section .data=.hii

PP = gcc
PP_FLAGS = -m64 -E -x assembler-with-cpp -include $(DEST_DIR_DEBUG)/AutoGen.h

VFRPP = gcc
VFRPP_FLAGS = -x c -E -P -DVFRCOMPILE --include $(MODULE_NAME)StrDefs.h

DLINK_FLAGS = -flto -o $(BIN_DIR)/Host -m64 -L/usr/X11R6/lib
DLINK = gcc


RSA2048SHA256SIGN = Rsa2048Sha256Sign
RSA2048SHA256SIGN_GUID =  A7717414-C616-4977-9420-844712A735BF


ASL = iasl
ASL_FLAGS = 
ASL_OUTFLAGS =  -p



NASMB_FLAGS = -f bin

DLINK2_FLAGS = -lpthread -ldl -lXext -lX11

DTCPP = cpp


MAKE_FILE = $(MODULE_BUILD_DIR)/GNUmakefile

#
# Build Macro
#
OBJECT_FILES =  \
    $(OUTPUT_DIR)/AutoGen.obj \
    $(OUTPUT_DIR)/BerkeleyPacketFilter.obj \
    $(OUTPUT_DIR)/BlockIo.obj \
    $(OUTPUT_DIR)/EmuThunk.obj \
    $(OUTPUT_DIR)/Host.obj \
    $(OUTPUT_DIR)/LinuxPacketFilter.obj \
    $(OUTPUT_DIR)/MemoryAllocationLib.obj \
    $(OUTPUT_DIR)/PosixFileSystem.obj \
    $(OUTPUT_DIR)/Pthreads.obj \
    $(OUTPUT_DIR)/X11GraphicsWindow.obj \
    $(OUTPUT_DIR)/X64/Gasket.obj \
    $(OUTPUT_DIR)/X64/SwitchStack.obj

STATIC_LIBRARY_FILES =  \
    $(BIN_DIR)/EmulatorPkg/Library/SecPeiServicesLib/SecPeiServicesLib/OUTPUT/SecPeiServicesLib.lib \
    $(BIN_DIR)/EmulatorPkg/Library/SecPpiListLib/SecPpiListLib/OUTPUT/SecPpiListLib.lib \
    $(BIN_DIR)/EmulatorPkg/Library/ThunkPpiList/ThunkPpiList/OUTPUT/ThunkPpiList.lib \
    $(BIN_DIR)/EmulatorPkg/Library/ThunkProtocolList/ThunkProtocolList/OUTPUT/ThunkProtocolList.lib \
    $(BIN_DIR)/MdePkg/Library/BaseDebugLibNull/BaseDebugLibNull/OUTPUT/BaseDebugLibNull.lib \
    $(BIN_DIR)/MdePkg/Library/BaseLib/BaseLib/OUTPUT/BaseLib.lib \
    $(BIN_DIR)/MdePkg/Library/BaseMemoryLib/BaseMemoryLib/OUTPUT/BaseMemoryLib.lib \
    $(BIN_DIR)/MdePkg/Library/BasePcdLibNull/BasePcdLibNull/OUTPUT/BasePcdLibNull.lib \
    $(BIN_DIR)/MdePkg/Library/BasePeCoffExtraActionLibNull/BasePeCoffExtraActionLibNull/OUTPUT/PeCoffExtraActionLibNull.lib \
    $(BIN_DIR)/MdePkg/Library/BasePeCoffGetEntryPointLib/BasePeCoffGetEntryPointLib/OUTPUT/BasePeCoffGetEntryPointLib.lib \
    $(BIN_DIR)/MdePkg/Library/BasePeCoffLib/BasePeCoffLib/OUTPUT/BasePeCoffLib.lib \
    $(BIN_DIR)/MdePkg/Library/BasePrintLib/BasePrintLib/OUTPUT/BasePrintLib.lib \
    $(OUTPUT_DIR)/Host.lib

INC =  \
    -I$(WORKSPACE)/EmulatorPkg/Unix/Host/X64 \
    -I$(WORKSPACE)/EmulatorPkg/Unix/Host \
    -I$(DEBUG_DIR) \
    -I$(WORKSPACE)/MdePkg \
    -I$(WORKSPACE)/MdePkg/Include \
    -I$(WORKSPACE)/MdePkg/Test/UnitTest/Include \
    -I$(WORKSPACE)/MdePkg/Include/X64 \
    -I$(WORKSPACE)/MdeModulePkg \
    -I$(WORKSPACE)/MdeModulePkg/Include \
    -I$(WORKSPACE)/NetworkPkg \
    -I$(WORKSPACE)/NetworkPkg/Include \
    -I$(WORKSPACE)/EmulatorPkg \
    -I$(WORKSPACE)/EmulatorPkg/Include

NASM_INC =  \
    -I$(WORKSPACE)/EmulatorPkg/Unix/Host/X64/ \
    -I$(WORKSPACE)/EmulatorPkg/Unix/Host/ \
    -I$(DEBUG_DIR)/ \
    -I$(WORKSPACE)/MdePkg/ \
    -I$(WORKSPACE)/MdePkg/Include/ \
    -I$(WORKSPACE)/MdePkg/Test/UnitTest/Include/ \
    -I$(WORKSPACE)/MdePkg/Include/X64/ \
    -I$(WORKSPACE)/MdeModulePkg/ \
    -I$(WORKSPACE)/MdeModulePkg/Include/ \
    -I$(WORKSPACE)/NetworkPkg/ \
    -I$(WORKSPACE)/NetworkPkg/Include/ \
    -I$(WORKSPACE)/EmulatorPkg/ \
    -I$(WORKSPACE)/EmulatorPkg/Include/

OBJECT_FILES_LIST = /workspace/edk2/Build/EmulatorX64/DEBUG_GCC5/X64/EmulatorPkg/Unix/Host/Host/OUTPUT/object_files.lst
STATIC_LIBRARY_FILES_LIST = /workspace/edk2/Build/EmulatorX64/DEBUG_GCC5/X64/EmulatorPkg/Unix/Host/Host/OUTPUT/static_library_files.lst
INC_LIST = /workspace/edk2/Build/EmulatorX64/DEBUG_GCC5/X64/EmulatorPkg/Unix/Host/Host/OUTPUT/inc.lst


#
# Overridable Target Macro Definitions
#
FORCE_REBUILD = force_build
INIT_TARGET = init
PCH_TARGET =
BC_TARGET = 
CODA_TARGET = /workspace/edk2/Build/EmulatorX64/DEBUG_GCC5/X64/EmulatorPkg/Unix/Host/Host/DEBUG/Host \
              

#
# Default target, which will build dependent libraries in addition to source files
#

all: mbuild


#
# Target used when called from platform makefile, which will bypass the build of dependent libraries
#

pbuild: $(INIT_TARGET) $(BC_TARGET) $(PCH_TARGET) $(CODA_TARGET)

#
# ModuleTarget
#

mbuild: $(INIT_TARGET) $(BC_TARGET) gen_libs $(PCH_TARGET) $(CODA_TARGET)

#
# Build Target used in multi-thread build mode, which will bypass the init and gen_libs targets
#

tbuild: $(BC_TARGET) $(PCH_TARGET) $(CODA_TARGET)

#
# Phony target which is used to force executing commands for a target
#
force_build:
	-@

#
# Target to update the FD
#

fds: mbuild gen_fds

#
# Initialization target: print build information and create necessary directories
#
init: info dirs

info:
	-@echo Building ... $(MODULE_DIR)/$(MODULE_FILE) [$(ARCH)]

dirs:
	-@$(MD) $(DEBUG_DIR)
	-@$(MD) $(OUTPUT_DIR)


strdefs:
	-@$(CP) $(DEBUG_DIR)/AutoGen.h $(DEBUG_DIR)/$(MODULE_NAME)StrDefs.h

#
# GenLibsTarget
#
gen_libs:
	@"$(MAKE)" $(MAKE_FLAGS) -f $(BIN_DIR)/MdePkg/Library/BaseLib/BaseLib/GNUmakefile
	@"$(MAKE)" $(MAKE_FLAGS) -f $(BIN_DIR)/MdePkg/Library/BaseMemoryLib/BaseMemoryLib/GNUmakefile
	@"$(MAKE)" $(MAKE_FLAGS) -f $(BIN_DIR)/MdePkg/Library/BasePcdLibNull/BasePcdLibNull/GNUmakefile
	@"$(MAKE)" $(MAKE_FLAGS) -f $(BIN_DIR)/MdePkg/Library/BaseDebugLibNull/BaseDebugLibNull/GNUmakefile
	@"$(MAKE)" $(MAKE_FLAGS) -f $(BIN_DIR)/MdePkg/Library/BasePeCoffExtraActionLibNull/BasePeCoffExtraActionLibNull/GNUmakefile
	@"$(MAKE)" $(MAKE_FLAGS) -f $(BIN_DIR)/EmulatorPkg/Library/SecPpiListLib/SecPpiListLib/GNUmakefile
	@"$(MAKE)" $(MAKE_FLAGS) -f $(BIN_DIR)/MdePkg/Library/BasePrintLib/BasePrintLib/GNUmakefile
	@"$(MAKE)" $(MAKE_FLAGS) -f $(BIN_DIR)/MdePkg/Library/BasePeCoffLib/BasePeCoffLib/GNUmakefile
	@"$(MAKE)" $(MAKE_FLAGS) -f $(BIN_DIR)/EmulatorPkg/Library/ThunkPpiList/ThunkPpiList/GNUmakefile
	@"$(MAKE)" $(MAKE_FLAGS) -f $(BIN_DIR)/EmulatorPkg/Library/ThunkProtocolList/ThunkProtocolList/GNUmakefile
	@"$(MAKE)" $(MAKE_FLAGS) -f $(BIN_DIR)/EmulatorPkg/Library/SecPeiServicesLib/SecPeiServicesLib/GNUmakefile
	@"$(MAKE)" $(MAKE_FLAGS) -f $(BIN_DIR)/MdePkg/Library/BasePeCoffGetEntryPointLib/BasePeCoffGetEntryPointLib/GNUmakefile
	@cd $(MODULE_BUILD_DIR)

#
# Build Flash Device Image
#
gen_fds:
	@"$(MAKE)" $(MAKE_FLAGS) -f $(BUILD_DIR)/GNUmakefile fds
	@cd $(MODULE_BUILD_DIR)

include $(MODULE_BUILD_DIR)/dependency
include $(MODULE_BUILD_DIR)/deps_target

#
# Individual Object Build Targets
#
$(OUTPUT_DIR)/X11GraphicsWindow.obj : $(MAKE_FILE)
$(OUTPUT_DIR)/X11GraphicsWindow.obj : $(DEBUG_DIR)/AutoGen.h
$(OUTPUT_DIR)/X11GraphicsWindow.obj : $(WORKSPACE)/EmulatorPkg/Unix/Host/X11GraphicsWindow.c
	"$(CC)" $(DEPS_FLAGS) $(CC_FLAGS) -c -o /workspace/edk2/Build/EmulatorX64/DEBUG_GCC5/X64/EmulatorPkg/Unix/Host/Host/OUTPUT/./X11GraphicsWindow.obj $(INC) /workspace/edk2/EmulatorPkg/Unix/Host/X11GraphicsWindow.c

$(OUTPUT_DIR)/EmuThunk.obj : $(MAKE_FILE)
$(OUTPUT_DIR)/EmuThunk.obj : $(DEBUG_DIR)/AutoGen.h
$(OUTPUT_DIR)/EmuThunk.obj : $(WORKSPACE)/EmulatorPkg/Unix/Host/EmuThunk.c
	"$(CC)" $(DEPS_FLAGS) $(CC_FLAGS) -c -o /workspace/edk2/Build/EmulatorX64/DEBUG_GCC5/X64/EmulatorPkg/Unix/Host/Host/OUTPUT/./EmuThunk.obj $(INC) /workspace/edk2/EmulatorPkg/Unix/Host/EmuThunk.c

$(OUTPUT_DIR)/Pthreads.obj : $(MAKE_FILE)
$(OUTPUT_DIR)/Pthreads.obj : $(DEBUG_DIR)/AutoGen.h
$(OUTPUT_DIR)/Pthreads.obj : $(WORKSPACE)/EmulatorPkg/Unix/Host/Pthreads.c
	"$(CC)" $(DEPS_FLAGS) $(CC_FLAGS) -c -o /workspace/edk2/Build/EmulatorX64/DEBUG_GCC5/X64/EmulatorPkg/Unix/Host/Host/OUTPUT/./Pthreads.obj $(INC) /workspace/edk2/EmulatorPkg/Unix/Host/Pthreads.c

$(OUTPUT_DIR)/BlockIo.obj : $(MAKE_FILE)
$(OUTPUT_DIR)/BlockIo.obj : $(DEBUG_DIR)/AutoGen.h
$(OUTPUT_DIR)/BlockIo.obj : $(WORKSPACE)/EmulatorPkg/Unix/Host/BlockIo.c
	"$(CC)" $(DEPS_FLAGS) $(CC_FLAGS) -c -o /workspace/edk2/Build/EmulatorX64/DEBUG_GCC5/X64/EmulatorPkg/Unix/Host/Host/OUTPUT/./BlockIo.obj $(INC) /workspace/edk2/EmulatorPkg/Unix/Host/BlockIo.c

$(OUTPUT_DIR)/MemoryAllocationLib.obj : $(MAKE_FILE)
$(OUTPUT_DIR)/MemoryAllocationLib.obj : $(DEBUG_DIR)/AutoGen.h
$(OUTPUT_DIR)/MemoryAllocationLib.obj : $(WORKSPACE)/EmulatorPkg/Unix/Host/MemoryAllocationLib.c
	"$(CC)" $(DEPS_FLAGS) $(CC_FLAGS) -c -o /workspace/edk2/Build/EmulatorX64/DEBUG_GCC5/X64/EmulatorPkg/Unix/Host/Host/OUTPUT/./MemoryAllocationLib.obj $(INC) /workspace/edk2/EmulatorPkg/Unix/Host/MemoryAllocationLib.c

$(OUTPUT_DIR)/AutoGen.obj : $(MAKE_FILE)
$(OUTPUT_DIR)/AutoGen.obj : $(DEBUG_DIR)/AutoGen.h
$(OUTPUT_DIR)/AutoGen.obj : $(DEBUG_DIR)/AutoGen.c
	"$(CC)" $(DEPS_FLAGS) $(CC_FLAGS) -c -o /workspace/edk2/Build/EmulatorX64/DEBUG_GCC5/X64/EmulatorPkg/Unix/Host/Host/OUTPUT/./AutoGen.obj $(INC) /workspace/edk2/Build/EmulatorX64/DEBUG_GCC5/X64/EmulatorPkg/Unix/Host/Host/DEBUG/AutoGen.c

$(OUTPUT_DIR)/Host.obj : $(MAKE_FILE)
$(OUTPUT_DIR)/Host.obj : $(DEBUG_DIR)/AutoGen.h
$(OUTPUT_DIR)/Host.obj : $(WORKSPACE)/EmulatorPkg/Unix/Host/Host.c
	"$(CC)" $(DEPS_FLAGS) $(CC_FLAGS) -c -o /workspace/edk2/Build/EmulatorX64/DEBUG_GCC5/X64/EmulatorPkg/Unix/Host/Host/OUTPUT/./Host.obj $(INC) /workspace/edk2/EmulatorPkg/Unix/Host/Host.c

$(OUTPUT_DIR)/LinuxPacketFilter.obj : $(MAKE_FILE)
$(OUTPUT_DIR)/LinuxPacketFilter.obj : $(DEBUG_DIR)/AutoGen.h
$(OUTPUT_DIR)/LinuxPacketFilter.obj : $(WORKSPACE)/EmulatorPkg/Unix/Host/LinuxPacketFilter.c
	"$(CC)" $(DEPS_FLAGS) $(CC_FLAGS) -c -o /workspace/edk2/Build/EmulatorX64/DEBUG_GCC5/X64/EmulatorPkg/Unix/Host/Host/OUTPUT/./LinuxPacketFilter.obj $(INC) /workspace/edk2/EmulatorPkg/Unix/Host/LinuxPacketFilter.c

$(OUTPUT_DIR)/PosixFileSystem.obj : $(MAKE_FILE)
$(OUTPUT_DIR)/PosixFileSystem.obj : $(DEBUG_DIR)/AutoGen.h
$(OUTPUT_DIR)/PosixFileSystem.obj : $(WORKSPACE)/EmulatorPkg/Unix/Host/PosixFileSystem.c
	"$(CC)" $(DEPS_FLAGS) $(CC_FLAGS) -c -o /workspace/edk2/Build/EmulatorX64/DEBUG_GCC5/X64/EmulatorPkg/Unix/Host/Host/OUTPUT/./PosixFileSystem.obj $(INC) /workspace/edk2/EmulatorPkg/Unix/Host/PosixFileSystem.c

$(OUTPUT_DIR)/BerkeleyPacketFilter.obj : $(MAKE_FILE)
$(OUTPUT_DIR)/BerkeleyPacketFilter.obj : $(DEBUG_DIR)/AutoGen.h
$(OUTPUT_DIR)/BerkeleyPacketFilter.obj : $(WORKSPACE)/EmulatorPkg/Unix/Host/BerkeleyPacketFilter.c
	"$(CC)" $(DEPS_FLAGS) $(CC_FLAGS) -c -o /workspace/edk2/Build/EmulatorX64/DEBUG_GCC5/X64/EmulatorPkg/Unix/Host/Host/OUTPUT/./BerkeleyPacketFilter.obj $(INC) /workspace/edk2/EmulatorPkg/Unix/Host/BerkeleyPacketFilter.c

$(OUTPUT_DIR)/Host.lib : $(OBJECT_FILES)
$(OUTPUT_DIR)/Host.lib : $(OBJECT_FILES_LIST)
	$(RM) /workspace/edk2/Build/EmulatorX64/DEBUG_GCC5/X64/EmulatorPkg/Unix/Host/Host/OUTPUT/Host.lib
	"$(SLINK)" cr /workspace/edk2/Build/EmulatorX64/DEBUG_GCC5/X64/EmulatorPkg/Unix/Host/Host/OUTPUT/Host.lib $(SLINK_FLAGS) @$(OBJECT_FILES_LIST)

$(DEBUG_DIR)/Host : $(MAKE_FILE)
$(DEBUG_DIR)/Host : $(STATIC_LIBRARY_FILES)
$(DEBUG_DIR)/Host : $(STATIC_LIBRARY_FILES_LIST)
	"$(DLINK)" $(DLINK_FLAGS) -Wl,--start-group,@$(STATIC_LIBRARY_FILES_LIST),--end-group $(DLINK2_FLAGS)

$(OUTPUT_DIR)/X64/SwitchStack.obj : $(MAKE_FILE)
$(OUTPUT_DIR)/X64/SwitchStack.obj : $(DEBUG_DIR)/AutoGen.h
$(OUTPUT_DIR)/X64/SwitchStack.obj : $(WORKSPACE)/EmulatorPkg/Unix/Host/X64/SwitchStack.S
	Trim --asm-file -o /workspace/edk2/Build/EmulatorX64/DEBUG_GCC5/X64/EmulatorPkg/Unix/Host/Host/OUTPUT/X64/SwitchStack.i -i $(INC_LIST) /workspace/edk2/EmulatorPkg/Unix/Host/X64/SwitchStack.S
	"$(PP)" $(DEPS_FLAGS) $(PP_FLAGS) $(INC) /workspace/edk2/EmulatorPkg/Unix/Host/X64/SwitchStack.S > /workspace/edk2/Build/EmulatorX64/DEBUG_GCC5/X64/EmulatorPkg/Unix/Host/Host/OUTPUT/X64/SwitchStack.ii
	Trim --trim-long --source-code -o /workspace/edk2/Build/EmulatorX64/DEBUG_GCC5/X64/EmulatorPkg/Unix/Host/Host/OUTPUT/X64/SwitchStack.iiii /workspace/edk2/Build/EmulatorX64/DEBUG_GCC5/X64/EmulatorPkg/Unix/Host/Host/OUTPUT/X64/SwitchStack.ii
	"$(ASM)" $(ASM_FLAGS) -o /workspace/edk2/Build/EmulatorX64/DEBUG_GCC5/X64/EmulatorPkg/Unix/Host/Host/OUTPUT/X64/SwitchStack.obj $(INC) /workspace/edk2/Build/EmulatorX64/DEBUG_GCC5/X64/EmulatorPkg/Unix/Host/Host/OUTPUT/X64/SwitchStack.iiii

$(OUTPUT_DIR)/X64/Gasket.obj : $(MAKE_FILE)
$(OUTPUT_DIR)/X64/Gasket.obj : $(DEBUG_DIR)/AutoGen.h
$(OUTPUT_DIR)/X64/Gasket.obj : $(WORKSPACE)/EmulatorPkg/Unix/Host/X64/Gasket.S
	Trim --asm-file -o /workspace/edk2/Build/EmulatorX64/DEBUG_GCC5/X64/EmulatorPkg/Unix/Host/Host/OUTPUT/X64/Gasket.i -i $(INC_LIST) /workspace/edk2/EmulatorPkg/Unix/Host/X64/Gasket.S
	"$(PP)" $(DEPS_FLAGS) $(PP_FLAGS) $(INC) /workspace/edk2/EmulatorPkg/Unix/Host/X64/Gasket.S > /workspace/edk2/Build/EmulatorX64/DEBUG_GCC5/X64/EmulatorPkg/Unix/Host/Host/OUTPUT/X64/Gasket.ii
	Trim --trim-long --source-code -o /workspace/edk2/Build/EmulatorX64/DEBUG_GCC5/X64/EmulatorPkg/Unix/Host/Host/OUTPUT/X64/Gasket.iiii /workspace/edk2/Build/EmulatorX64/DEBUG_GCC5/X64/EmulatorPkg/Unix/Host/Host/OUTPUT/X64/Gasket.ii
	"$(ASM)" $(ASM_FLAGS) -o /workspace/edk2/Build/EmulatorX64/DEBUG_GCC5/X64/EmulatorPkg/Unix/Host/Host/OUTPUT/X64/Gasket.obj $(INC) /workspace/edk2/Build/EmulatorX64/DEBUG_GCC5/X64/EmulatorPkg/Unix/Host/Host/OUTPUT/X64/Gasket.iiii



#
# clean all intermediate files
#
clean:
	$(RD) $(OUTPUT_DIR)
		$(RM) AutoGenTimeStamp

#
# clean all generated files
#
cleanall:
	$(RD) $(DEBUG_DIR)
	$(RD) $(OUTPUT_DIR)
	$(RM) *.pdb *.idb > NUL 2>&1
	$(RM) $(BIN_DIR)/$(MODULE_NAME).efi
	$(RM) AutoGenTimeStamp

#
# clean all dependent libraries built
#
cleanlib:
	-@test -e $(BIN_DIR)/MdePkg/Library/BaseLib/BaseLib/GNUmakefile && "$(MAKE)" $(MAKE_FLAGS) -f $(BIN_DIR)/MdePkg/Library/BaseLib/BaseLib/GNUmakefile cleanall
	-@test -e $(BIN_DIR)/MdePkg/Library/BaseMemoryLib/BaseMemoryLib/GNUmakefile && "$(MAKE)" $(MAKE_FLAGS) -f $(BIN_DIR)/MdePkg/Library/BaseMemoryLib/BaseMemoryLib/GNUmakefile cleanall
	-@test -e $(BIN_DIR)/MdePkg/Library/BasePcdLibNull/BasePcdLibNull/GNUmakefile && "$(MAKE)" $(MAKE_FLAGS) -f $(BIN_DIR)/MdePkg/Library/BasePcdLibNull/BasePcdLibNull/GNUmakefile cleanall
	-@test -e $(BIN_DIR)/MdePkg/Library/BaseDebugLibNull/BaseDebugLibNull/GNUmakefile && "$(MAKE)" $(MAKE_FLAGS) -f $(BIN_DIR)/MdePkg/Library/BaseDebugLibNull/BaseDebugLibNull/GNUmakefile cleanall
	-@test -e $(BIN_DIR)/MdePkg/Library/BasePeCoffExtraActionLibNull/BasePeCoffExtraActionLibNull/GNUmakefile && "$(MAKE)" $(MAKE_FLAGS) -f $(BIN_DIR)/MdePkg/Library/BasePeCoffExtraActionLibNull/BasePeCoffExtraActionLibNull/GNUmakefile cleanall
	-@test -e $(BIN_DIR)/EmulatorPkg/Library/SecPpiListLib/SecPpiListLib/GNUmakefile && "$(MAKE)" $(MAKE_FLAGS) -f $(BIN_DIR)/EmulatorPkg/Library/SecPpiListLib/SecPpiListLib/GNUmakefile cleanall
	-@test -e $(BIN_DIR)/MdePkg/Library/BasePrintLib/BasePrintLib/GNUmakefile && "$(MAKE)" $(MAKE_FLAGS) -f $(BIN_DIR)/MdePkg/Library/BasePrintLib/BasePrintLib/GNUmakefile cleanall
	-@test -e $(BIN_DIR)/MdePkg/Library/BasePeCoffLib/BasePeCoffLib/GNUmakefile && "$(MAKE)" $(MAKE_FLAGS) -f $(BIN_DIR)/MdePkg/Library/BasePeCoffLib/BasePeCoffLib/GNUmakefile cleanall
	-@test -e $(BIN_DIR)/EmulatorPkg/Library/ThunkPpiList/ThunkPpiList/GNUmakefile && "$(MAKE)" $(MAKE_FLAGS) -f $(BIN_DIR)/EmulatorPkg/Library/ThunkPpiList/ThunkPpiList/GNUmakefile cleanall
	-@test -e $(BIN_DIR)/EmulatorPkg/Library/ThunkProtocolList/ThunkProtocolList/GNUmakefile && "$(MAKE)" $(MAKE_FLAGS) -f $(BIN_DIR)/EmulatorPkg/Library/ThunkProtocolList/ThunkProtocolList/GNUmakefile cleanall
	-@test -e $(BIN_DIR)/EmulatorPkg/Library/SecPeiServicesLib/SecPeiServicesLib/GNUmakefile && "$(MAKE)" $(MAKE_FLAGS) -f $(BIN_DIR)/EmulatorPkg/Library/SecPeiServicesLib/SecPeiServicesLib/GNUmakefile cleanall
	-@test -e $(BIN_DIR)/MdePkg/Library/BasePeCoffGetEntryPointLib/BasePeCoffGetEntryPointLib/GNUmakefile && "$(MAKE)" $(MAKE_FLAGS) -f $(BIN_DIR)/MdePkg/Library/BasePeCoffGetEntryPointLib/BasePeCoffGetEntryPointLib/GNUmakefile cleanall
	@cd $(MODULE_BUILD_DIR)

