#
# DO NOT EDIT
# This file is auto-generated by build utility
#
# Module Name:
#
#   GNUmakefile
#
# Abstract:
#
#   Auto-generated makefile for building modules, libraries or platform
#
    

#
# Platform Macro Definition
#
PLATFORM_NAME = ArmVirtQemu
PLATFORM_GUID = 37d7e986-f7e9-45c2-8067-e371421a626c
PLATFORM_VERSION = 0.1
PLATFORM_RELATIVE_DIR = ArmVirtPkg
PLATFORM_DIR = /workspace/edk2/ArmVirtPkg
PLATFORM_OUTPUT_DIR = Build/ArmVirtQemu-ARM

#
# Module Macro Definition
#
MODULE_NAME = ArmPlatformPrePeiCore
MODULE_GUID = 469fc080-aec1-11df-927c-0002a5d5c51b
MODULE_NAME_GUID = ArmPlatformPrePeiCore
MODULE_VERSION = 1.0
MODULE_TYPE = SEC
MODULE_FILE = PrePeiCoreUniCore.inf
MODULE_FILE_BASE_NAME = PrePeiCoreUniCore
BASE_NAME = $(MODULE_NAME)
MODULE_RELATIVE_DIR = ArmPlatformPkg/PrePeiCore
PACKAGE_RELATIVE_DIR = PrePeiCore
MODULE_DIR = /workspace/edk2/ArmPlatformPkg/PrePeiCore
FFS_OUTPUT_DIR = /workspace/edk2/Build/ArmVirtQemu-ARM/DEBUG_GCC5/FV/Ffs/469fc080-aec1-11df-927c-0002a5d5c51bArmPlatformPrePeiCore

MODULE_ENTRY_POINT = _ModuleEntryPoint
ARCH_ENTRY_POINT = _ModuleEntryPoint
IMAGE_ENTRY_POINT = _ModuleEntryPoint

INF_VERSION = 0x00010005
BASE_NAME = ArmPlatformPrePeiCore
FILE_GUID = 469fc080-aec1-11df-927c-0002a5d5c51b
MODULE_TYPE = SEC
VERSION_STRING = 1.0

#
# Build Configuration Macro Definition
#
ARCH = ARM
TOOLCHAIN = GCC5
TOOLCHAIN_TAG = GCC5
TARGET = DEBUG

#
# Build Directory Macro Definition
#
# PLATFORM_BUILD_DIR = /workspace/edk2/Build/ArmVirtQemu-ARM/DEBUG_GCC5
BUILD_DIR = /workspace/edk2/Build/ArmVirtQemu-ARM/DEBUG_GCC5
BIN_DIR = $(BUILD_DIR)/ARM
LIB_DIR = $(BIN_DIR)
MODULE_BUILD_DIR = /workspace/edk2/Build/ArmVirtQemu-ARM/DEBUG_GCC5/ARM/ArmPlatformPkg/PrePeiCore/PrePeiCoreUniCore
OUTPUT_DIR = /workspace/edk2/Build/ArmVirtQemu-ARM/DEBUG_GCC5/ARM/ArmPlatformPkg/PrePeiCore/PrePeiCoreUniCore/OUTPUT
DEBUG_DIR = /workspace/edk2/Build/ArmVirtQemu-ARM/DEBUG_GCC5/ARM/ArmPlatformPkg/PrePeiCore/PrePeiCoreUniCore/DEBUG
DEST_DIR_OUTPUT = $(OUTPUT_DIR)
DEST_DIR_DEBUG = $(DEBUG_DIR)

#
# Shell Command Macro
#
CP = cp -f
MV = mv -f
RM = rm -f
MD = mkdir -p
RD = rm -r -f


#
# Tools definitions specific to this module
#
ASLPP = gcc
ASLPP_FLAGS = -x c -E -include AutoGen.h

PKCS7SIGN = Pkcs7Sign
PKCS7SIGN_GUID =  4AAFD29D-68DF-49EE-8AA9-347D375665A7

VPDTOOL = BPDG
VPDTOOL_GUID =  8C3D856A-9BE6-468E-850A-24F7A8D38E08







ASLDLINK = gcc
ASLDLINK_FLAGS = -Wl,--emit-relocs -nostdlib -Wl,--gc-sections -u $(IMAGE_ENTRY_POINT) -Wl,-e,$(IMAGE_ENTRY_POINT),-Map,$(DEST_DIR_DEBUG)/$(BASE_NAME).map -z common-page-size=0x20 -Wl,--pic-veneer -Wl,--entry,ReferenceAcpiTable -u $(IMAGE_ENTRY_POINT) -Wl,--defsym=PECOFF_HEADER_SIZE=0 -Wl,--script=$(EDK_TOOLS_PATH)/Scripts/GccBase.lds -z common-page-size=0x20 -Wl,--oformat=elf32-littlearm

GENFW = GenFw
GENFW_FLAGS = 


SLINK = gcc-ar

OBJCOPY_ADDDEBUGFLAG =  --add-gnu-debuglink=$(DEBUG_DIR)/$(MODULE_NAME).debug
OBJCOPY = echo
OBJCOPY_FLAGS = objcopy not needed for

DEPS_FLAGS = -MMD -MF $@.deps


ASM = gcc
ASM_FLAGS = $(ARCHASM_FLAGS) $(PLATFORM_FLAGS) -c -x assembler -imacros AutoGen.h -mlittle-endian

CC_FLAGS = $(ARCHCC_FLAGS) $(PLATFORM_FLAGS) -g -Os -fshort-wchar -fno-builtin -fno-strict-aliasing -Wall -Werror -Wno-array-bounds -include AutoGen.h -fno-common -mlittle-endian -mabi=aapcs -fno-short-enums -funsigned-char -ffunction-sections -fdata-sections -fomit-frame-pointer -Wno-address -mthumb -mfloat-abi=soft -fno-pic -fno-pie -fstack-protector -mword-relocations -flto -Wno-unused-but-set-variable -Wno-unused-const-variable -DDISABLE_NEW_DEPRECATED_INTERFACES -D ENABLE_MD5_DEPRECATED_INTERFACES
CC = gcc
CC_XIPFLAGS =  -mno-unaligned-access

ASMLINK = bin16\link16.exe
ASMLINK_FLAGS = /nologo /tiny

TIANO = TianoCompress
TIANO_GUID =  A31280AD-481E-41B6-95E8-127F4C984779

LZMA = LzmaCompress
LZMA_GUID =  EE4E5898-3914-4259-9D6E-DC7BD79403CF

VFR = VfrCompile
VFR_FLAGS = -l -n

ASLCC = gcc
ASLCC_FLAGS = -x c -fno-lto

APP_FLAGS = 

NASM = nasm


OPTROM = EfiRom
OPTROM_FLAGS = -e

DTC_FLAGS = -H epapr
DTC = dtc

MAKE = make

SYMRENAME = echo
SYMRENAME_FLAGS = Symbol renaming not needed for


LZMAF86 = LzmaF86Compress
LZMAF86_GUID =  D42AE6BD-1352-4bfb-909A-CA72A6EAE889

CRC32 = GenCrc32
CRC32_GUID =  FC1BCDB0-7D31-49AA-936A-A4600D9DD083


BROTLI = BrotliCompress
BROTLI_GUID =  3D532050-5CDA-4FD0-879E-0F7F630D5AFB

RC = objcopy
RC_FLAGS = -I binary -O elf32-littlearm -B arm --rename-section .data=.hii

PP = gcc
PP_FLAGS = $(ARCHCC_FLAGS) $(PLATFORM_FLAGS) -E -x assembler-with-cpp -include AutoGen.h -DOPENSBI_EXTERNAL_SBI_TYPES=OpensbiTypes.h

VFRPP = gcc
VFRPP_FLAGS = $(ARCHCC_FLAGS) $(PLATFORM_FLAGS) -x c -E -P -DVFRCOMPILE --include $(MODULE_NAME)StrDefs.h

DLINK_FLAGS = -Wl,--emit-relocs -nostdlib -Wl,--gc-sections -u $(IMAGE_ENTRY_POINT) -Wl,-e,$(IMAGE_ENTRY_POINT),-Map,$(DEST_DIR_DEBUG)/$(BASE_NAME).map -z common-page-size=0x20 -Wl,--pic-veneer -Wl,--oformat=elf32-littlearm -flto -Os -L/workspace/edk2/ArmPkg/Library/GccLto -llto-arm -Wl,-plugin-opt=-pass-through=-llto-arm
DLINK = gcc

PLATFORM_FLAGS = -march=armv7-a

RSA2048SHA256SIGN = Rsa2048Sha256Sign
RSA2048SHA256SIGN_GUID =  A7717414-C616-4977-9420-844712A735BF


ASL = iasl
ASL_FLAGS = 
ASL_OUTFLAGS =  -p


ARCHCC_FLAGS = -mthumb

NASMB_FLAGS = -f bin

DLINK2_FLAGS = -Wl,--script=$(EDK_TOOLS_PATH)/Scripts/GccBase.lds -Wl,--defsym=PECOFF_HEADER_SIZE=0x220 -Wno-error

DTCPP_FLAGS = -E -x assembler-with-cpp -imacros AutoGen.h -nostdinc -undef
DTCPP = cpp


MAKE_FILE = $(MODULE_BUILD_DIR)/GNUmakefile

#
# Build Macro
#
OBJECT_FILES =  \
    $(OUTPUT_DIR)/Arm/ArchPrePeiCore.obj \
    $(OUTPUT_DIR)/Arm/Exception.obj \
    $(OUTPUT_DIR)/Arm/PrePeiCoreEntryPoint.obj \
    $(OUTPUT_DIR)/Arm/SwitchStack.obj \
    $(OUTPUT_DIR)/AutoGen.obj \
    $(OUTPUT_DIR)/MainUniCore.obj \
    $(OUTPUT_DIR)/PrePeiCore.obj

STATIC_LIBRARY_FILES =  \
    $(BIN_DIR)/ArmPkg/Library/ArmCacheMaintenanceLib/ArmCacheMaintenanceLib/OUTPUT/ArmCacheMaintenanceLib.lib \
    $(BIN_DIR)/ArmPkg/Library/ArmLib/ArmBaseLib/OUTPUT/ArmBaseLib.lib \
    $(BIN_DIR)/ArmPkg/Library/CompilerIntrinsicsLib/CompilerIntrinsicsLib/OUTPUT/CompilerIntrinsicsLib.lib \
    $(BIN_DIR)/ArmPkg/Library/DebugAgentSymbolsBaseLib/DebugAgentSymbolsBaseLib/OUTPUT/DebugAgentSymbolsBaseLib.lib \
    $(BIN_DIR)/ArmPkg/Library/DebugPeCoffExtraActionLib/DebugPeCoffExtraActionLib/OUTPUT/DebugUnixPeCoffExtraActionLib.lib \
    $(BIN_DIR)/ArmPlatformPkg/Library/ArmPlatformLibNull/ArmPlatformLibNull/OUTPUT/ArmPlatformLibNull.lib \
    $(BIN_DIR)/ArmPlatformPkg/Library/PL011UartLib/PL011UartLib/OUTPUT/PL011UartLib.lib \
    $(BIN_DIR)/ArmVirtPkg/Library/FdtPL011SerialPortLib/EarlyFdtPL011SerialPortLib/OUTPUT/EarlyFdtPL011SerialPortLib.lib \
    $(BIN_DIR)/EmbeddedPkg/Library/FdtLib/FdtLib/OUTPUT/FdtLib.lib \
    $(BIN_DIR)/MdePkg/Library/BaseDebugLibSerialPort/BaseDebugLibSerialPort/OUTPUT/BaseDebugLibSerialPort.lib \
    $(BIN_DIR)/MdePkg/Library/BaseDebugPrintErrorLevelLib/BaseDebugPrintErrorLevelLib/OUTPUT/BaseDebugPrintErrorLevelLib.lib \
    $(BIN_DIR)/MdePkg/Library/BaseIoLibIntrinsic/BaseIoLibIntrinsicArmVirt/OUTPUT/BaseIoLibIntrinsicArmVirt.lib \
    $(BIN_DIR)/MdePkg/Library/BaseLib/BaseLib/OUTPUT/BaseLib.lib \
    $(BIN_DIR)/MdePkg/Library/BaseMemoryLib/BaseMemoryLib/OUTPUT/BaseMemoryLib.lib \
    $(BIN_DIR)/MdePkg/Library/BasePcdLibNull/BasePcdLibNull/OUTPUT/BasePcdLibNull.lib \
    $(BIN_DIR)/MdePkg/Library/BasePeCoffLib/BasePeCoffLib/OUTPUT/BasePeCoffLib.lib \
    $(BIN_DIR)/MdePkg/Library/BasePrintLib/BasePrintLib/OUTPUT/BasePrintLib.lib \
    $(BIN_DIR)/MdePkg/Library/BaseStackCheckLib/BaseStackCheckLib/OUTPUT/BaseStackCheckLib.lib \
    $(OUTPUT_DIR)/ArmPlatformPrePeiCore.lib

INC =  \
    -I$(WORKSPACE)/ArmPlatformPkg/PrePeiCore/Arm \
    -I$(WORKSPACE)/ArmPlatformPkg/PrePeiCore \
    -I$(DEBUG_DIR) \
    -I$(WORKSPACE)/MdePkg \
    -I$(WORKSPACE)/MdePkg/Include \
    -I$(WORKSPACE)/MdePkg/Test/UnitTest/Include \
    -I$(WORKSPACE)/MdePkg/Include/Arm \
    -I$(WORKSPACE)/MdeModulePkg \
    -I$(WORKSPACE)/MdeModulePkg/Include \
    -I$(WORKSPACE)/ArmPkg \
    -I$(WORKSPACE)/ArmPkg/Include \
    -I$(WORKSPACE)/ArmPlatformPkg \
    -I$(WORKSPACE)/ArmPlatformPkg/Include

NASM_INC =  \
    -I$(WORKSPACE)/ArmPlatformPkg/PrePeiCore/Arm/ \
    -I$(WORKSPACE)/ArmPlatformPkg/PrePeiCore/ \
    -I$(DEBUG_DIR)/ \
    -I$(WORKSPACE)/MdePkg/ \
    -I$(WORKSPACE)/MdePkg/Include/ \
    -I$(WORKSPACE)/MdePkg/Test/UnitTest/Include/ \
    -I$(WORKSPACE)/MdePkg/Include/Arm/ \
    -I$(WORKSPACE)/MdeModulePkg/ \
    -I$(WORKSPACE)/MdeModulePkg/Include/ \
    -I$(WORKSPACE)/ArmPkg/ \
    -I$(WORKSPACE)/ArmPkg/Include/ \
    -I$(WORKSPACE)/ArmPlatformPkg/ \
    -I$(WORKSPACE)/ArmPlatformPkg/Include/

OBJECT_FILES_LIST = /workspace/edk2/Build/ArmVirtQemu-ARM/DEBUG_GCC5/ARM/ArmPlatformPkg/PrePeiCore/PrePeiCoreUniCore/OUTPUT/object_files.lst
STATIC_LIBRARY_FILES_LIST = /workspace/edk2/Build/ArmVirtQemu-ARM/DEBUG_GCC5/ARM/ArmPlatformPkg/PrePeiCore/PrePeiCoreUniCore/OUTPUT/static_library_files.lst
INC_LIST = /workspace/edk2/Build/ArmVirtQemu-ARM/DEBUG_GCC5/ARM/ArmPlatformPkg/PrePeiCore/PrePeiCoreUniCore/OUTPUT/inc.lst


#
# Overridable Target Macro Definitions
#
FORCE_REBUILD = force_build
INIT_TARGET = init
PCH_TARGET =
BC_TARGET = 
CODA_TARGET = /workspace/edk2/Build/ArmVirtQemu-ARM/DEBUG_GCC5/ARM/ArmPlatformPkg/PrePeiCore/PrePeiCoreUniCore/OUTPUT/ArmPlatformPrePeiCore.efi \
              $(FFS_OUTPUT_DIR)/$(MODULE_GUID).map \
              $(FFS_OUTPUT_DIR)/$(MODULE_GUID).efi \
              $(FFS_OUTPUT_DIR)/$(MODULE_GUID).ffs \
              

#
# Default target, which will build dependent libraries in addition to source files
#

all: mbuild


#
# Target used when called from platform makefile, which will bypass the build of dependent libraries
#

pbuild: $(INIT_TARGET) $(BC_TARGET) $(PCH_TARGET) $(CODA_TARGET)

#
# ModuleTarget
#

mbuild: $(INIT_TARGET) $(BC_TARGET) gen_libs $(PCH_TARGET) $(CODA_TARGET)

#
# Build Target used in multi-thread build mode, which will bypass the init and gen_libs targets
#

tbuild: $(BC_TARGET) $(PCH_TARGET) $(CODA_TARGET)

#
# Phony target which is used to force executing commands for a target
#
force_build:
	-@

#
# Target to update the FD
#

fds: mbuild gen_fds

#
# Initialization target: print build information and create necessary directories
#
init: info dirs

info:
	-@echo Building ... $(MODULE_DIR)/$(MODULE_FILE) [$(ARCH)]

dirs:
	-@$(MD) $(DEBUG_DIR)
	-@$(MD) $(OUTPUT_DIR)


strdefs:
	-@$(CP) $(DEBUG_DIR)/AutoGen.h $(DEBUG_DIR)/$(MODULE_NAME)StrDefs.h

#
# GenLibsTarget
#
gen_libs:
	@"$(MAKE)" $(MAKE_FLAGS) -f $(BIN_DIR)/MdePkg/Library/BaseMemoryLib/BaseMemoryLib/GNUmakefile
	@"$(MAKE)" $(MAKE_FLAGS) -f $(BIN_DIR)/MdePkg/Library/BasePcdLibNull/BasePcdLibNull/GNUmakefile
	@"$(MAKE)" $(MAKE_FLAGS) -f $(BIN_DIR)/MdePkg/Library/BaseLib/BaseLib/GNUmakefile
	@"$(MAKE)" $(MAKE_FLAGS) -f $(BIN_DIR)/MdePkg/Library/BaseIoLibIntrinsic/BaseIoLibIntrinsicArmVirt/GNUmakefile
	@"$(MAKE)" $(MAKE_FLAGS) -f $(BIN_DIR)/EmbeddedPkg/Library/FdtLib/FdtLib/GNUmakefile
	@"$(MAKE)" $(MAKE_FLAGS) -f $(BIN_DIR)/ArmPlatformPkg/Library/PL011UartLib/PL011UartLib/GNUmakefile
	@"$(MAKE)" $(MAKE_FLAGS) -f $(BIN_DIR)/MdePkg/Library/BaseDebugPrintErrorLevelLib/BaseDebugPrintErrorLevelLib/GNUmakefile
	@"$(MAKE)" $(MAKE_FLAGS) -f $(BIN_DIR)/ArmVirtPkg/Library/FdtPL011SerialPortLib/EarlyFdtPL011SerialPortLib/GNUmakefile
	@"$(MAKE)" $(MAKE_FLAGS) -f $(BIN_DIR)/MdePkg/Library/BasePrintLib/BasePrintLib/GNUmakefile
	@"$(MAKE)" $(MAKE_FLAGS) -f $(BIN_DIR)/MdePkg/Library/BaseDebugLibSerialPort/BaseDebugLibSerialPort/GNUmakefile
	@"$(MAKE)" $(MAKE_FLAGS) -f $(BIN_DIR)/ArmPkg/Library/DebugPeCoffExtraActionLib/DebugPeCoffExtraActionLib/GNUmakefile
	@"$(MAKE)" $(MAKE_FLAGS) -f $(BIN_DIR)/ArmPkg/Library/ArmLib/ArmBaseLib/GNUmakefile
	@"$(MAKE)" $(MAKE_FLAGS) -f $(BIN_DIR)/MdePkg/Library/BasePeCoffLib/BasePeCoffLib/GNUmakefile
	@"$(MAKE)" $(MAKE_FLAGS) -f $(BIN_DIR)/ArmPlatformPkg/Library/ArmPlatformLibNull/ArmPlatformLibNull/GNUmakefile
	@"$(MAKE)" $(MAKE_FLAGS) -f $(BIN_DIR)/ArmPkg/Library/ArmCacheMaintenanceLib/ArmCacheMaintenanceLib/GNUmakefile
	@"$(MAKE)" $(MAKE_FLAGS) -f $(BIN_DIR)/ArmPkg/Library/DebugAgentSymbolsBaseLib/DebugAgentSymbolsBaseLib/GNUmakefile
	@"$(MAKE)" $(MAKE_FLAGS) -f $(BIN_DIR)/MdePkg/Library/BaseStackCheckLib/BaseStackCheckLib/GNUmakefile
	@"$(MAKE)" $(MAKE_FLAGS) -f $(BIN_DIR)/ArmPkg/Library/CompilerIntrinsicsLib/CompilerIntrinsicsLib/GNUmakefile
	@cd $(MODULE_BUILD_DIR)

#
# Build Flash Device Image
#
gen_fds:
	@"$(MAKE)" $(MAKE_FLAGS) -f $(BUILD_DIR)/GNUmakefile fds
	@cd $(MODULE_BUILD_DIR)

include $(MODULE_BUILD_DIR)/dependency
include $(MODULE_BUILD_DIR)/deps_target

#
# Individual Object Build Targets
#
$(OUTPUT_DIR)/Arm/ArchPrePeiCore.obj : $(MAKE_FILE)
$(OUTPUT_DIR)/Arm/ArchPrePeiCore.obj : $(DEBUG_DIR)/AutoGen.h
$(OUTPUT_DIR)/Arm/ArchPrePeiCore.obj : $(WORKSPACE)/ArmPlatformPkg/PrePeiCore/Arm/ArchPrePeiCore.c
	"$(CC)" $(CC_FLAGS) $(CC_XIPFLAGS) -c -o /workspace/edk2/Build/ArmVirtQemu-ARM/DEBUG_GCC5/ARM/ArmPlatformPkg/PrePeiCore/PrePeiCoreUniCore/OUTPUT/Arm/ArchPrePeiCore.obj $(INC) /workspace/edk2/ArmPlatformPkg/PrePeiCore/Arm/ArchPrePeiCore.c

$(OUTPUT_DIR)/MainUniCore.obj : $(MAKE_FILE)
$(OUTPUT_DIR)/MainUniCore.obj : $(DEBUG_DIR)/AutoGen.h
$(OUTPUT_DIR)/MainUniCore.obj : $(WORKSPACE)/ArmPlatformPkg/PrePeiCore/MainUniCore.c
	"$(CC)" $(CC_FLAGS) $(CC_XIPFLAGS) -c -o /workspace/edk2/Build/ArmVirtQemu-ARM/DEBUG_GCC5/ARM/ArmPlatformPkg/PrePeiCore/PrePeiCoreUniCore/OUTPUT/./MainUniCore.obj $(INC) /workspace/edk2/ArmPlatformPkg/PrePeiCore/MainUniCore.c

$(OUTPUT_DIR)/PrePeiCore.obj : $(MAKE_FILE)
$(OUTPUT_DIR)/PrePeiCore.obj : $(DEBUG_DIR)/AutoGen.h
$(OUTPUT_DIR)/PrePeiCore.obj : $(WORKSPACE)/ArmPlatformPkg/PrePeiCore/PrePeiCore.c
	"$(CC)" $(CC_FLAGS) $(CC_XIPFLAGS) -c -o /workspace/edk2/Build/ArmVirtQemu-ARM/DEBUG_GCC5/ARM/ArmPlatformPkg/PrePeiCore/PrePeiCoreUniCore/OUTPUT/./PrePeiCore.obj $(INC) /workspace/edk2/ArmPlatformPkg/PrePeiCore/PrePeiCore.c

$(OUTPUT_DIR)/AutoGen.obj : $(MAKE_FILE)
$(OUTPUT_DIR)/AutoGen.obj : $(DEBUG_DIR)/AutoGen.h
$(OUTPUT_DIR)/AutoGen.obj : $(DEBUG_DIR)/AutoGen.c
	"$(CC)" $(CC_FLAGS) $(CC_XIPFLAGS) -c -o /workspace/edk2/Build/ArmVirtQemu-ARM/DEBUG_GCC5/ARM/ArmPlatformPkg/PrePeiCore/PrePeiCoreUniCore/OUTPUT/./AutoGen.obj $(INC) /workspace/edk2/Build/ArmVirtQemu-ARM/DEBUG_GCC5/ARM/ArmPlatformPkg/PrePeiCore/PrePeiCoreUniCore/DEBUG/AutoGen.c

$(OUTPUT_DIR)/ArmPlatformPrePeiCore.lib : $(OBJECT_FILES)
$(OUTPUT_DIR)/ArmPlatformPrePeiCore.lib : $(OBJECT_FILES_LIST)
	$(RM) /workspace/edk2/Build/ArmVirtQemu-ARM/DEBUG_GCC5/ARM/ArmPlatformPkg/PrePeiCore/PrePeiCoreUniCore/OUTPUT/ArmPlatformPrePeiCore.lib
	"$(SLINK)" cr /workspace/edk2/Build/ArmVirtQemu-ARM/DEBUG_GCC5/ARM/ArmPlatformPkg/PrePeiCore/PrePeiCoreUniCore/OUTPUT/ArmPlatformPrePeiCore.lib $(SLINK_FLAGS) @$(OBJECT_FILES_LIST)

$(DEBUG_DIR)/ArmPlatformPrePeiCore.dll : $(MAKE_FILE)
$(DEBUG_DIR)/ArmPlatformPrePeiCore.dll : $(STATIC_LIBRARY_FILES)
$(DEBUG_DIR)/ArmPlatformPrePeiCore.dll : $(STATIC_LIBRARY_FILES_LIST)
	"$(DLINK)" -o /workspace/edk2/Build/ArmVirtQemu-ARM/DEBUG_GCC5/ARM/ArmPlatformPkg/PrePeiCore/PrePeiCoreUniCore/DEBUG/ArmPlatformPrePeiCore.dll $(DLINK_FLAGS) $(DLINK_XIPFLAGS) -Wl,--start-group,@$(STATIC_LIBRARY_FILES_LIST),--end-group $(CC_FLAGS) $(CC_XIPFLAGS) $(DLINK2_FLAGS)
	"$(OBJCOPY)" $(OBJCOPY_FLAGS) /workspace/edk2/Build/ArmVirtQemu-ARM/DEBUG_GCC5/ARM/ArmPlatformPkg/PrePeiCore/PrePeiCoreUniCore/DEBUG/ArmPlatformPrePeiCore.dll

$(OUTPUT_DIR)/ArmPlatformPrePeiCore.efi : $(DEBUG_DIR)/ArmPlatformPrePeiCore.dll
	$(CP) /workspace/edk2/Build/ArmVirtQemu-ARM/DEBUG_GCC5/ARM/ArmPlatformPkg/PrePeiCore/PrePeiCoreUniCore/DEBUG/ArmPlatformPrePeiCore.dll $(DEBUG_DIR)/$(MODULE_NAME).debug
	$(OBJCOPY) --strip-unneeded -R .eh_frame /workspace/edk2/Build/ArmVirtQemu-ARM/DEBUG_GCC5/ARM/ArmPlatformPkg/PrePeiCore/PrePeiCoreUniCore/DEBUG/ArmPlatformPrePeiCore.dll
	-$(OBJCOPY) $(OBJCOPY_ADDDEBUGFLAG) /workspace/edk2/Build/ArmVirtQemu-ARM/DEBUG_GCC5/ARM/ArmPlatformPkg/PrePeiCore/PrePeiCoreUniCore/DEBUG/ArmPlatformPrePeiCore.dll
	-$(CP) $(DEBUG_DIR)/$(MODULE_NAME).debug $(BIN_DIR)/$(MODULE_NAME_GUID).debug
	"$(GENFW)" -e $(MODULE_TYPE) -o /workspace/edk2/Build/ArmVirtQemu-ARM/DEBUG_GCC5/ARM/ArmPlatformPkg/PrePeiCore/PrePeiCoreUniCore/OUTPUT/ArmPlatformPrePeiCore.efi /workspace/edk2/Build/ArmVirtQemu-ARM/DEBUG_GCC5/ARM/ArmPlatformPkg/PrePeiCore/PrePeiCoreUniCore/DEBUG/ArmPlatformPrePeiCore.dll $(GENFW_FLAGS)
	$(CP) /workspace/edk2/Build/ArmVirtQemu-ARM/DEBUG_GCC5/ARM/ArmPlatformPkg/PrePeiCore/PrePeiCoreUniCore/OUTPUT/ArmPlatformPrePeiCore.efi $(DEBUG_DIR)
	$(CP) /workspace/edk2/Build/ArmVirtQemu-ARM/DEBUG_GCC5/ARM/ArmPlatformPkg/PrePeiCore/PrePeiCoreUniCore/OUTPUT/ArmPlatformPrePeiCore.efi $(BIN_DIR)/$(MODULE_NAME_GUID).efi
	-$(CP) $(DEBUG_DIR)/*.map $(OUTPUT_DIR)

$(OUTPUT_DIR)/Arm/PrePeiCoreEntryPoint.obj : $(MAKE_FILE)
$(OUTPUT_DIR)/Arm/PrePeiCoreEntryPoint.obj : $(DEBUG_DIR)/AutoGen.h
$(OUTPUT_DIR)/Arm/PrePeiCoreEntryPoint.obj : $(WORKSPACE)/ArmPlatformPkg/PrePeiCore/Arm/PrePeiCoreEntryPoint.S
	Trim --asm-file -o /workspace/edk2/Build/ArmVirtQemu-ARM/DEBUG_GCC5/ARM/ArmPlatformPkg/PrePeiCore/PrePeiCoreUniCore/OUTPUT/Arm/PrePeiCoreEntryPoint.i -i $(INC_LIST) /workspace/edk2/ArmPlatformPkg/PrePeiCore/Arm/PrePeiCoreEntryPoint.S
	"$(PP)" $(DEPS_FLAGS) $(PP_FLAGS) $(INC) /workspace/edk2/ArmPlatformPkg/PrePeiCore/Arm/PrePeiCoreEntryPoint.S > /workspace/edk2/Build/ArmVirtQemu-ARM/DEBUG_GCC5/ARM/ArmPlatformPkg/PrePeiCore/PrePeiCoreUniCore/OUTPUT/Arm/PrePeiCoreEntryPoint.ii
	Trim --trim-long --source-code -o /workspace/edk2/Build/ArmVirtQemu-ARM/DEBUG_GCC5/ARM/ArmPlatformPkg/PrePeiCore/PrePeiCoreUniCore/OUTPUT/Arm/PrePeiCoreEntryPoint.iiii /workspace/edk2/Build/ArmVirtQemu-ARM/DEBUG_GCC5/ARM/ArmPlatformPkg/PrePeiCore/PrePeiCoreUniCore/OUTPUT/Arm/PrePeiCoreEntryPoint.ii
	"$(ASM)" $(ASM_FLAGS) -o /workspace/edk2/Build/ArmVirtQemu-ARM/DEBUG_GCC5/ARM/ArmPlatformPkg/PrePeiCore/PrePeiCoreUniCore/OUTPUT/Arm/PrePeiCoreEntryPoint.obj $(INC) /workspace/edk2/Build/ArmVirtQemu-ARM/DEBUG_GCC5/ARM/ArmPlatformPkg/PrePeiCore/PrePeiCoreUniCore/OUTPUT/Arm/PrePeiCoreEntryPoint.iiii

$(OUTPUT_DIR)/Arm/Exception.obj : $(MAKE_FILE)
$(OUTPUT_DIR)/Arm/Exception.obj : $(DEBUG_DIR)/AutoGen.h
$(OUTPUT_DIR)/Arm/Exception.obj : $(WORKSPACE)/ArmPlatformPkg/PrePeiCore/Arm/Exception.S
	Trim --asm-file -o /workspace/edk2/Build/ArmVirtQemu-ARM/DEBUG_GCC5/ARM/ArmPlatformPkg/PrePeiCore/PrePeiCoreUniCore/OUTPUT/Arm/Exception.i -i $(INC_LIST) /workspace/edk2/ArmPlatformPkg/PrePeiCore/Arm/Exception.S
	"$(PP)" $(DEPS_FLAGS) $(PP_FLAGS) $(INC) /workspace/edk2/ArmPlatformPkg/PrePeiCore/Arm/Exception.S > /workspace/edk2/Build/ArmVirtQemu-ARM/DEBUG_GCC5/ARM/ArmPlatformPkg/PrePeiCore/PrePeiCoreUniCore/OUTPUT/Arm/Exception.ii
	Trim --trim-long --source-code -o /workspace/edk2/Build/ArmVirtQemu-ARM/DEBUG_GCC5/ARM/ArmPlatformPkg/PrePeiCore/PrePeiCoreUniCore/OUTPUT/Arm/Exception.iiii /workspace/edk2/Build/ArmVirtQemu-ARM/DEBUG_GCC5/ARM/ArmPlatformPkg/PrePeiCore/PrePeiCoreUniCore/OUTPUT/Arm/Exception.ii
	"$(ASM)" $(ASM_FLAGS) -o /workspace/edk2/Build/ArmVirtQemu-ARM/DEBUG_GCC5/ARM/ArmPlatformPkg/PrePeiCore/PrePeiCoreUniCore/OUTPUT/Arm/Exception.obj $(INC) /workspace/edk2/Build/ArmVirtQemu-ARM/DEBUG_GCC5/ARM/ArmPlatformPkg/PrePeiCore/PrePeiCoreUniCore/OUTPUT/Arm/Exception.iiii

$(OUTPUT_DIR)/Arm/SwitchStack.obj : $(MAKE_FILE)
$(OUTPUT_DIR)/Arm/SwitchStack.obj : $(DEBUG_DIR)/AutoGen.h
$(OUTPUT_DIR)/Arm/SwitchStack.obj : $(WORKSPACE)/ArmPlatformPkg/PrePeiCore/Arm/SwitchStack.S
	Trim --asm-file -o /workspace/edk2/Build/ArmVirtQemu-ARM/DEBUG_GCC5/ARM/ArmPlatformPkg/PrePeiCore/PrePeiCoreUniCore/OUTPUT/Arm/SwitchStack.i -i $(INC_LIST) /workspace/edk2/ArmPlatformPkg/PrePeiCore/Arm/SwitchStack.S
	"$(PP)" $(DEPS_FLAGS) $(PP_FLAGS) $(INC) /workspace/edk2/ArmPlatformPkg/PrePeiCore/Arm/SwitchStack.S > /workspace/edk2/Build/ArmVirtQemu-ARM/DEBUG_GCC5/ARM/ArmPlatformPkg/PrePeiCore/PrePeiCoreUniCore/OUTPUT/Arm/SwitchStack.ii
	Trim --trim-long --source-code -o /workspace/edk2/Build/ArmVirtQemu-ARM/DEBUG_GCC5/ARM/ArmPlatformPkg/PrePeiCore/PrePeiCoreUniCore/OUTPUT/Arm/SwitchStack.iiii /workspace/edk2/Build/ArmVirtQemu-ARM/DEBUG_GCC5/ARM/ArmPlatformPkg/PrePeiCore/PrePeiCoreUniCore/OUTPUT/Arm/SwitchStack.ii
	"$(ASM)" $(ASM_FLAGS) -o /workspace/edk2/Build/ArmVirtQemu-ARM/DEBUG_GCC5/ARM/ArmPlatformPkg/PrePeiCore/PrePeiCoreUniCore/OUTPUT/Arm/SwitchStack.obj $(INC) /workspace/edk2/Build/ArmVirtQemu-ARM/DEBUG_GCC5/ARM/ArmPlatformPkg/PrePeiCore/PrePeiCoreUniCore/OUTPUT/Arm/SwitchStack.iiii

$(FFS_OUTPUT_DIR)/$(MODULE_GUID).map : $(OUTPUT_DIR)/ArmPlatformPrePeiCore.map
	test -f $(OUTPUT_DIR)/ArmPlatformPrePeiCore.map && $(CP) $(OUTPUT_DIR)/ArmPlatformPrePeiCore.map $(FFS_OUTPUT_DIR)/$(MODULE_GUID).map
$(FFS_OUTPUT_DIR)/$(MODULE_GUID).efi : $(OUTPUT_DIR)/ArmPlatformPrePeiCore.efi
	test -f $(OUTPUT_DIR)/ArmPlatformPrePeiCore.efi && $(CP) $(OUTPUT_DIR)/ArmPlatformPrePeiCore.efi $(FFS_OUTPUT_DIR)/$(MODULE_GUID).efi
$(FFS_OUTPUT_DIR)/$(MODULE_GUID).ffs : $(FFS_OUTPUT_DIR)/$(MODULE_GUID)SEC1.1.te
	GenFfs -t EFI_FV_FILETYPE_SECURITY_CORE -g $(MODULE_GUID) -x -o $(FFS_OUTPUT_DIR)/$(MODULE_GUID).ffs -oi $(FFS_OUTPUT_DIR)/$(MODULE_GUID)SEC1.1.te -n 0
$(FFS_OUTPUT_DIR)/$(MODULE_GUID)SEC1.1.te : $(FFS_OUTPUT_DIR)/$(MODULE_GUID)Te.raw
	-test -e $(FFS_OUTPUT_DIR)/$(MODULE_GUID)Te.raw && GenSec -s EFI_SECTION_TE -o $(FFS_OUTPUT_DIR)/$(MODULE_GUID)SEC1.1.te $(FFS_OUTPUT_DIR)/$(MODULE_GUID)Te.raw
$(FFS_OUTPUT_DIR)/$(MODULE_GUID)Te.raw : $(FFS_OUTPUT_DIR)/$(MODULE_GUID).stripped
	GenFw -t -o $(FFS_OUTPUT_DIR)/$(MODULE_GUID)Te.raw $(FFS_OUTPUT_DIR)/$(MODULE_GUID).stripped
$(FFS_OUTPUT_DIR)/$(MODULE_GUID).stripped : $(OUTPUT_DIR)/ArmPlatformPrePeiCore.efi
	GenFw -l -o $(FFS_OUTPUT_DIR)/$(MODULE_GUID).stripped $(OUTPUT_DIR)/ArmPlatformPrePeiCore.efi


#
# clean all intermediate files
#
clean:
	$(RD) $(OUTPUT_DIR)
		$(RM) AutoGenTimeStamp

#
# clean all generated files
#
cleanall:
	$(RD) $(DEBUG_DIR)
	$(RD) $(OUTPUT_DIR)
	$(RM) *.pdb *.idb > NUL 2>&1
	$(RM) $(BIN_DIR)/$(MODULE_NAME).efi
	$(RM) AutoGenTimeStamp

#
# clean all dependent libraries built
#
cleanlib:
	-@test -e $(BIN_DIR)/MdePkg/Library/BaseMemoryLib/BaseMemoryLib/GNUmakefile && "$(MAKE)" $(MAKE_FLAGS) -f $(BIN_DIR)/MdePkg/Library/BaseMemoryLib/BaseMemoryLib/GNUmakefile cleanall
	-@test -e $(BIN_DIR)/MdePkg/Library/BasePcdLibNull/BasePcdLibNull/GNUmakefile && "$(MAKE)" $(MAKE_FLAGS) -f $(BIN_DIR)/MdePkg/Library/BasePcdLibNull/BasePcdLibNull/GNUmakefile cleanall
	-@test -e $(BIN_DIR)/MdePkg/Library/BaseLib/BaseLib/GNUmakefile && "$(MAKE)" $(MAKE_FLAGS) -f $(BIN_DIR)/MdePkg/Library/BaseLib/BaseLib/GNUmakefile cleanall
	-@test -e $(BIN_DIR)/MdePkg/Library/BaseIoLibIntrinsic/BaseIoLibIntrinsicArmVirt/GNUmakefile && "$(MAKE)" $(MAKE_FLAGS) -f $(BIN_DIR)/MdePkg/Library/BaseIoLibIntrinsic/BaseIoLibIntrinsicArmVirt/GNUmakefile cleanall
	-@test -e $(BIN_DIR)/EmbeddedPkg/Library/FdtLib/FdtLib/GNUmakefile && "$(MAKE)" $(MAKE_FLAGS) -f $(BIN_DIR)/EmbeddedPkg/Library/FdtLib/FdtLib/GNUmakefile cleanall
	-@test -e $(BIN_DIR)/ArmPlatformPkg/Library/PL011UartLib/PL011UartLib/GNUmakefile && "$(MAKE)" $(MAKE_FLAGS) -f $(BIN_DIR)/ArmPlatformPkg/Library/PL011UartLib/PL011UartLib/GNUmakefile cleanall
	-@test -e $(BIN_DIR)/MdePkg/Library/BaseDebugPrintErrorLevelLib/BaseDebugPrintErrorLevelLib/GNUmakefile && "$(MAKE)" $(MAKE_FLAGS) -f $(BIN_DIR)/MdePkg/Library/BaseDebugPrintErrorLevelLib/BaseDebugPrintErrorLevelLib/GNUmakefile cleanall
	-@test -e $(BIN_DIR)/ArmVirtPkg/Library/FdtPL011SerialPortLib/EarlyFdtPL011SerialPortLib/GNUmakefile && "$(MAKE)" $(MAKE_FLAGS) -f $(BIN_DIR)/ArmVirtPkg/Library/FdtPL011SerialPortLib/EarlyFdtPL011SerialPortLib/GNUmakefile cleanall
	-@test -e $(BIN_DIR)/MdePkg/Library/BasePrintLib/BasePrintLib/GNUmakefile && "$(MAKE)" $(MAKE_FLAGS) -f $(BIN_DIR)/MdePkg/Library/BasePrintLib/BasePrintLib/GNUmakefile cleanall
	-@test -e $(BIN_DIR)/MdePkg/Library/BaseDebugLibSerialPort/BaseDebugLibSerialPort/GNUmakefile && "$(MAKE)" $(MAKE_FLAGS) -f $(BIN_DIR)/MdePkg/Library/BaseDebugLibSerialPort/BaseDebugLibSerialPort/GNUmakefile cleanall
	-@test -e $(BIN_DIR)/ArmPkg/Library/DebugPeCoffExtraActionLib/DebugPeCoffExtraActionLib/GNUmakefile && "$(MAKE)" $(MAKE_FLAGS) -f $(BIN_DIR)/ArmPkg/Library/DebugPeCoffExtraActionLib/DebugPeCoffExtraActionLib/GNUmakefile cleanall
	-@test -e $(BIN_DIR)/ArmPkg/Library/ArmLib/ArmBaseLib/GNUmakefile && "$(MAKE)" $(MAKE_FLAGS) -f $(BIN_DIR)/ArmPkg/Library/ArmLib/ArmBaseLib/GNUmakefile cleanall
	-@test -e $(BIN_DIR)/MdePkg/Library/BasePeCoffLib/BasePeCoffLib/GNUmakefile && "$(MAKE)" $(MAKE_FLAGS) -f $(BIN_DIR)/MdePkg/Library/BasePeCoffLib/BasePeCoffLib/GNUmakefile cleanall
	-@test -e $(BIN_DIR)/ArmPlatformPkg/Library/ArmPlatformLibNull/ArmPlatformLibNull/GNUmakefile && "$(MAKE)" $(MAKE_FLAGS) -f $(BIN_DIR)/ArmPlatformPkg/Library/ArmPlatformLibNull/ArmPlatformLibNull/GNUmakefile cleanall
	-@test -e $(BIN_DIR)/ArmPkg/Library/ArmCacheMaintenanceLib/ArmCacheMaintenanceLib/GNUmakefile && "$(MAKE)" $(MAKE_FLAGS) -f $(BIN_DIR)/ArmPkg/Library/ArmCacheMaintenanceLib/ArmCacheMaintenanceLib/GNUmakefile cleanall
	-@test -e $(BIN_DIR)/ArmPkg/Library/DebugAgentSymbolsBaseLib/DebugAgentSymbolsBaseLib/GNUmakefile && "$(MAKE)" $(MAKE_FLAGS) -f $(BIN_DIR)/ArmPkg/Library/DebugAgentSymbolsBaseLib/DebugAgentSymbolsBaseLib/GNUmakefile cleanall
	-@test -e $(BIN_DIR)/MdePkg/Library/BaseStackCheckLib/BaseStackCheckLib/GNUmakefile && "$(MAKE)" $(MAKE_FLAGS) -f $(BIN_DIR)/MdePkg/Library/BaseStackCheckLib/BaseStackCheckLib/GNUmakefile cleanall
	-@test -e $(BIN_DIR)/ArmPkg/Library/CompilerIntrinsicsLib/CompilerIntrinsicsLib/GNUmakefile && "$(MAKE)" $(MAKE_FLAGS) -f $(BIN_DIR)/ArmPkg/Library/CompilerIntrinsicsLib/CompilerIntrinsicsLib/GNUmakefile cleanall
	@cd $(MODULE_BUILD_DIR)

