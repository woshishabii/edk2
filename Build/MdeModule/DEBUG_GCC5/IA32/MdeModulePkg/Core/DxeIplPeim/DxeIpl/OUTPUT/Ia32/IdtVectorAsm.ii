# 1 "/workspace/edk2/MdeModulePkg/Core/DxeIplPeim/Ia32/IdtVectorAsm.nasm"
# 1 "<built-in>"
# 1 "<command-line>"
# 1 "/usr/include/stdc-predef.h" 1 3 4
# 1 "<command-line>" 2
# 1 "/workspace/edk2/Build/MdeModule/DEBUG_GCC5/IA32/MdeModulePkg/Core/DxeIplPeim/DxeIpl/DEBUG/AutoGen.h" 1
# 16 "/workspace/edk2/Build/MdeModule/DEBUG_GCC5/IA32/MdeModulePkg/Core/DxeIplPeim/DxeIpl/DEBUG/AutoGen.h"
# 1 "/workspace/edk2/MdePkg/Include/PiPei.h" 1
# 17 "/workspace/edk2/MdePkg/Include/PiPei.h"
# 1 "/workspace/edk2/MdePkg/Include/Uefi/UefiBaseType.h" 1
# 15 "/workspace/edk2/MdePkg/Include/Uefi/UefiBaseType.h"
# 1 "/workspace/edk2/MdePkg/Include/Base.h" 1
# 22 "/workspace/edk2/MdePkg/Include/Base.h"
# 1 "/workspace/edk2/MdePkg/Include/Ia32/ProcessorBind.h" 1
# 169 "/workspace/edk2/MdePkg/Include/Ia32/ProcessorBind.h"
  typedef unsigned long long UINT64;



  typedef long long INT64;



  typedef unsigned int UINT32;



  typedef int INT32;



  typedef unsigned short UINT16;




  typedef unsigned short CHAR16;



  typedef short INT16;




  typedef unsigned char BOOLEAN;



  typedef unsigned char UINT8;



  typedef char CHAR8;



  typedef signed char INT8;






typedef UINT32 UINTN;




typedef INT32 INTN;
# 23 "/workspace/edk2/MdePkg/Include/Base.h" 2
# 222 "/workspace/edk2/MdePkg/Include/Base.h"
typedef struct {
  UINT32 Data1;
  UINT16 Data2;
  UINT16 Data3;
  UINT8 Data4[8];
} GUID;




typedef struct {
  UINT8 Addr[4];
} IPv4_ADDRESS;




typedef struct {
  UINT8 Addr[16];
} IPv6_ADDRESS;




typedef UINT64 PHYSICAL_ADDRESS;




typedef struct _LIST_ENTRY LIST_ENTRY;




struct _LIST_ENTRY {
  LIST_ENTRY *ForwardLink;
  LIST_ENTRY *BackLink;
};
# 657 "/workspace/edk2/MdePkg/Include/Base.h"
typedef __builtin_va_list VA_LIST;
# 742 "/workspace/edk2/MdePkg/Include/Base.h"
typedef UINTN *BASE_LIST;
# 813 "/workspace/edk2/MdePkg/Include/Base.h"
_Static_assert (sizeof (BOOLEAN) == 1, "sizeof (BOOLEAN) does not meet UEFI Specification Data Type requirements");
_Static_assert (sizeof (INT8) == 1, "sizeof (INT8) does not meet UEFI Specification Data Type requirements");
_Static_assert (sizeof (UINT8) == 1, "sizeof (UINT8) does not meet UEFI Specification Data Type requirements");
_Static_assert (sizeof (INT16) == 2, "sizeof (INT16) does not meet UEFI Specification Data Type requirements");
_Static_assert (sizeof (UINT16) == 2, "sizeof (UINT16) does not meet UEFI Specification Data Type requirements");
_Static_assert (sizeof (INT32) == 4, "sizeof (INT32) does not meet UEFI Specification Data Type requirements");
_Static_assert (sizeof (UINT32) == 4, "sizeof (UINT32) does not meet UEFI Specification Data Type requirements");
_Static_assert (sizeof (INT64) == 8, "sizeof (INT64) does not meet UEFI Specification Data Type requirements");
_Static_assert (sizeof (UINT64) == 8, "sizeof (UINT64) does not meet UEFI Specification Data Type requirements");
_Static_assert (sizeof (CHAR8) == 1, "sizeof (CHAR8) does not meet UEFI Specification Data Type requirements");
_Static_assert (sizeof (CHAR16) == 2, "sizeof (CHAR16) does not meet UEFI Specification Data Type requirements");
# 832 "/workspace/edk2/MdePkg/Include/Base.h"
typedef enum {
  __VerifyUint8EnumValue = 0xff
} __VERIFY_UINT8_ENUM_SIZE;

typedef enum {
  __VerifyUint16EnumValue = 0xffff
} __VERIFY_UINT16_ENUM_SIZE;

typedef enum {
  __VerifyUint32EnumValue = 0xffffffff
} __VERIFY_UINT32_ENUM_SIZE;

_Static_assert (sizeof (__VERIFY_UINT8_ENUM_SIZE) == 4, "Size of enum does not meet UEFI Specification Data Type requirements");
_Static_assert (sizeof (__VERIFY_UINT16_ENUM_SIZE) == 4, "Size of enum does not meet UEFI Specification Data Type requirements");
_Static_assert (sizeof (__VERIFY_UINT32_ENUM_SIZE) == 4, "Size of enum does not meet UEFI Specification Data Type requirements");
# 960 "/workspace/edk2/MdePkg/Include/Base.h"
typedef UINTN RETURN_STATUS;
# 16 "/workspace/edk2/MdePkg/Include/Uefi/UefiBaseType.h" 2
# 24 "/workspace/edk2/MdePkg/Include/Uefi/UefiBaseType.h"
typedef GUID EFI_GUID;



typedef RETURN_STATUS EFI_STATUS;



typedef void *EFI_HANDLE;



typedef void *EFI_EVENT;



typedef UINTN EFI_TPL;



typedef UINT64 EFI_LBA;




typedef UINT64 EFI_PHYSICAL_ADDRESS;




typedef UINT64 EFI_VIRTUAL_ADDRESS;
# 67 "/workspace/edk2/MdePkg/Include/Uefi/UefiBaseType.h"
typedef struct {
  UINT16 Year;
  UINT8 Month;
  UINT8 Day;
  UINT8 Hour;
  UINT8 Minute;
  UINT8 Second;
  UINT8 Pad1;
  UINT32 Nanosecond;
  INT16 TimeZone;
  UINT8 Daylight;
  UINT8 Pad2;
} EFI_TIME;





typedef IPv4_ADDRESS EFI_IPv4_ADDRESS;




typedef IPv6_ADDRESS EFI_IPv6_ADDRESS;




typedef struct {
  UINT8 Addr[32];
} EFI_MAC_ADDRESS;





typedef union {
  UINT32 Addr[4];
  EFI_IPv4_ADDRESS v4;
  EFI_IPv6_ADDRESS v6;
} EFI_IP_ADDRESS;
# 18 "/workspace/edk2/MdePkg/Include/PiPei.h" 2
# 1 "/workspace/edk2/MdePkg/Include/Pi/PiPeiCis.h" 1
# 15 "/workspace/edk2/MdePkg/Include/Pi/PiPeiCis.h"
# 1 "/workspace/edk2/MdePkg/Include/Uefi/UefiMultiPhase.h" 1
# 34 "/workspace/edk2/MdePkg/Include/Uefi/UefiMultiPhase.h"
# 1 "/workspace/edk2/MdePkg/Include/Guid/WinCertificate.h" 1
# 24 "/workspace/edk2/MdePkg/Include/Guid/WinCertificate.h"
typedef struct {




  UINT32 dwLength;




  UINT16 wRevision;





  UINT16 wCertificateType;






} WIN_CERTIFICATE;
# 58 "/workspace/edk2/MdePkg/Include/Guid/WinCertificate.h"
typedef struct {
  EFI_GUID HashType;
  UINT8 PublicKey[256];
  UINT8 Signature[256];
} EFI_CERT_BLOCK_RSA_2048_SHA256;





typedef struct {




  WIN_CERTIFICATE Hdr;




  EFI_GUID CertType;






  UINT8 CertData[1];
} WIN_CERTIFICATE_UEFI_GUID;
# 97 "/workspace/edk2/MdePkg/Include/Guid/WinCertificate.h"
typedef struct {




  WIN_CERTIFICATE Hdr;




  EFI_GUID HashAlgorithm;
# 118 "/workspace/edk2/MdePkg/Include/Guid/WinCertificate.h"
} WIN_CERTIFICATE_EFI_PKCS1_15;

extern EFI_GUID gEfiCertTypeRsa2048Sha256Guid;
# 35 "/workspace/edk2/MdePkg/Include/Uefi/UefiMultiPhase.h" 2



typedef enum {



  EfiReservedMemoryType,




  EfiLoaderCode,




  EfiLoaderData,



  EfiBootServicesCode,




  EfiBootServicesData,



  EfiRuntimeServicesCode,




  EfiRuntimeServicesData,



  EfiConventionalMemory,



  EfiUnusableMemory,



  EfiACPIReclaimMemory,



  EfiACPIMemoryNVS,




  EfiMemoryMappedIO,




  EfiMemoryMappedIOPortSpace,



  EfiPalCode,




  EfiPersistentMemory,
  EfiMaxMemoryType
} EFI_MEMORY_TYPE;




typedef enum {






  EfiResetCold,





  EfiResetWarm,





  EfiResetShutdown,







  EfiResetPlatformSpecific
} EFI_RESET_TYPE;




typedef struct {





  UINT64 Signature;






  UINT32 Revision;



  UINT32 HeaderSize;




  UINT32 CRC32;



  UINT32 Reserved;
} EFI_TABLE_HEADER;
# 189 "/workspace/edk2/MdePkg/Include/Uefi/UefiMultiPhase.h"
typedef struct {






  UINT64 MonotonicCount;
# 205 "/workspace/edk2/MdePkg/Include/Uefi/UefiMultiPhase.h"
  WIN_CERTIFICATE_UEFI_GUID AuthInfo;
} EFI_VARIABLE_AUTHENTICATION;
# 216 "/workspace/edk2/MdePkg/Include/Uefi/UefiMultiPhase.h"
typedef struct {




  EFI_TIME TimeStamp;



  WIN_CERTIFICATE_UEFI_GUID AuthInfo;
 } EFI_VARIABLE_AUTHENTICATION_2;
# 16 "/workspace/edk2/MdePkg/Include/Pi/PiPeiCis.h" 2
# 1 "/workspace/edk2/MdePkg/Include/Pi/PiMultiPhase.h" 1
# 15 "/workspace/edk2/MdePkg/Include/Pi/PiMultiPhase.h"
# 1 "/workspace/edk2/MdePkg/Include/Pi/PiFirmwareVolume.h" 1
# 18 "/workspace/edk2/MdePkg/Include/Pi/PiFirmwareVolume.h"
typedef UINT32 EFI_FV_FILE_ATTRIBUTES;
# 30 "/workspace/edk2/MdePkg/Include/Pi/PiFirmwareVolume.h"
typedef UINT32 EFI_FVB_ATTRIBUTES_2;
# 85 "/workspace/edk2/MdePkg/Include/Pi/PiFirmwareVolume.h"
typedef struct {



  UINT32 NumBlocks;



  UINT32 Length;
} EFI_FV_BLOCK_MAP_ENTRY;




typedef struct {




  UINT8 ZeroVector[16];



  EFI_GUID FileSystemGuid;



  UINT64 FvLength;



  UINT32 Signature;



  EFI_FVB_ATTRIBUTES_2 Attributes;



  UINT16 HeaderLength;



  UINT16 Checksum;




  UINT16 ExtHeaderOffset;



  UINT8 Reserved[1];




  UINT8 Revision;




  EFI_FV_BLOCK_MAP_ENTRY BlockMap[1];
} EFI_FIRMWARE_VOLUME_HEADER;
# 160 "/workspace/edk2/MdePkg/Include/Pi/PiFirmwareVolume.h"
typedef struct {



  EFI_GUID FvName;



  UINT32 ExtHeaderSize;
} EFI_FIRMWARE_VOLUME_EXT_HEADER;




typedef struct {



  UINT16 ExtEntrySize;



  UINT16 ExtEntryType;
} EFI_FIRMWARE_VOLUME_EXT_ENTRY;





typedef struct {



  EFI_FIRMWARE_VOLUME_EXT_ENTRY Hdr;




  UINT32 TypeMask;





} EFI_FIRMWARE_VOLUME_EXT_ENTRY_OEM_TYPE;







typedef struct {



  EFI_FIRMWARE_VOLUME_EXT_ENTRY Hdr;



  EFI_GUID FormatType;





} EFI_FIRMWARE_VOLUME_EXT_ENTRY_GUID_TYPE;







typedef struct {



  EFI_FIRMWARE_VOLUME_EXT_ENTRY Hdr;





  UINT32 UsedSize;
} EFI_FIRMWARE_VOLUME_EXT_ENTRY_USED_SIZE_TYPE;
# 16 "/workspace/edk2/MdePkg/Include/Pi/PiMultiPhase.h" 2
# 1 "/workspace/edk2/MdePkg/Include/Pi/PiFirmwareFile.h" 1
# 20 "/workspace/edk2/MdePkg/Include/Pi/PiFirmwareFile.h"
typedef union {
  struct {





    UINT8 Header;
# 37 "/workspace/edk2/MdePkg/Include/Pi/PiFirmwareFile.h"
    UINT8 File;
  } Checksum;



  UINT16 Checksum16;
} EFI_FFS_INTEGRITY_CHECK;







typedef UINT8 EFI_FV_FILETYPE;
typedef UINT8 EFI_FFS_FILE_ATTRIBUTES;
typedef UINT8 EFI_FFS_FILE_STATE;
# 108 "/workspace/edk2/MdePkg/Include/Pi/PiFirmwareFile.h"
typedef struct {



  EFI_GUID Name;



  EFI_FFS_INTEGRITY_CHECK IntegrityCheck;



  EFI_FV_FILETYPE Type;



  EFI_FFS_FILE_ATTRIBUTES Attributes;



  UINT8 Size[3];



  EFI_FFS_FILE_STATE State;
} EFI_FFS_FILE_HEADER;

typedef struct {





  EFI_GUID Name;




  EFI_FFS_INTEGRITY_CHECK IntegrityCheck;




  EFI_FV_FILETYPE Type;




  EFI_FFS_FILE_ATTRIBUTES Attributes;
# 165 "/workspace/edk2/MdePkg/Include/Pi/PiFirmwareFile.h"
  UINT8 Size[3];




  EFI_FFS_FILE_STATE State;





  UINT64 ExtendedSize;
} EFI_FFS_FILE_HEADER2;
# 195 "/workspace/edk2/MdePkg/Include/Pi/PiFirmwareFile.h"
typedef UINT8 EFI_SECTION_TYPE;
# 232 "/workspace/edk2/MdePkg/Include/Pi/PiFirmwareFile.h"
typedef struct {




  UINT8 Size[3];
  EFI_SECTION_TYPE Type;



} EFI_COMMON_SECTION_HEADER;

typedef struct {




  UINT8 Size[3];

  EFI_SECTION_TYPE Type;





  UINT32 ExtendedSize;
} EFI_COMMON_SECTION_HEADER2;





typedef EFI_COMMON_SECTION_HEADER EFI_COMPATIBILITY16_SECTION;
typedef EFI_COMMON_SECTION_HEADER2 EFI_COMPATIBILITY16_SECTION2;
# 276 "/workspace/edk2/MdePkg/Include/Pi/PiFirmwareFile.h"
typedef struct {



  EFI_COMMON_SECTION_HEADER CommonHeader;



  UINT32 UncompressedLength;



  UINT8 CompressionType;
} EFI_COMPRESSION_SECTION;

typedef struct {



  EFI_COMMON_SECTION_HEADER2 CommonHeader;



  UINT32 UncompressedLength;



  UINT8 CompressionType;
} EFI_COMPRESSION_SECTION2;
# 315 "/workspace/edk2/MdePkg/Include/Pi/PiFirmwareFile.h"
typedef EFI_COMMON_SECTION_HEADER EFI_DISPOSABLE_SECTION;
typedef EFI_COMMON_SECTION_HEADER2 EFI_DISPOSABLE_SECTION2;




typedef EFI_COMMON_SECTION_HEADER EFI_DXE_DEPEX_SECTION;
typedef EFI_COMMON_SECTION_HEADER2 EFI_DXE_DEPEX_SECTION2;




typedef EFI_COMMON_SECTION_HEADER EFI_FIRMWARE_VOLUME_IMAGE_SECTION;
typedef EFI_COMMON_SECTION_HEADER2 EFI_FIRMWARE_VOLUME_IMAGE_SECTION2;




typedef struct {



  EFI_COMMON_SECTION_HEADER CommonHeader;



  EFI_GUID SubTypeGuid;
} EFI_FREEFORM_SUBTYPE_GUID_SECTION;

typedef struct {



  EFI_COMMON_SECTION_HEADER2 CommonHeader;



  EFI_GUID SubTypeGuid;
} EFI_FREEFORM_SUBTYPE_GUID_SECTION2;
# 363 "/workspace/edk2/MdePkg/Include/Pi/PiFirmwareFile.h"
typedef struct {



  EFI_COMMON_SECTION_HEADER CommonHeader;



  EFI_GUID SectionDefinitionGuid;



  UINT16 DataOffset;



  UINT16 Attributes;
} EFI_GUID_DEFINED_SECTION;

typedef struct {



  EFI_COMMON_SECTION_HEADER2 CommonHeader;



  EFI_GUID SectionDefinitionGuid;



  UINT16 DataOffset;



  UINT16 Attributes;
} EFI_GUID_DEFINED_SECTION2;




typedef EFI_COMMON_SECTION_HEADER EFI_PE32_SECTION;
typedef EFI_COMMON_SECTION_HEADER2 EFI_PE32_SECTION2;




typedef EFI_COMMON_SECTION_HEADER EFI_PEI_DEPEX_SECTION;
typedef EFI_COMMON_SECTION_HEADER2 EFI_PEI_DEPEX_SECTION2;
# 422 "/workspace/edk2/MdePkg/Include/Pi/PiFirmwareFile.h"
typedef EFI_COMMON_SECTION_HEADER EFI_PIC_SECTION;
typedef EFI_COMMON_SECTION_HEADER2 EFI_PIC_SECTION2;




typedef EFI_COMMON_SECTION_HEADER EFI_TE_SECTION;
typedef EFI_COMMON_SECTION_HEADER2 EFI_TE_SECTION2;




typedef EFI_COMMON_SECTION_HEADER EFI_RAW_SECTION;
typedef EFI_COMMON_SECTION_HEADER2 EFI_RAW_SECTION2;
# 445 "/workspace/edk2/MdePkg/Include/Pi/PiFirmwareFile.h"
typedef EFI_COMMON_SECTION_HEADER EFI_SMM_DEPEX_SECTION;
typedef EFI_COMMON_SECTION_HEADER2 EFI_SMM_DEPEX_SECTION2;





typedef struct {
  EFI_COMMON_SECTION_HEADER CommonHeader;




  CHAR16 FileNameString[1];
} EFI_USER_INTERFACE_SECTION;

typedef struct {
  EFI_COMMON_SECTION_HEADER2 CommonHeader;
  CHAR16 FileNameString[1];
} EFI_USER_INTERFACE_SECTION2;





typedef struct {
  EFI_COMMON_SECTION_HEADER CommonHeader;
  UINT16 BuildNumber;




  CHAR16 VersionString[1];
} EFI_VERSION_SECTION;

typedef struct {
  EFI_COMMON_SECTION_HEADER2 CommonHeader;




  UINT16 BuildNumber;
  CHAR16 VersionString[1];
} EFI_VERSION_SECTION2;
# 17 "/workspace/edk2/MdePkg/Include/Pi/PiMultiPhase.h" 2
# 1 "/workspace/edk2/MdePkg/Include/Pi/PiBootMode.h" 1
# 18 "/workspace/edk2/MdePkg/Include/Pi/PiBootMode.h"
typedef UINT32 EFI_BOOT_MODE;
# 18 "/workspace/edk2/MdePkg/Include/Pi/PiMultiPhase.h" 2
# 1 "/workspace/edk2/MdePkg/Include/Pi/PiHob.h" 1
# 36 "/workspace/edk2/MdePkg/Include/Pi/PiHob.h"
typedef struct {



  UINT16 HobType;



  UINT16 HobLength;



  UINT32 Reserved;
} EFI_HOB_GENERIC_HEADER;
# 61 "/workspace/edk2/MdePkg/Include/Pi/PiHob.h"
typedef struct {



  EFI_HOB_GENERIC_HEADER Header;





  UINT32 Version;



  EFI_BOOT_MODE BootMode;




  EFI_PHYSICAL_ADDRESS EfiMemoryTop;



  EFI_PHYSICAL_ADDRESS EfiMemoryBottom;




  EFI_PHYSICAL_ADDRESS EfiFreeMemoryTop;



  EFI_PHYSICAL_ADDRESS EfiFreeMemoryBottom;



  EFI_PHYSICAL_ADDRESS EfiEndOfHobList;
} EFI_HOB_HANDOFF_INFO_TABLE;






typedef struct {







  EFI_GUID Name;






  EFI_PHYSICAL_ADDRESS MemoryBaseAddress;




  UINT64 MemoryLength;






  EFI_MEMORY_TYPE MemoryType;




  UINT8 Reserved[4];
} EFI_HOB_MEMORY_ALLOCATION_HEADER;






typedef struct {



  EFI_HOB_GENERIC_HEADER Header;




  EFI_HOB_MEMORY_ALLOCATION_HEADER AllocDescriptor;




} EFI_HOB_MEMORY_ALLOCATION;







typedef struct {



  EFI_HOB_GENERIC_HEADER Header;




  EFI_HOB_MEMORY_ALLOCATION_HEADER AllocDescriptor;
} EFI_HOB_MEMORY_ALLOCATION_STACK;







typedef struct {



  EFI_HOB_GENERIC_HEADER Header;




  EFI_HOB_MEMORY_ALLOCATION_HEADER AllocDescriptor;
} EFI_HOB_MEMORY_ALLOCATION_BSP_STORE;




typedef struct {



  EFI_HOB_GENERIC_HEADER Header;




  EFI_HOB_MEMORY_ALLOCATION_HEADER MemoryAllocationHeader;




  EFI_GUID ModuleName;




  EFI_PHYSICAL_ADDRESS EntryPoint;
} EFI_HOB_MEMORY_ALLOCATION_MODULE;




typedef UINT32 EFI_RESOURCE_TYPE;
# 242 "/workspace/edk2/MdePkg/Include/Pi/PiHob.h"
typedef UINT32 EFI_RESOURCE_ATTRIBUTE_TYPE;
# 306 "/workspace/edk2/MdePkg/Include/Pi/PiHob.h"
typedef struct {



  EFI_HOB_GENERIC_HEADER Header;




  EFI_GUID Owner;



  EFI_RESOURCE_TYPE ResourceType;



  EFI_RESOURCE_ATTRIBUTE_TYPE ResourceAttribute;



  EFI_PHYSICAL_ADDRESS PhysicalStart;



  UINT64 ResourceLength;
} EFI_HOB_RESOURCE_DESCRIPTOR;





typedef struct {



  EFI_HOB_GENERIC_HEADER Header;



  EFI_GUID Name;



} EFI_HOB_GUID_TYPE;




typedef struct {



  EFI_HOB_GENERIC_HEADER Header;



  EFI_PHYSICAL_ADDRESS BaseAddress;



  UINT64 Length;
} EFI_HOB_FIRMWARE_VOLUME;





typedef struct {



  EFI_HOB_GENERIC_HEADER Header;



  EFI_PHYSICAL_ADDRESS BaseAddress;



  UINT64 Length;



  EFI_GUID FvName;



  EFI_GUID FileName;
} EFI_HOB_FIRMWARE_VOLUME2;





typedef struct {



  EFI_HOB_GENERIC_HEADER Header;



  EFI_PHYSICAL_ADDRESS BaseAddress;



  UINT64 Length;



  UINT32 AuthenticationStatus;




  BOOLEAN ExtractedFv;




  EFI_GUID FvName;




  EFI_GUID FileName;
} EFI_HOB_FIRMWARE_VOLUME3;




typedef struct {



  EFI_HOB_GENERIC_HEADER Header;



  UINT8 SizeOfMemorySpace;



  UINT8 SizeOfIoSpace;



  UINT8 Reserved[6];
} EFI_HOB_CPU;





typedef struct {



  EFI_HOB_GENERIC_HEADER Header;
} EFI_HOB_MEMORY_POOL;
# 475 "/workspace/edk2/MdePkg/Include/Pi/PiHob.h"
typedef struct {



  EFI_HOB_GENERIC_HEADER Header;






  EFI_PHYSICAL_ADDRESS BaseAddress;
  UINT64 Length;
} EFI_HOB_UEFI_CAPSULE;




typedef union {
  EFI_HOB_GENERIC_HEADER *Header;
  EFI_HOB_HANDOFF_INFO_TABLE *HandoffInformationTable;
  EFI_HOB_MEMORY_ALLOCATION *MemoryAllocation;
  EFI_HOB_MEMORY_ALLOCATION_BSP_STORE *MemoryAllocationBspStore;
  EFI_HOB_MEMORY_ALLOCATION_STACK *MemoryAllocationStack;
  EFI_HOB_MEMORY_ALLOCATION_MODULE *MemoryAllocationModule;
  EFI_HOB_RESOURCE_DESCRIPTOR *ResourceDescriptor;
  EFI_HOB_GUID_TYPE *Guid;
  EFI_HOB_FIRMWARE_VOLUME *FirmwareVolume;
  EFI_HOB_FIRMWARE_VOLUME2 *FirmwareVolume2;
  EFI_HOB_FIRMWARE_VOLUME3 *FirmwareVolume3;
  EFI_HOB_CPU *Cpu;
  EFI_HOB_MEMORY_POOL *Pool;
  EFI_HOB_UEFI_CAPSULE *Capsule;
  UINT8 *Raw;
} EFI_PEI_HOB_POINTERS;
# 19 "/workspace/edk2/MdePkg/Include/Pi/PiMultiPhase.h" 2
# 1 "/workspace/edk2/MdePkg/Include/Pi/PiDependency.h" 1
# 20 "/workspace/edk2/MdePkg/Include/Pi/PiMultiPhase.h" 2
# 1 "/workspace/edk2/MdePkg/Include/Pi/PiStatusCode.h" 1
# 19 "/workspace/edk2/MdePkg/Include/Pi/PiStatusCode.h"
# 1 "/workspace/edk2/MdePkg/Include/Protocol/DebugSupport.h" 1
# 19 "/workspace/edk2/MdePkg/Include/Protocol/DebugSupport.h"
# 1 "/workspace/edk2/MdePkg/Include/IndustryStandard/PeImage.h" 1
# 55 "/workspace/edk2/MdePkg/Include/IndustryStandard/PeImage.h"
typedef struct {
  UINT16 e_magic;
  UINT16 e_cblp;
  UINT16 e_cp;
  UINT16 e_crlc;
  UINT16 e_cparhdr;
  UINT16 e_minalloc;
  UINT16 e_maxalloc;
  UINT16 e_ss;
  UINT16 e_sp;
  UINT16 e_csum;
  UINT16 e_ip;
  UINT16 e_cs;
  UINT16 e_lfarlc;
  UINT16 e_ovno;
  UINT16 e_res[4];
  UINT16 e_oemid;
  UINT16 e_oeminfo;
  UINT16 e_res2[10];
  UINT32 e_lfanew;
} EFI_IMAGE_DOS_HEADER;




typedef struct {
  UINT16 Machine;
  UINT16 NumberOfSections;
  UINT32 TimeDateStamp;
  UINT32 PointerToSymbolTable;
  UINT32 NumberOfSymbols;
  UINT16 SizeOfOptionalHeader;
  UINT16 Characteristics;
} EFI_IMAGE_FILE_HEADER;
# 112 "/workspace/edk2/MdePkg/Include/IndustryStandard/PeImage.h"
typedef struct {
  UINT32 VirtualAddress;
  UINT32 Size;
} EFI_IMAGE_DATA_DIRECTORY;
# 145 "/workspace/edk2/MdePkg/Include/IndustryStandard/PeImage.h"
typedef struct {



  UINT16 Magic;
  UINT8 MajorLinkerVersion;
  UINT8 MinorLinkerVersion;
  UINT32 SizeOfCode;
  UINT32 SizeOfInitializedData;
  UINT32 SizeOfUninitializedData;
  UINT32 AddressOfEntryPoint;
  UINT32 BaseOfCode;
  UINT32 BaseOfData;



  UINT32 ImageBase;
  UINT32 SectionAlignment;
  UINT32 FileAlignment;
  UINT16 MajorOperatingSystemVersion;
  UINT16 MinorOperatingSystemVersion;
  UINT16 MajorImageVersion;
  UINT16 MinorImageVersion;
  UINT16 MajorSubsystemVersion;
  UINT16 MinorSubsystemVersion;
  UINT32 Win32VersionValue;
  UINT32 SizeOfImage;
  UINT32 SizeOfHeaders;
  UINT32 CheckSum;
  UINT16 Subsystem;
  UINT16 DllCharacteristics;
  UINT32 SizeOfStackReserve;
  UINT32 SizeOfStackCommit;
  UINT32 SizeOfHeapReserve;
  UINT32 SizeOfHeapCommit;
  UINT32 LoaderFlags;
  UINT32 NumberOfRvaAndSizes;
  EFI_IMAGE_DATA_DIRECTORY DataDirectory[16];
} EFI_IMAGE_OPTIONAL_HEADER32;
# 196 "/workspace/edk2/MdePkg/Include/IndustryStandard/PeImage.h"
typedef struct {



  UINT16 Magic;
  UINT8 MajorLinkerVersion;
  UINT8 MinorLinkerVersion;
  UINT32 SizeOfCode;
  UINT32 SizeOfInitializedData;
  UINT32 SizeOfUninitializedData;
  UINT32 AddressOfEntryPoint;
  UINT32 BaseOfCode;



  UINT64 ImageBase;
  UINT32 SectionAlignment;
  UINT32 FileAlignment;
  UINT16 MajorOperatingSystemVersion;
  UINT16 MinorOperatingSystemVersion;
  UINT16 MajorImageVersion;
  UINT16 MinorImageVersion;
  UINT16 MajorSubsystemVersion;
  UINT16 MinorSubsystemVersion;
  UINT32 Win32VersionValue;
  UINT32 SizeOfImage;
  UINT32 SizeOfHeaders;
  UINT32 CheckSum;
  UINT16 Subsystem;
  UINT16 DllCharacteristics;
  UINT64 SizeOfStackReserve;
  UINT64 SizeOfStackCommit;
  UINT64 SizeOfHeapReserve;
  UINT64 SizeOfHeapCommit;
  UINT32 LoaderFlags;
  UINT32 NumberOfRvaAndSizes;
  EFI_IMAGE_DATA_DIRECTORY DataDirectory[16];
} EFI_IMAGE_OPTIONAL_HEADER64;






typedef struct {
  UINT32 Signature;
  EFI_IMAGE_FILE_HEADER FileHeader;
  EFI_IMAGE_OPTIONAL_HEADER32 OptionalHeader;
} EFI_IMAGE_NT_HEADERS32;







typedef struct {
  UINT32 Signature;
  EFI_IMAGE_FILE_HEADER FileHeader;
  EFI_IMAGE_OPTIONAL_HEADER64 OptionalHeader;
} EFI_IMAGE_NT_HEADERS64;
# 278 "/workspace/edk2/MdePkg/Include/IndustryStandard/PeImage.h"
typedef struct {
  UINT8 Name[8];
  union {
    UINT32 PhysicalAddress;
    UINT32 VirtualSize;
  } Misc;
  UINT32 VirtualAddress;
  UINT32 SizeOfRawData;
  UINT32 PointerToRawData;
  UINT32 PointerToRelocations;
  UINT32 PointerToLinenumbers;
  UINT16 NumberOfRelocations;
  UINT16 NumberOfLinenumbers;
  UINT32 Characteristics;
} EFI_IMAGE_SECTION_HEADER;
# 428 "/workspace/edk2/MdePkg/Include/IndustryStandard/PeImage.h"
typedef struct {
  UINT32 VirtualAddress;
  UINT32 SymbolTableIndex;
  UINT16 Type;
} EFI_IMAGE_RELOCATION;
# 476 "/workspace/edk2/MdePkg/Include/IndustryStandard/PeImage.h"
typedef struct {
  UINT32 VirtualAddress;
  UINT32 SizeOfBlock;
} EFI_IMAGE_BASE_RELOCATION;
# 511 "/workspace/edk2/MdePkg/Include/IndustryStandard/PeImage.h"
typedef struct {
  union {
    UINT32 SymbolTableIndex;
    UINT32 VirtualAddress;
  } Type;
  UINT16 Linenumber;
} EFI_IMAGE_LINENUMBER;
# 537 "/workspace/edk2/MdePkg/Include/IndustryStandard/PeImage.h"
typedef struct {
  UINT8 Name[16];
  UINT8 Date[12];
  UINT8 UserID[6];
  UINT8 GroupID[6];
  UINT8 Mode[8];
  UINT8 Size[10];
  UINT8 EndHeader[2];
} EFI_IMAGE_ARCHIVE_MEMBER_HEADER;
# 560 "/workspace/edk2/MdePkg/Include/IndustryStandard/PeImage.h"
typedef struct {
  UINT32 Characteristics;
  UINT32 TimeDateStamp;
  UINT16 MajorVersion;
  UINT16 MinorVersion;
  UINT32 Name;
  UINT32 Base;
  UINT32 NumberOfFunctions;
  UINT32 NumberOfNames;
  UINT32 AddressOfFunctions;
  UINT32 AddressOfNames;
  UINT32 AddressOfNameOrdinals;
} EFI_IMAGE_EXPORT_DIRECTORY;




typedef struct {
  UINT16 Hint;
  UINT8 Name[1];
} EFI_IMAGE_IMPORT_BY_NAME;




typedef struct {
  union {
    UINT32 Function;
    UINT32 Ordinal;
    EFI_IMAGE_IMPORT_BY_NAME *AddressOfData;
  } u1;
} EFI_IMAGE_THUNK_DATA;
# 600 "/workspace/edk2/MdePkg/Include/IndustryStandard/PeImage.h"
typedef struct {
  UINT32 Characteristics;
  UINT32 TimeDateStamp;
  UINT32 ForwarderChain;
  UINT32 Name;
  EFI_IMAGE_THUNK_DATA *FirstThunk;
} EFI_IMAGE_IMPORT_DESCRIPTOR;





typedef struct {
  UINT32 Characteristics;
  UINT32 TimeDateStamp;
  UINT16 MajorVersion;
  UINT16 MinorVersion;
  UINT32 Type;
  UINT32 SizeOfData;
  UINT32 RVA;
  UINT32 FileOffset;
} EFI_IMAGE_DEBUG_DIRECTORY_ENTRY;







typedef struct {
  UINT32 Signature;
  UINT32 Unknown;
  UINT32 Unknown2;
  UINT32 Unknown3;



} EFI_IMAGE_DEBUG_CODEVIEW_NB10_ENTRY;





typedef struct {
  UINT32 Signature;
  UINT32 Unknown;
  UINT32 Unknown2;
  UINT32 Unknown3;
  UINT32 Unknown4;
  UINT32 Unknown5;



} EFI_IMAGE_DEBUG_CODEVIEW_RSDS_ENTRY;






typedef struct {
  UINT32 Signature;
  GUID MachOUuid;



} EFI_IMAGE_DEBUG_CODEVIEW_MTOC_ENTRY;




typedef struct {
  UINT32 Characteristics;
  UINT32 TimeDateStamp;
  UINT16 MajorVersion;
  UINT16 MinorVersion;
  UINT16 NumberOfNamedEntries;
  UINT16 NumberOfIdEntries;



} EFI_IMAGE_RESOURCE_DIRECTORY;




typedef struct {
  union {
    struct {
      UINT32 NameOffset:31;
      UINT32 NameIsString:1;
    } s;
    UINT32 Id;
  } u1;
  union {
    UINT32 OffsetToData;
    struct {
      UINT32 OffsetToDirectory:31;
      UINT32 DataIsDirectory:1;
    } s;
  } u2;
} EFI_IMAGE_RESOURCE_DIRECTORY_ENTRY;




typedef struct {
  UINT16 Length;
  CHAR16 String[1];
} EFI_IMAGE_RESOURCE_DIRECTORY_STRING;




typedef struct {
  UINT32 OffsetToData;
  UINT32 Size;
  UINT32 CodePage;
  UINT32 Reserved;
} EFI_IMAGE_RESOURCE_DATA_ENTRY;




typedef struct {
  UINT16 Signature;
  UINT16 Machine;
  UINT8 NumberOfSections;
  UINT8 Subsystem;
  UINT16 StrippedSize;
  UINT32 AddressOfEntryPoint;
  UINT32 BaseOfCode;
  UINT64 ImageBase;
  EFI_IMAGE_DATA_DIRECTORY DataDirectory[2];
} EFI_TE_IMAGE_HEADER;
# 749 "/workspace/edk2/MdePkg/Include/IndustryStandard/PeImage.h"
typedef union {
  EFI_IMAGE_NT_HEADERS32 Pe32;
  EFI_IMAGE_NT_HEADERS64 Pe32Plus;
  EFI_TE_IMAGE_HEADER Te;
} EFI_IMAGE_OPTIONAL_HEADER_UNION;

typedef union {
  EFI_IMAGE_NT_HEADERS32 *Pe32;
  EFI_IMAGE_NT_HEADERS64 *Pe32Plus;
  EFI_TE_IMAGE_HEADER *Te;
  EFI_IMAGE_OPTIONAL_HEADER_UNION *Union;
} EFI_IMAGE_OPTIONAL_HEADER_PTR_UNION;
# 20 "/workspace/edk2/MdePkg/Include/Protocol/DebugSupport.h" 2

typedef struct _EFI_DEBUG_SUPPORT_PROTOCOL EFI_DEBUG_SUPPORT_PROTOCOL;
# 35 "/workspace/edk2/MdePkg/Include/Protocol/DebugSupport.h"
typedef INTN EFI_EXCEPTION_TYPE;
# 62 "/workspace/edk2/MdePkg/Include/Protocol/DebugSupport.h"
typedef struct {
  UINT16 Fcw;
  UINT16 Fsw;
  UINT16 Ftw;
  UINT16 Opcode;
  UINT32 Eip;
  UINT16 Cs;
  UINT16 Reserved1;
  UINT32 DataOffset;
  UINT16 Ds;
  UINT8 Reserved2[10];
  UINT8 St0Mm0[10], Reserved3[6];
  UINT8 St1Mm1[10], Reserved4[6];
  UINT8 St2Mm2[10], Reserved5[6];
  UINT8 St3Mm3[10], Reserved6[6];
  UINT8 St4Mm4[10], Reserved7[6];
  UINT8 St5Mm5[10], Reserved8[6];
  UINT8 St6Mm6[10], Reserved9[6];
  UINT8 St7Mm7[10], Reserved10[6];
  UINT8 Xmm0[16];
  UINT8 Xmm1[16];
  UINT8 Xmm2[16];
  UINT8 Xmm3[16];
  UINT8 Xmm4[16];
  UINT8 Xmm5[16];
  UINT8 Xmm6[16];
  UINT8 Xmm7[16];
  UINT8 Reserved11[14 * 16];
} EFI_FX_SAVE_STATE_IA32;




typedef struct {
  UINT32 ExceptionData;
  EFI_FX_SAVE_STATE_IA32 FxSaveState;
  UINT32 Dr0;
  UINT32 Dr1;
  UINT32 Dr2;
  UINT32 Dr3;
  UINT32 Dr6;
  UINT32 Dr7;
  UINT32 Cr0;
  UINT32 Cr1;
  UINT32 Cr2;
  UINT32 Cr3;
  UINT32 Cr4;
  UINT32 Eflags;
  UINT32 Ldtr;
  UINT32 Tr;
  UINT32 Gdtr[2];
  UINT32 Idtr[2];
  UINT32 Eip;
  UINT32 Gs;
  UINT32 Fs;
  UINT32 Es;
  UINT32 Ds;
  UINT32 Cs;
  UINT32 Ss;
  UINT32 Edi;
  UINT32 Esi;
  UINT32 Ebp;
  UINT32 Esp;
  UINT32 Ebx;
  UINT32 Edx;
  UINT32 Ecx;
  UINT32 Eax;
} EFI_SYSTEM_CONTEXT_IA32;
# 156 "/workspace/edk2/MdePkg/Include/Protocol/DebugSupport.h"
typedef struct {
  UINT16 Fcw;
  UINT16 Fsw;
  UINT16 Ftw;
  UINT16 Opcode;
  UINT64 Rip;
  UINT64 DataOffset;
  UINT8 Reserved1[8];
  UINT8 St0Mm0[10], Reserved2[6];
  UINT8 St1Mm1[10], Reserved3[6];
  UINT8 St2Mm2[10], Reserved4[6];
  UINT8 St3Mm3[10], Reserved5[6];
  UINT8 St4Mm4[10], Reserved6[6];
  UINT8 St5Mm5[10], Reserved7[6];
  UINT8 St6Mm6[10], Reserved8[6];
  UINT8 St7Mm7[10], Reserved9[6];
  UINT8 Xmm0[16];
  UINT8 Xmm1[16];
  UINT8 Xmm2[16];
  UINT8 Xmm3[16];
  UINT8 Xmm4[16];
  UINT8 Xmm5[16];
  UINT8 Xmm6[16];
  UINT8 Xmm7[16];



  UINT8 Reserved11[14 * 16];
} EFI_FX_SAVE_STATE_X64;




typedef struct {
  UINT64 ExceptionData;
  EFI_FX_SAVE_STATE_X64 FxSaveState;
  UINT64 Dr0;
  UINT64 Dr1;
  UINT64 Dr2;
  UINT64 Dr3;
  UINT64 Dr6;
  UINT64 Dr7;
  UINT64 Cr0;
  UINT64 Cr1;
  UINT64 Cr2;
  UINT64 Cr3;
  UINT64 Cr4;
  UINT64 Cr8;
  UINT64 Rflags;
  UINT64 Ldtr;
  UINT64 Tr;
  UINT64 Gdtr[2];
  UINT64 Idtr[2];
  UINT64 Rip;
  UINT64 Gs;
  UINT64 Fs;
  UINT64 Es;
  UINT64 Ds;
  UINT64 Cs;
  UINT64 Ss;
  UINT64 Rdi;
  UINT64 Rsi;
  UINT64 Rbp;
  UINT64 Rsp;
  UINT64 Rbx;
  UINT64 Rdx;
  UINT64 Rcx;
  UINT64 Rax;
  UINT64 R8;
  UINT64 R9;
  UINT64 R10;
  UINT64 R11;
  UINT64 R12;
  UINT64 R13;
  UINT64 R14;
  UINT64 R15;
} EFI_SYSTEM_CONTEXT_X64;
# 282 "/workspace/edk2/MdePkg/Include/Protocol/DebugSupport.h"
typedef struct {




  UINT64 Reserved;
  UINT64 R1;
  UINT64 R2;
  UINT64 R3;
  UINT64 R4;
  UINT64 R5;
  UINT64 R6;
  UINT64 R7;
  UINT64 R8;
  UINT64 R9;
  UINT64 R10;
  UINT64 R11;
  UINT64 R12;
  UINT64 R13;
  UINT64 R14;
  UINT64 R15;
  UINT64 R16;
  UINT64 R17;
  UINT64 R18;
  UINT64 R19;
  UINT64 R20;
  UINT64 R21;
  UINT64 R22;
  UINT64 R23;
  UINT64 R24;
  UINT64 R25;
  UINT64 R26;
  UINT64 R27;
  UINT64 R28;
  UINT64 R29;
  UINT64 R30;
  UINT64 R31;

  UINT64 F2[2];
  UINT64 F3[2];
  UINT64 F4[2];
  UINT64 F5[2];
  UINT64 F6[2];
  UINT64 F7[2];
  UINT64 F8[2];
  UINT64 F9[2];
  UINT64 F10[2];
  UINT64 F11[2];
  UINT64 F12[2];
  UINT64 F13[2];
  UINT64 F14[2];
  UINT64 F15[2];
  UINT64 F16[2];
  UINT64 F17[2];
  UINT64 F18[2];
  UINT64 F19[2];
  UINT64 F20[2];
  UINT64 F21[2];
  UINT64 F22[2];
  UINT64 F23[2];
  UINT64 F24[2];
  UINT64 F25[2];
  UINT64 F26[2];
  UINT64 F27[2];
  UINT64 F28[2];
  UINT64 F29[2];
  UINT64 F30[2];
  UINT64 F31[2];

  UINT64 Pr;

  UINT64 B0;
  UINT64 B1;
  UINT64 B2;
  UINT64 B3;
  UINT64 B4;
  UINT64 B5;
  UINT64 B6;
  UINT64 B7;




  UINT64 ArRsc;
  UINT64 ArBsp;
  UINT64 ArBspstore;
  UINT64 ArRnat;

  UINT64 ArFcr;

  UINT64 ArEflag;
  UINT64 ArCsd;
  UINT64 ArSsd;
  UINT64 ArCflg;
  UINT64 ArFsr;
  UINT64 ArFir;
  UINT64 ArFdr;

  UINT64 ArCcv;

  UINT64 ArUnat;

  UINT64 ArFpsr;

  UINT64 ArPfs;
  UINT64 ArLc;
  UINT64 ArEc;




  UINT64 CrDcr;
  UINT64 CrItm;
  UINT64 CrIva;
  UINT64 CrPta;
  UINT64 CrIpsr;
  UINT64 CrIsr;
  UINT64 CrIip;
  UINT64 CrIfa;
  UINT64 CrItir;
  UINT64 CrIipa;
  UINT64 CrIfs;
  UINT64 CrIim;
  UINT64 CrIha;




  UINT64 Dbr0;
  UINT64 Dbr1;
  UINT64 Dbr2;
  UINT64 Dbr3;
  UINT64 Dbr4;
  UINT64 Dbr5;
  UINT64 Dbr6;
  UINT64 Dbr7;

  UINT64 Ibr0;
  UINT64 Ibr1;
  UINT64 Ibr2;
  UINT64 Ibr3;
  UINT64 Ibr4;
  UINT64 Ibr5;
  UINT64 Ibr6;
  UINT64 Ibr7;




  UINT64 IntNat;

} EFI_SYSTEM_CONTEXT_IPF;
# 457 "/workspace/edk2/MdePkg/Include/Protocol/DebugSupport.h"
typedef struct {
  UINT64 R0;
  UINT64 R1;
  UINT64 R2;
  UINT64 R3;
  UINT64 R4;
  UINT64 R5;
  UINT64 R6;
  UINT64 R7;
  UINT64 Flags;
  UINT64 ControlFlags;
  UINT64 Ip;
} EFI_SYSTEM_CONTEXT_EBC;
# 493 "/workspace/edk2/MdePkg/Include/Protocol/DebugSupport.h"
typedef struct {
  UINT32 R0;
  UINT32 R1;
  UINT32 R2;
  UINT32 R3;
  UINT32 R4;
  UINT32 R5;
  UINT32 R6;
  UINT32 R7;
  UINT32 R8;
  UINT32 R9;
  UINT32 R10;
  UINT32 R11;
  UINT32 R12;
  UINT32 SP;
  UINT32 LR;
  UINT32 PC;
  UINT32 CPSR;
  UINT32 DFSR;
  UINT32 DFAR;
  UINT32 IFSR;
  UINT32 IFAR;
} EFI_SYSTEM_CONTEXT_ARM;
# 531 "/workspace/edk2/MdePkg/Include/Protocol/DebugSupport.h"
typedef struct {

  UINT64 X0;
  UINT64 X1;
  UINT64 X2;
  UINT64 X3;
  UINT64 X4;
  UINT64 X5;
  UINT64 X6;
  UINT64 X7;
  UINT64 X8;
  UINT64 X9;
  UINT64 X10;
  UINT64 X11;
  UINT64 X12;
  UINT64 X13;
  UINT64 X14;
  UINT64 X15;
  UINT64 X16;
  UINT64 X17;
  UINT64 X18;
  UINT64 X19;
  UINT64 X20;
  UINT64 X21;
  UINT64 X22;
  UINT64 X23;
  UINT64 X24;
  UINT64 X25;
  UINT64 X26;
  UINT64 X27;
  UINT64 X28;
  UINT64 FP;
  UINT64 LR;
  UINT64 SP;


  UINT64 V0[2];
  UINT64 V1[2];
  UINT64 V2[2];
  UINT64 V3[2];
  UINT64 V4[2];
  UINT64 V5[2];
  UINT64 V6[2];
  UINT64 V7[2];
  UINT64 V8[2];
  UINT64 V9[2];
  UINT64 V10[2];
  UINT64 V11[2];
  UINT64 V12[2];
  UINT64 V13[2];
  UINT64 V14[2];
  UINT64 V15[2];
  UINT64 V16[2];
  UINT64 V17[2];
  UINT64 V18[2];
  UINT64 V19[2];
  UINT64 V20[2];
  UINT64 V21[2];
  UINT64 V22[2];
  UINT64 V23[2];
  UINT64 V24[2];
  UINT64 V25[2];
  UINT64 V26[2];
  UINT64 V27[2];
  UINT64 V28[2];
  UINT64 V29[2];
  UINT64 V30[2];
  UINT64 V31[2];

  UINT64 ELR;
  UINT64 SPSR;
  UINT64 FPSR;
  UINT64 ESR;
  UINT64 FAR;
} EFI_SYSTEM_CONTEXT_AARCH64;
# 626 "/workspace/edk2/MdePkg/Include/Protocol/DebugSupport.h"
typedef struct {
  UINT64 X0;
  UINT64 X1;
  UINT64 X2;
  UINT64 X3;
  UINT64 X4;
  UINT64 X5;
  UINT64 X6;
  UINT64 X7;
  UINT64 X8;
  UINT64 X9;
  UINT64 X10;
  UINT64 X11;
  UINT64 X12;
  UINT64 X13;
  UINT64 X14;
  UINT64 X15;
  UINT64 X16;
  UINT64 X17;
  UINT64 X18;
  UINT64 X19;
  UINT64 X20;
  UINT64 X21;
  UINT64 X22;
  UINT64 X23;
  UINT64 X24;
  UINT64 X25;
  UINT64 X26;
  UINT64 X27;
  UINT64 X28;
  UINT64 X29;
  UINT64 X30;
  UINT64 X31;
} EFI_SYSTEM_CONTEXT_RISCV64;




typedef union {
  EFI_SYSTEM_CONTEXT_EBC *SystemContextEbc;
  EFI_SYSTEM_CONTEXT_IA32 *SystemContextIa32;
  EFI_SYSTEM_CONTEXT_X64 *SystemContextX64;
  EFI_SYSTEM_CONTEXT_IPF *SystemContextIpf;
  EFI_SYSTEM_CONTEXT_ARM *SystemContextArm;
  EFI_SYSTEM_CONTEXT_AARCH64 *SystemContextAArch64;
  EFI_SYSTEM_CONTEXT_RISCV64 *SystemContextRiscV64;
} EFI_SYSTEM_CONTEXT;
# 685 "/workspace/edk2/MdePkg/Include/Protocol/DebugSupport.h"
typedef
void
(__attribute__((cdecl)) *EFI_EXCEPTION_CALLBACK)(
  EFI_EXCEPTION_TYPE ExceptionType,
  EFI_SYSTEM_CONTEXT SystemContext
  );







typedef
void
(__attribute__((cdecl)) *EFI_PERIODIC_CALLBACK)(
  EFI_SYSTEM_CONTEXT SystemContext
  );




typedef enum {
  IsaIa32 = 0x014c,
  IsaX64 = 0x8664,
  IsaIpf = 0x0200,
  IsaEbc = 0x0EBC,
  IsaArm = 0x01c2,
  IsaAArch64 = 0xAA64
} EFI_INSTRUCTION_SET_ARCHITECTURE;
# 732 "/workspace/edk2/MdePkg/Include/Protocol/DebugSupport.h"
typedef
EFI_STATUS
(__attribute__((cdecl)) *EFI_GET_MAXIMUM_PROCESSOR_INDEX)(
  EFI_DEBUG_SUPPORT_PROTOCOL *This,
  UINTN *MaxProcessorIndex
  );
# 754 "/workspace/edk2/MdePkg/Include/Protocol/DebugSupport.h"
typedef
EFI_STATUS
(__attribute__((cdecl)) *EFI_REGISTER_PERIODIC_CALLBACK)(
  EFI_DEBUG_SUPPORT_PROTOCOL *This,
  UINTN ProcessorIndex,
  EFI_PERIODIC_CALLBACK PeriodicCallback
  );
# 778 "/workspace/edk2/MdePkg/Include/Protocol/DebugSupport.h"
typedef
EFI_STATUS
(__attribute__((cdecl)) *EFI_REGISTER_EXCEPTION_CALLBACK)(
  EFI_DEBUG_SUPPORT_PROTOCOL *This,
  UINTN ProcessorIndex,
  EFI_EXCEPTION_CALLBACK ExceptionCallback,
  EFI_EXCEPTION_TYPE ExceptionType
  );
# 800 "/workspace/edk2/MdePkg/Include/Protocol/DebugSupport.h"
typedef
EFI_STATUS
(__attribute__((cdecl)) *EFI_INVALIDATE_INSTRUCTION_CACHE)(
  EFI_DEBUG_SUPPORT_PROTOCOL *This,
  UINTN ProcessorIndex,
  void *Start,
  UINT64 Length
  );






struct _EFI_DEBUG_SUPPORT_PROTOCOL {



  EFI_INSTRUCTION_SET_ARCHITECTURE Isa;
  EFI_GET_MAXIMUM_PROCESSOR_INDEX GetMaximumProcessorIndex;
  EFI_REGISTER_PERIODIC_CALLBACK RegisterPeriodicCallback;
  EFI_REGISTER_EXCEPTION_CALLBACK RegisterExceptionCallback;
  EFI_INVALIDATE_INSTRUCTION_CACHE InvalidateInstructionCache;
};

extern EFI_GUID gEfiDebugSupportProtocolGuid;
# 20 "/workspace/edk2/MdePkg/Include/Pi/PiStatusCode.h" 2




typedef UINT32 EFI_STATUS_CODE_TYPE;
# 67 "/workspace/edk2/MdePkg/Include/Pi/PiStatusCode.h"
typedef UINT32 EFI_STATUS_CODE_VALUE;
# 84 "/workspace/edk2/MdePkg/Include/Pi/PiStatusCode.h"
typedef struct {



  UINT16 HeaderSize;



  UINT16 Size;



  EFI_GUID Type;
} EFI_STATUS_CODE_DATA;
# 21 "/workspace/edk2/MdePkg/Include/Pi/PiMultiPhase.h" 2
# 1 "/workspace/edk2/MdePkg/Include/Pi/PiS3BootScript.h" 1
# 37 "/workspace/edk2/MdePkg/Include/Pi/PiS3BootScript.h"
typedef enum {
  EfiBootScriptWidthUint8,
  EfiBootScriptWidthUint16,
  EfiBootScriptWidthUint32,
  EfiBootScriptWidthUint64,
  EfiBootScriptWidthFifoUint8,
  EfiBootScriptWidthFifoUint16,
  EfiBootScriptWidthFifoUint32,
  EfiBootScriptWidthFifoUint64,
  EfiBootScriptWidthFillUint8,
  EfiBootScriptWidthFillUint16,
  EfiBootScriptWidthFillUint32,
  EfiBootScriptWidthFillUint64,
  EfiBootScriptWidthMaximum
} EFI_BOOT_SCRIPT_WIDTH;
# 22 "/workspace/edk2/MdePkg/Include/Pi/PiMultiPhase.h" 2
# 109 "/workspace/edk2/MdePkg/Include/Pi/PiMultiPhase.h"
typedef struct {





  EFI_PHYSICAL_ADDRESS PhysicalStart;




  EFI_PHYSICAL_ADDRESS CpuStart;



  UINT64 PhysicalSize;






  UINT64 RegionState;
} EFI_MMRAM_DESCRIPTOR;

typedef EFI_MMRAM_DESCRIPTOR EFI_SMRAM_DESCRIPTOR;

typedef enum {
  EFI_PCD_TYPE_8,
  EFI_PCD_TYPE_16,
  EFI_PCD_TYPE_32,
  EFI_PCD_TYPE_64,
  EFI_PCD_TYPE_BOOL,
  EFI_PCD_TYPE_PTR
} EFI_PCD_TYPE;

typedef struct {




  EFI_PCD_TYPE PcdType;




  UINTN PcdSize;






  CHAR8 *PcdName;
} EFI_PCD_INFO;
# 173 "/workspace/edk2/MdePkg/Include/Pi/PiMultiPhase.h"
typedef
void
(__attribute__((cdecl)) *EFI_AP_PROCEDURE)(
  void *Buffer
  );
# 189 "/workspace/edk2/MdePkg/Include/Pi/PiMultiPhase.h"
typedef
EFI_STATUS
(__attribute__((cdecl)) *EFI_AP_PROCEDURE2)(
  void *ProcedureArgument
);
# 17 "/workspace/edk2/MdePkg/Include/Pi/PiPeiCis.h" 2




typedef void *EFI_PEI_FV_HANDLE;




typedef void *EFI_PEI_FILE_HANDLE;




typedef struct _EFI_PEI_SERVICES EFI_PEI_SERVICES;




typedef struct _EFI_PEI_NOTIFY_DESCRIPTOR EFI_PEI_NOTIFY_DESCRIPTOR;


# 1 "/workspace/edk2/MdePkg/Include/Ppi/CpuIo.h" 1
# 19 "/workspace/edk2/MdePkg/Include/Ppi/CpuIo.h"
typedef struct _EFI_PEI_CPU_IO_PPI EFI_PEI_CPU_IO_PPI;




typedef enum {
  EfiPeiCpuIoWidthUint8,
  EfiPeiCpuIoWidthUint16,
  EfiPeiCpuIoWidthUint32,
  EfiPeiCpuIoWidthUint64,
  EfiPeiCpuIoWidthFifoUint8,
  EfiPeiCpuIoWidthFifoUint16,
  EfiPeiCpuIoWidthFifoUint32,
  EfiPeiCpuIoWidthFifoUint64,
  EfiPeiCpuIoWidthFillUint8,
  EfiPeiCpuIoWidthFillUint16,
  EfiPeiCpuIoWidthFillUint32,
  EfiPeiCpuIoWidthFillUint64,
  EfiPeiCpuIoWidthMaximum
} EFI_PEI_CPU_IO_PPI_WIDTH;
# 55 "/workspace/edk2/MdePkg/Include/Ppi/CpuIo.h"
typedef
EFI_STATUS
(__attribute__((cdecl)) *EFI_PEI_CPU_IO_PPI_IO_MEM)(
  const EFI_PEI_SERVICES **PeiServices,
  const EFI_PEI_CPU_IO_PPI *This,
  EFI_PEI_CPU_IO_PPI_WIDTH Width,
  UINT64 Address,
  UINTN Count,
  void *Buffer
  );




typedef struct {



  EFI_PEI_CPU_IO_PPI_IO_MEM Read;



  EFI_PEI_CPU_IO_PPI_IO_MEM Write;
} EFI_PEI_CPU_IO_PPI_ACCESS;
# 91 "/workspace/edk2/MdePkg/Include/Ppi/CpuIo.h"
typedef
UINT8
(__attribute__((cdecl)) *EFI_PEI_CPU_IO_PPI_IO_READ8)(
  const EFI_PEI_SERVICES **PeiServices,
  const EFI_PEI_CPU_IO_PPI *This,
  UINT64 Address
  );
# 110 "/workspace/edk2/MdePkg/Include/Ppi/CpuIo.h"
typedef
UINT16
(__attribute__((cdecl)) *EFI_PEI_CPU_IO_PPI_IO_READ16)(
  const EFI_PEI_SERVICES **PeiServices,
  const EFI_PEI_CPU_IO_PPI *This,
  UINT64 Address
  );
# 129 "/workspace/edk2/MdePkg/Include/Ppi/CpuIo.h"
typedef
UINT32
(__attribute__((cdecl)) *EFI_PEI_CPU_IO_PPI_IO_READ32)(
  const EFI_PEI_SERVICES **PeiServices,
  const EFI_PEI_CPU_IO_PPI *This,
  UINT64 Address
  );
# 148 "/workspace/edk2/MdePkg/Include/Ppi/CpuIo.h"
typedef
UINT64
(__attribute__((cdecl)) *EFI_PEI_CPU_IO_PPI_IO_READ64)(
  const EFI_PEI_SERVICES **PeiServices,
  const EFI_PEI_CPU_IO_PPI *This,
  UINT64 Address
  );
# 166 "/workspace/edk2/MdePkg/Include/Ppi/CpuIo.h"
typedef
void
(__attribute__((cdecl)) *EFI_PEI_CPU_IO_PPI_IO_WRITE8)(
  const EFI_PEI_SERVICES **PeiServices,
  const EFI_PEI_CPU_IO_PPI *This,
  UINT64 Address,
  UINT8 Data
  );
# 185 "/workspace/edk2/MdePkg/Include/Ppi/CpuIo.h"
typedef
void
(__attribute__((cdecl)) *EFI_PEI_CPU_IO_PPI_IO_WRITE16)(
  const EFI_PEI_SERVICES **PeiServices,
  const EFI_PEI_CPU_IO_PPI *This,
  UINT64 Address,
  UINT16 Data
  );
# 204 "/workspace/edk2/MdePkg/Include/Ppi/CpuIo.h"
typedef
void
(__attribute__((cdecl)) *EFI_PEI_CPU_IO_PPI_IO_WRITE32)(
  const EFI_PEI_SERVICES **PeiServices,
  const EFI_PEI_CPU_IO_PPI *This,
  UINT64 Address,
  UINT32 Data
  );
# 223 "/workspace/edk2/MdePkg/Include/Ppi/CpuIo.h"
typedef
void
(__attribute__((cdecl)) *EFI_PEI_CPU_IO_PPI_IO_WRITE64)(
  const EFI_PEI_SERVICES **PeiServices,
  const EFI_PEI_CPU_IO_PPI *This,
  UINT64 Address,
  UINT64 Data
  );
# 243 "/workspace/edk2/MdePkg/Include/Ppi/CpuIo.h"
typedef
UINT8
(__attribute__((cdecl)) *EFI_PEI_CPU_IO_PPI_MEM_READ8)(
  const EFI_PEI_SERVICES **PeiServices,
  const EFI_PEI_CPU_IO_PPI *This,
  UINT64 Address
  );
# 262 "/workspace/edk2/MdePkg/Include/Ppi/CpuIo.h"
typedef
UINT16
(__attribute__((cdecl)) *EFI_PEI_CPU_IO_PPI_MEM_READ16)(
  const EFI_PEI_SERVICES **PeiServices,
  const EFI_PEI_CPU_IO_PPI *This,
  UINT64 Address
  );
# 281 "/workspace/edk2/MdePkg/Include/Ppi/CpuIo.h"
typedef
UINT32
(__attribute__((cdecl)) *EFI_PEI_CPU_IO_PPI_MEM_READ32)(
  const EFI_PEI_SERVICES **PeiServices,
  const EFI_PEI_CPU_IO_PPI *This,
  UINT64 Address
  );
# 300 "/workspace/edk2/MdePkg/Include/Ppi/CpuIo.h"
typedef
UINT64
(__attribute__((cdecl)) *EFI_PEI_CPU_IO_PPI_MEM_READ64)(
  const EFI_PEI_SERVICES **PeiServices,
  const EFI_PEI_CPU_IO_PPI *This,
  UINT64 Address
  );
# 318 "/workspace/edk2/MdePkg/Include/Ppi/CpuIo.h"
typedef
void
(__attribute__((cdecl)) *EFI_PEI_CPU_IO_PPI_MEM_WRITE8)(
  const EFI_PEI_SERVICES **PeiServices,
  const EFI_PEI_CPU_IO_PPI *This,
  UINT64 Address,
  UINT8 Data
  );
# 337 "/workspace/edk2/MdePkg/Include/Ppi/CpuIo.h"
typedef
void
(__attribute__((cdecl)) *EFI_PEI_CPU_IO_PPI_MEM_WRITE16)(
  const EFI_PEI_SERVICES **PeiServices,
  const EFI_PEI_CPU_IO_PPI *This,
  UINT64 Address,
  UINT16 Data
  );
# 356 "/workspace/edk2/MdePkg/Include/Ppi/CpuIo.h"
typedef
void
(__attribute__((cdecl)) *EFI_PEI_CPU_IO_PPI_MEM_WRITE32)(
  const EFI_PEI_SERVICES **PeiServices,
  const EFI_PEI_CPU_IO_PPI *This,
  UINT64 Address,
  UINT32 Data
  );
# 375 "/workspace/edk2/MdePkg/Include/Ppi/CpuIo.h"
typedef
void
(__attribute__((cdecl)) *EFI_PEI_CPU_IO_PPI_MEM_WRITE64)(
  const EFI_PEI_SERVICES **PeiServices,
  const EFI_PEI_CPU_IO_PPI *This,
  UINT64 Address,
  UINT64 Data
  );






struct _EFI_PEI_CPU_IO_PPI {



  EFI_PEI_CPU_IO_PPI_ACCESS Mem;



  EFI_PEI_CPU_IO_PPI_ACCESS Io;

  EFI_PEI_CPU_IO_PPI_IO_READ8 IoRead8;
  EFI_PEI_CPU_IO_PPI_IO_READ16 IoRead16;
  EFI_PEI_CPU_IO_PPI_IO_READ32 IoRead32;
  EFI_PEI_CPU_IO_PPI_IO_READ64 IoRead64;

  EFI_PEI_CPU_IO_PPI_IO_WRITE8 IoWrite8;
  EFI_PEI_CPU_IO_PPI_IO_WRITE16 IoWrite16;
  EFI_PEI_CPU_IO_PPI_IO_WRITE32 IoWrite32;
  EFI_PEI_CPU_IO_PPI_IO_WRITE64 IoWrite64;

  EFI_PEI_CPU_IO_PPI_MEM_READ8 MemRead8;
  EFI_PEI_CPU_IO_PPI_MEM_READ16 MemRead16;
  EFI_PEI_CPU_IO_PPI_MEM_READ32 MemRead32;
  EFI_PEI_CPU_IO_PPI_MEM_READ64 MemRead64;

  EFI_PEI_CPU_IO_PPI_MEM_WRITE8 MemWrite8;
  EFI_PEI_CPU_IO_PPI_MEM_WRITE16 MemWrite16;
  EFI_PEI_CPU_IO_PPI_MEM_WRITE32 MemWrite32;
  EFI_PEI_CPU_IO_PPI_MEM_WRITE64 MemWrite64;
};

extern EFI_GUID gEfiPeiCpuIoPpiInstalledGuid;
# 40 "/workspace/edk2/MdePkg/Include/Pi/PiPeiCis.h" 2
# 1 "/workspace/edk2/MdePkg/Include/Ppi/PciCfg2.h" 1
# 18 "/workspace/edk2/MdePkg/Include/Ppi/PciCfg2.h"
# 1 "/workspace/edk2/MdePkg/Include/Library/BaseLib.h" 1
# 24 "/workspace/edk2/MdePkg/Include/Library/BaseLib.h"
typedef struct {
  UINT32 Ebx;
  UINT32 Esi;
  UINT32 Edi;
  UINT32 Ebp;
  UINT32 Esp;
  UINT32 Eip;
  UINT32 Ssp;
} BASE_LIBRARY_JUMP_BUFFER;
# 176 "/workspace/edk2/MdePkg/Include/Library/BaseLib.h"
UINTN
__attribute__((cdecl))
StrnLenS (
  const CHAR16 *String,
  UINTN MaxSize
  );
# 204 "/workspace/edk2/MdePkg/Include/Library/BaseLib.h"
UINTN
__attribute__((cdecl))
StrnSizeS (
  const CHAR16 *String,
  UINTN MaxSize
  );
# 237 "/workspace/edk2/MdePkg/Include/Library/BaseLib.h"
RETURN_STATUS
__attribute__((cdecl))
StrCpyS (
  CHAR16 *Destination,
  UINTN DestMax,
  const CHAR16 *Source
  );
# 274 "/workspace/edk2/MdePkg/Include/Library/BaseLib.h"
RETURN_STATUS
__attribute__((cdecl))
StrnCpyS (
  CHAR16 *Destination,
  UINTN DestMax,
  const CHAR16 *Source,
  UINTN Length
  );
# 312 "/workspace/edk2/MdePkg/Include/Library/BaseLib.h"
RETURN_STATUS
__attribute__((cdecl))
StrCatS (
  CHAR16 *Destination,
  UINTN DestMax,
  const CHAR16 *Source
  );
# 352 "/workspace/edk2/MdePkg/Include/Library/BaseLib.h"
RETURN_STATUS
__attribute__((cdecl))
StrnCatS (
  CHAR16 *Destination,
  UINTN DestMax,
  const CHAR16 *Source,
  UINTN Length
  );
# 404 "/workspace/edk2/MdePkg/Include/Library/BaseLib.h"
RETURN_STATUS
__attribute__((cdecl))
StrDecimalToUintnS (
  const CHAR16 *String,
  CHAR16 **EndPointer,
  UINTN *Data
  );
# 455 "/workspace/edk2/MdePkg/Include/Library/BaseLib.h"
RETURN_STATUS
__attribute__((cdecl))
StrDecimalToUint64S (
  const CHAR16 *String,
  CHAR16 **EndPointer,
  UINT64 *Data
  );
# 511 "/workspace/edk2/MdePkg/Include/Library/BaseLib.h"
RETURN_STATUS
__attribute__((cdecl))
StrHexToUintnS (
  const CHAR16 *String,
  CHAR16 **EndPointer,
  UINTN *Data
  );
# 567 "/workspace/edk2/MdePkg/Include/Library/BaseLib.h"
RETURN_STATUS
__attribute__((cdecl))
StrHexToUint64S (
  const CHAR16 *String,
  CHAR16 **EndPointer,
  UINT64 *Data
  );
# 589 "/workspace/edk2/MdePkg/Include/Library/BaseLib.h"
UINTN
__attribute__((cdecl))
AsciiStrnLenS (
  const CHAR8 *String,
  UINTN MaxSize
  );
# 615 "/workspace/edk2/MdePkg/Include/Library/BaseLib.h"
UINTN
__attribute__((cdecl))
AsciiStrnSizeS (
  const CHAR8 *String,
  UINTN MaxSize
  );
# 645 "/workspace/edk2/MdePkg/Include/Library/BaseLib.h"
RETURN_STATUS
__attribute__((cdecl))
AsciiStrCpyS (
  CHAR8 *Destination,
  UINTN DestMax,
  const CHAR8 *Source
  );
# 679 "/workspace/edk2/MdePkg/Include/Library/BaseLib.h"
RETURN_STATUS
__attribute__((cdecl))
AsciiStrnCpyS (
  CHAR8 *Destination,
  UINTN DestMax,
  const CHAR8 *Source,
  UINTN Length
  );
# 714 "/workspace/edk2/MdePkg/Include/Library/BaseLib.h"
RETURN_STATUS
__attribute__((cdecl))
AsciiStrCatS (
  CHAR8 *Destination,
  UINTN DestMax,
  const CHAR8 *Source
  );
# 751 "/workspace/edk2/MdePkg/Include/Library/BaseLib.h"
RETURN_STATUS
__attribute__((cdecl))
AsciiStrnCatS (
  CHAR8 *Destination,
  UINTN DestMax,
  const CHAR8 *Source,
  UINTN Length
  );
# 801 "/workspace/edk2/MdePkg/Include/Library/BaseLib.h"
RETURN_STATUS
__attribute__((cdecl))
AsciiStrDecimalToUintnS (
  const CHAR8 *String,
  CHAR8 **EndPointer,
  UINTN *Data
  );
# 850 "/workspace/edk2/MdePkg/Include/Library/BaseLib.h"
RETURN_STATUS
__attribute__((cdecl))
AsciiStrDecimalToUint64S (
  const CHAR8 *String,
  CHAR8 **EndPointer,
  UINT64 *Data
  );
# 903 "/workspace/edk2/MdePkg/Include/Library/BaseLib.h"
RETURN_STATUS
__attribute__((cdecl))
AsciiStrHexToUintnS (
  const CHAR8 *String,
  CHAR8 **EndPointer,
  UINTN *Data
  );
# 956 "/workspace/edk2/MdePkg/Include/Library/BaseLib.h"
RETURN_STATUS
__attribute__((cdecl))
AsciiStrHexToUint64S (
  const CHAR8 *String,
  CHAR8 **EndPointer,
  UINT64 *Data
  );
# 982 "/workspace/edk2/MdePkg/Include/Library/BaseLib.h"
UINTN
__attribute__((cdecl))
StrLen (
  const CHAR16 *String
  );
# 1007 "/workspace/edk2/MdePkg/Include/Library/BaseLib.h"
UINTN
__attribute__((cdecl))
StrSize (
  const CHAR16 *String
  );
# 1042 "/workspace/edk2/MdePkg/Include/Library/BaseLib.h"
INTN
__attribute__((cdecl))
StrCmp (
  const CHAR16 *FirstString,
  const CHAR16 *SecondString
  );
# 1082 "/workspace/edk2/MdePkg/Include/Library/BaseLib.h"
INTN
__attribute__((cdecl))
StrnCmp (
  const CHAR16 *FirstString,
  const CHAR16 *SecondString,
  UINTN Length
  );
# 1116 "/workspace/edk2/MdePkg/Include/Library/BaseLib.h"
CHAR16 *
__attribute__((cdecl))
StrStr (
  const CHAR16 *String,
  const CHAR16 *SearchString
  );
# 1157 "/workspace/edk2/MdePkg/Include/Library/BaseLib.h"
UINTN
__attribute__((cdecl))
StrDecimalToUintn (
  const CHAR16 *String
  );
# 1197 "/workspace/edk2/MdePkg/Include/Library/BaseLib.h"
UINT64
__attribute__((cdecl))
StrDecimalToUint64 (
  const CHAR16 *String
  );
# 1239 "/workspace/edk2/MdePkg/Include/Library/BaseLib.h"
UINTN
__attribute__((cdecl))
StrHexToUintn (
  const CHAR16 *String
  );
# 1281 "/workspace/edk2/MdePkg/Include/Library/BaseLib.h"
UINT64
__attribute__((cdecl))
StrHexToUint64 (
  const CHAR16 *String
  );
# 1337 "/workspace/edk2/MdePkg/Include/Library/BaseLib.h"
RETURN_STATUS
__attribute__((cdecl))
StrToIpv6Address (
  const CHAR16 *String,
  CHAR16 **EndPointer,
  IPv6_ADDRESS *Address,
  UINT8 *PrefixLength
  );
# 1387 "/workspace/edk2/MdePkg/Include/Library/BaseLib.h"
RETURN_STATUS
__attribute__((cdecl))
StrToIpv4Address (
  const CHAR16 *String,
  CHAR16 **EndPointer,
  IPv4_ADDRESS *Address,
  UINT8 *PrefixLength
  );
# 1440 "/workspace/edk2/MdePkg/Include/Library/BaseLib.h"
RETURN_STATUS
__attribute__((cdecl))
StrToGuid (
  const CHAR16 *String,
  GUID *Guid
  );
# 1480 "/workspace/edk2/MdePkg/Include/Library/BaseLib.h"
RETURN_STATUS
__attribute__((cdecl))
StrHexToBytes (
  const CHAR16 *String,
  UINTN Length,
  UINT8 *Buffer,
  UINTN MaxBufferSize
  );
# 1530 "/workspace/edk2/MdePkg/Include/Library/BaseLib.h"
RETURN_STATUS
__attribute__((cdecl))
UnicodeStrToAsciiStrS (
  const CHAR16 *Source,
  CHAR8 *Destination,
  UINTN DestMax
  );
# 1581 "/workspace/edk2/MdePkg/Include/Library/BaseLib.h"
RETURN_STATUS
__attribute__((cdecl))
UnicodeStrnToAsciiStrS (
  const CHAR16 *Source,
  UINTN Length,
  CHAR8 *Destination,
  UINTN DestMax,
  UINTN *DestinationLength
  );
# 1609 "/workspace/edk2/MdePkg/Include/Library/BaseLib.h"
UINTN
__attribute__((cdecl))
AsciiStrLen (
  const CHAR8 *String
  );
# 1633 "/workspace/edk2/MdePkg/Include/Library/BaseLib.h"
UINTN
__attribute__((cdecl))
AsciiStrSize (
  const CHAR8 *String
  );
# 1666 "/workspace/edk2/MdePkg/Include/Library/BaseLib.h"
INTN
__attribute__((cdecl))
AsciiStrCmp (
  const CHAR8 *FirstString,
  const CHAR8 *SecondString
  );
# 1703 "/workspace/edk2/MdePkg/Include/Library/BaseLib.h"
INTN
__attribute__((cdecl))
AsciiStriCmp (
  const CHAR8 *FirstString,
  const CHAR8 *SecondString
  );
# 1741 "/workspace/edk2/MdePkg/Include/Library/BaseLib.h"
INTN
__attribute__((cdecl))
AsciiStrnCmp (
  const CHAR8 *FirstString,
  const CHAR8 *SecondString,
  UINTN Length
  );
# 1774 "/workspace/edk2/MdePkg/Include/Library/BaseLib.h"
CHAR8 *
__attribute__((cdecl))
AsciiStrStr (
  const CHAR8 *String,
  const CHAR8 *SearchString
  );
# 1812 "/workspace/edk2/MdePkg/Include/Library/BaseLib.h"
UINTN
__attribute__((cdecl))
AsciiStrDecimalToUintn (
  const CHAR8 *String
  );
# 1849 "/workspace/edk2/MdePkg/Include/Library/BaseLib.h"
UINT64
__attribute__((cdecl))
AsciiStrDecimalToUint64 (
  const CHAR8 *String
  );
# 1890 "/workspace/edk2/MdePkg/Include/Library/BaseLib.h"
UINTN
__attribute__((cdecl))
AsciiStrHexToUintn (
  const CHAR8 *String
  );
# 1931 "/workspace/edk2/MdePkg/Include/Library/BaseLib.h"
UINT64
__attribute__((cdecl))
AsciiStrHexToUint64 (
  const CHAR8 *String
  );
# 1985 "/workspace/edk2/MdePkg/Include/Library/BaseLib.h"
RETURN_STATUS
__attribute__((cdecl))
AsciiStrToIpv6Address (
  const CHAR8 *String,
  CHAR8 **EndPointer,
  IPv6_ADDRESS *Address,
  UINT8 *PrefixLength
  );
# 2033 "/workspace/edk2/MdePkg/Include/Library/BaseLib.h"
RETURN_STATUS
__attribute__((cdecl))
AsciiStrToIpv4Address (
  const CHAR8 *String,
  CHAR8 **EndPointer,
  IPv4_ADDRESS *Address,
  UINT8 *PrefixLength
  );
# 2082 "/workspace/edk2/MdePkg/Include/Library/BaseLib.h"
RETURN_STATUS
__attribute__((cdecl))
AsciiStrToGuid (
  const CHAR8 *String,
  GUID *Guid
  );
# 2120 "/workspace/edk2/MdePkg/Include/Library/BaseLib.h"
RETURN_STATUS
__attribute__((cdecl))
AsciiStrHexToBytes (
  const CHAR8 *String,
  UINTN Length,
  UINT8 *Buffer,
  UINTN MaxBufferSize
  );
# 2166 "/workspace/edk2/MdePkg/Include/Library/BaseLib.h"
RETURN_STATUS
__attribute__((cdecl))
AsciiStrToUnicodeStrS (
  const CHAR8 *Source,
  CHAR16 *Destination,
  UINTN DestMax
  );
# 2216 "/workspace/edk2/MdePkg/Include/Library/BaseLib.h"
RETURN_STATUS
__attribute__((cdecl))
AsciiStrnToUnicodeStrS (
  const CHAR8 *Source,
  UINTN Length,
  CHAR16 *Destination,
  UINTN DestMax,
  UINTN *DestinationLength
  );
# 2241 "/workspace/edk2/MdePkg/Include/Library/BaseLib.h"
CHAR16
__attribute__((cdecl))
CharToUpper (
  CHAR16 Char
  );
# 2260 "/workspace/edk2/MdePkg/Include/Library/BaseLib.h"
CHAR8
__attribute__((cdecl))
AsciiCharToUpper (
  CHAR8 Chr
  );
# 2285 "/workspace/edk2/MdePkg/Include/Library/BaseLib.h"
RETURN_STATUS
__attribute__((cdecl))
Base64Encode (
  const UINT8 *Source,
  UINTN SourceLength,
  CHAR8 *Destination ,
  UINTN *DestinationSize
  );
# 2376 "/workspace/edk2/MdePkg/Include/Library/BaseLib.h"
RETURN_STATUS
__attribute__((cdecl))
Base64Decode (
  const CHAR8 *Source ,
  UINTN SourceSize,
  UINT8 *Destination ,
  UINTN *DestinationSize
  );
# 2398 "/workspace/edk2/MdePkg/Include/Library/BaseLib.h"
UINT8
__attribute__((cdecl))
DecimalToBcd8 (
  UINT8 Value
  );
# 2419 "/workspace/edk2/MdePkg/Include/Library/BaseLib.h"
UINT8
__attribute__((cdecl))
BcdToDecimal8 (
  UINT8 Value
  );
# 2437 "/workspace/edk2/MdePkg/Include/Library/BaseLib.h"
BOOLEAN
__attribute__((cdecl))
PathRemoveLastItem(
  CHAR16 *Path
  );
# 2456 "/workspace/edk2/MdePkg/Include/Library/BaseLib.h"
CHAR16*
__attribute__((cdecl))
PathCleanUpDirectories(
  CHAR16 *Path
  );
# 2528 "/workspace/edk2/MdePkg/Include/Library/BaseLib.h"
BOOLEAN
__attribute__((cdecl))
IsNodeInList (
  const LIST_ENTRY *FirstEntry,
  const LIST_ENTRY *SecondEntry
  );
# 2552 "/workspace/edk2/MdePkg/Include/Library/BaseLib.h"
LIST_ENTRY *
__attribute__((cdecl))
InitializeListHead (
  LIST_ENTRY *ListHead
  );
# 2581 "/workspace/edk2/MdePkg/Include/Library/BaseLib.h"
LIST_ENTRY *
__attribute__((cdecl))
InsertHeadList (
  LIST_ENTRY *ListHead,
  LIST_ENTRY *Entry
  );
# 2611 "/workspace/edk2/MdePkg/Include/Library/BaseLib.h"
LIST_ENTRY *
__attribute__((cdecl))
InsertTailList (
  LIST_ENTRY *ListHead,
  LIST_ENTRY *Entry
  );
# 2639 "/workspace/edk2/MdePkg/Include/Library/BaseLib.h"
LIST_ENTRY *
__attribute__((cdecl))
GetFirstNode (
  const LIST_ENTRY *List
  );
# 2667 "/workspace/edk2/MdePkg/Include/Library/BaseLib.h"
LIST_ENTRY *
__attribute__((cdecl))
GetNextNode (
  const LIST_ENTRY *List,
  const LIST_ENTRY *Node
  );
# 2696 "/workspace/edk2/MdePkg/Include/Library/BaseLib.h"
LIST_ENTRY *
__attribute__((cdecl))
GetPreviousNode (
  const LIST_ENTRY *List,
  const LIST_ENTRY *Node
  );
# 2723 "/workspace/edk2/MdePkg/Include/Library/BaseLib.h"
BOOLEAN
__attribute__((cdecl))
IsListEmpty (
  const LIST_ENTRY *ListHead
  );
# 2756 "/workspace/edk2/MdePkg/Include/Library/BaseLib.h"
BOOLEAN
__attribute__((cdecl))
IsNull (
  const LIST_ENTRY *List,
  const LIST_ENTRY *Node
  );
# 2787 "/workspace/edk2/MdePkg/Include/Library/BaseLib.h"
BOOLEAN
__attribute__((cdecl))
IsNodeAtEnd (
  const LIST_ENTRY *List,
  const LIST_ENTRY *Node
  );
# 2821 "/workspace/edk2/MdePkg/Include/Library/BaseLib.h"
LIST_ENTRY *
__attribute__((cdecl))
SwapListEntries (
  LIST_ENTRY *FirstEntry,
  LIST_ENTRY *SecondEntry
  );
# 2850 "/workspace/edk2/MdePkg/Include/Library/BaseLib.h"
LIST_ENTRY *
__attribute__((cdecl))
RemoveEntryList (
  const LIST_ENTRY *Entry
  );
# 2875 "/workspace/edk2/MdePkg/Include/Library/BaseLib.h"
UINT64
__attribute__((cdecl))
LShiftU64 (
  UINT64 Operand,
  UINTN Count
  );
# 2898 "/workspace/edk2/MdePkg/Include/Library/BaseLib.h"
UINT64
__attribute__((cdecl))
RShiftU64 (
  UINT64 Operand,
  UINTN Count
  );
# 2921 "/workspace/edk2/MdePkg/Include/Library/BaseLib.h"
UINT64
__attribute__((cdecl))
ARShiftU64 (
  UINT64 Operand,
  UINTN Count
  );
# 2945 "/workspace/edk2/MdePkg/Include/Library/BaseLib.h"
UINT32
__attribute__((cdecl))
LRotU32 (
  UINT32 Operand,
  UINTN Count
  );
# 2969 "/workspace/edk2/MdePkg/Include/Library/BaseLib.h"
UINT32
__attribute__((cdecl))
RRotU32 (
  UINT32 Operand,
  UINTN Count
  );
# 2993 "/workspace/edk2/MdePkg/Include/Library/BaseLib.h"
UINT64
__attribute__((cdecl))
LRotU64 (
  UINT64 Operand,
  UINTN Count
  );
# 3017 "/workspace/edk2/MdePkg/Include/Library/BaseLib.h"
UINT64
__attribute__((cdecl))
RRotU64 (
  UINT64 Operand,
  UINTN Count
  );
# 3038 "/workspace/edk2/MdePkg/Include/Library/BaseLib.h"
INTN
__attribute__((cdecl))
LowBitSet32 (
  UINT32 Operand
  );
# 3059 "/workspace/edk2/MdePkg/Include/Library/BaseLib.h"
INTN
__attribute__((cdecl))
LowBitSet64 (
  UINT64 Operand
  );
# 3080 "/workspace/edk2/MdePkg/Include/Library/BaseLib.h"
INTN
__attribute__((cdecl))
HighBitSet32 (
  UINT32 Operand
  );
# 3101 "/workspace/edk2/MdePkg/Include/Library/BaseLib.h"
INTN
__attribute__((cdecl))
HighBitSet64 (
  UINT64 Operand
  );
# 3121 "/workspace/edk2/MdePkg/Include/Library/BaseLib.h"
UINT32
__attribute__((cdecl))
GetPowerOfTwo32 (
  UINT32 Operand
  );
# 3141 "/workspace/edk2/MdePkg/Include/Library/BaseLib.h"
UINT64
__attribute__((cdecl))
GetPowerOfTwo64 (
  UINT64 Operand
  );
# 3160 "/workspace/edk2/MdePkg/Include/Library/BaseLib.h"
UINT16
__attribute__((cdecl))
SwapBytes16 (
  UINT16 Value
  );
# 3179 "/workspace/edk2/MdePkg/Include/Library/BaseLib.h"
UINT32
__attribute__((cdecl))
SwapBytes32 (
  UINT32 Value
  );
# 3198 "/workspace/edk2/MdePkg/Include/Library/BaseLib.h"
UINT64
__attribute__((cdecl))
SwapBytes64 (
  UINT64 Value
  );
# 3219 "/workspace/edk2/MdePkg/Include/Library/BaseLib.h"
UINT64
__attribute__((cdecl))
MultU64x32 (
  UINT64 Multiplicand,
  UINT32 Multiplier
  );
# 3241 "/workspace/edk2/MdePkg/Include/Library/BaseLib.h"
UINT64
__attribute__((cdecl))
MultU64x64 (
  UINT64 Multiplicand,
  UINT64 Multiplier
  );
# 3263 "/workspace/edk2/MdePkg/Include/Library/BaseLib.h"
INT64
__attribute__((cdecl))
MultS64x64 (
  INT64 Multiplicand,
  INT64 Multiplier
  );
# 3287 "/workspace/edk2/MdePkg/Include/Library/BaseLib.h"
UINT64
__attribute__((cdecl))
DivU64x32 (
  UINT64 Dividend,
  UINT32 Divisor
  );
# 3311 "/workspace/edk2/MdePkg/Include/Library/BaseLib.h"
UINT32
__attribute__((cdecl))
ModU64x32 (
  UINT64 Dividend,
  UINT32 Divisor
  );
# 3338 "/workspace/edk2/MdePkg/Include/Library/BaseLib.h"
UINT64
__attribute__((cdecl))
DivU64x32Remainder (
  UINT64 Dividend,
  UINT32 Divisor,
  UINT32 *Remainder
  );
# 3366 "/workspace/edk2/MdePkg/Include/Library/BaseLib.h"
UINT64
__attribute__((cdecl))
DivU64x64Remainder (
  UINT64 Dividend,
  UINT64 Divisor,
  UINT64 *Remainder
  );
# 3398 "/workspace/edk2/MdePkg/Include/Library/BaseLib.h"
INT64
__attribute__((cdecl))
DivS64x64Remainder (
  INT64 Dividend,
  INT64 Divisor,
  INT64 *Remainder
  );
# 3420 "/workspace/edk2/MdePkg/Include/Library/BaseLib.h"
UINT16
__attribute__((cdecl))
ReadUnaligned16 (
  const UINT16 *Buffer
  );
# 3442 "/workspace/edk2/MdePkg/Include/Library/BaseLib.h"
UINT16
__attribute__((cdecl))
WriteUnaligned16 (
  UINT16 *Buffer,
  UINT16 Value
  );
# 3463 "/workspace/edk2/MdePkg/Include/Library/BaseLib.h"
UINT32
__attribute__((cdecl))
ReadUnaligned24 (
  const UINT32 *Buffer
  );
# 3485 "/workspace/edk2/MdePkg/Include/Library/BaseLib.h"
UINT32
__attribute__((cdecl))
WriteUnaligned24 (
  UINT32 *Buffer,
  UINT32 Value
  );
# 3506 "/workspace/edk2/MdePkg/Include/Library/BaseLib.h"
UINT32
__attribute__((cdecl))
ReadUnaligned32 (
  const UINT32 *Buffer
  );
# 3528 "/workspace/edk2/MdePkg/Include/Library/BaseLib.h"
UINT32
__attribute__((cdecl))
WriteUnaligned32 (
  UINT32 *Buffer,
  UINT32 Value
  );
# 3549 "/workspace/edk2/MdePkg/Include/Library/BaseLib.h"
UINT64
__attribute__((cdecl))
ReadUnaligned64 (
  const UINT64 *Buffer
  );
# 3571 "/workspace/edk2/MdePkg/Include/Library/BaseLib.h"
UINT64
__attribute__((cdecl))
WriteUnaligned64 (
  UINT64 *Buffer,
  UINT64 Value
  );
# 3602 "/workspace/edk2/MdePkg/Include/Library/BaseLib.h"
UINT8
__attribute__((cdecl))
BitFieldRead8 (
  UINT8 Operand,
  UINTN StartBit,
  UINTN EndBit
  );
# 3634 "/workspace/edk2/MdePkg/Include/Library/BaseLib.h"
UINT8
__attribute__((cdecl))
BitFieldWrite8 (
  UINT8 Operand,
  UINTN StartBit,
  UINTN EndBit,
  UINT8 Value
  );
# 3668 "/workspace/edk2/MdePkg/Include/Library/BaseLib.h"
UINT8
__attribute__((cdecl))
BitFieldOr8 (
  UINT8 Operand,
  UINTN StartBit,
  UINTN EndBit,
  UINT8 OrData
  );
# 3702 "/workspace/edk2/MdePkg/Include/Library/BaseLib.h"
UINT8
__attribute__((cdecl))
BitFieldAnd8 (
  UINT8 Operand,
  UINTN StartBit,
  UINTN EndBit,
  UINT8 AndData
  );
# 3739 "/workspace/edk2/MdePkg/Include/Library/BaseLib.h"
UINT8
__attribute__((cdecl))
BitFieldAndThenOr8 (
  UINT8 Operand,
  UINTN StartBit,
  UINTN EndBit,
  UINT8 AndData,
  UINT8 OrData
  );
# 3769 "/workspace/edk2/MdePkg/Include/Library/BaseLib.h"
UINT16
__attribute__((cdecl))
BitFieldRead16 (
  UINT16 Operand,
  UINTN StartBit,
  UINTN EndBit
  );
# 3801 "/workspace/edk2/MdePkg/Include/Library/BaseLib.h"
UINT16
__attribute__((cdecl))
BitFieldWrite16 (
  UINT16 Operand,
  UINTN StartBit,
  UINTN EndBit,
  UINT16 Value
  );
# 3835 "/workspace/edk2/MdePkg/Include/Library/BaseLib.h"
UINT16
__attribute__((cdecl))
BitFieldOr16 (
  UINT16 Operand,
  UINTN StartBit,
  UINTN EndBit,
  UINT16 OrData
  );
# 3869 "/workspace/edk2/MdePkg/Include/Library/BaseLib.h"
UINT16
__attribute__((cdecl))
BitFieldAnd16 (
  UINT16 Operand,
  UINTN StartBit,
  UINTN EndBit,
  UINT16 AndData
  );
# 3906 "/workspace/edk2/MdePkg/Include/Library/BaseLib.h"
UINT16
__attribute__((cdecl))
BitFieldAndThenOr16 (
  UINT16 Operand,
  UINTN StartBit,
  UINTN EndBit,
  UINT16 AndData,
  UINT16 OrData
  );
# 3936 "/workspace/edk2/MdePkg/Include/Library/BaseLib.h"
UINT32
__attribute__((cdecl))
BitFieldRead32 (
  UINT32 Operand,
  UINTN StartBit,
  UINTN EndBit
  );
# 3968 "/workspace/edk2/MdePkg/Include/Library/BaseLib.h"
UINT32
__attribute__((cdecl))
BitFieldWrite32 (
  UINT32 Operand,
  UINTN StartBit,
  UINTN EndBit,
  UINT32 Value
  );
# 4002 "/workspace/edk2/MdePkg/Include/Library/BaseLib.h"
UINT32
__attribute__((cdecl))
BitFieldOr32 (
  UINT32 Operand,
  UINTN StartBit,
  UINTN EndBit,
  UINT32 OrData
  );
# 4036 "/workspace/edk2/MdePkg/Include/Library/BaseLib.h"
UINT32
__attribute__((cdecl))
BitFieldAnd32 (
  UINT32 Operand,
  UINTN StartBit,
  UINTN EndBit,
  UINT32 AndData
  );
# 4073 "/workspace/edk2/MdePkg/Include/Library/BaseLib.h"
UINT32
__attribute__((cdecl))
BitFieldAndThenOr32 (
  UINT32 Operand,
  UINTN StartBit,
  UINTN EndBit,
  UINT32 AndData,
  UINT32 OrData
  );
# 4103 "/workspace/edk2/MdePkg/Include/Library/BaseLib.h"
UINT64
__attribute__((cdecl))
BitFieldRead64 (
  UINT64 Operand,
  UINTN StartBit,
  UINTN EndBit
  );
# 4135 "/workspace/edk2/MdePkg/Include/Library/BaseLib.h"
UINT64
__attribute__((cdecl))
BitFieldWrite64 (
  UINT64 Operand,
  UINTN StartBit,
  UINTN EndBit,
  UINT64 Value
  );
# 4169 "/workspace/edk2/MdePkg/Include/Library/BaseLib.h"
UINT64
__attribute__((cdecl))
BitFieldOr64 (
  UINT64 Operand,
  UINTN StartBit,
  UINTN EndBit,
  UINT64 OrData
  );
# 4203 "/workspace/edk2/MdePkg/Include/Library/BaseLib.h"
UINT64
__attribute__((cdecl))
BitFieldAnd64 (
  UINT64 Operand,
  UINTN StartBit,
  UINTN EndBit,
  UINT64 AndData
  );
# 4240 "/workspace/edk2/MdePkg/Include/Library/BaseLib.h"
UINT64
__attribute__((cdecl))
BitFieldAndThenOr64 (
  UINT64 Operand,
  UINTN StartBit,
  UINTN EndBit,
  UINT64 AndData,
  UINT64 OrData
  );
# 4270 "/workspace/edk2/MdePkg/Include/Library/BaseLib.h"
UINT8
__attribute__((cdecl))
BitFieldCountOnes32 (
  UINT32 Operand,
  UINTN StartBit,
  UINTN EndBit
  );
# 4298 "/workspace/edk2/MdePkg/Include/Library/BaseLib.h"
UINT8
__attribute__((cdecl))
BitFieldCountOnes64 (
  UINT64 Operand,
  UINTN StartBit,
  UINTN EndBit
  );
# 4328 "/workspace/edk2/MdePkg/Include/Library/BaseLib.h"
UINT8
__attribute__((cdecl))
CalculateSum8 (
  const UINT8 *Buffer,
  UINTN Length
  );
# 4354 "/workspace/edk2/MdePkg/Include/Library/BaseLib.h"
UINT8
__attribute__((cdecl))
CalculateCheckSum8 (
  const UINT8 *Buffer,
  UINTN Length
  );
# 4381 "/workspace/edk2/MdePkg/Include/Library/BaseLib.h"
UINT16
__attribute__((cdecl))
CalculateSum16 (
  const UINT16 *Buffer,
  UINTN Length
  );
# 4409 "/workspace/edk2/MdePkg/Include/Library/BaseLib.h"
UINT16
__attribute__((cdecl))
CalculateCheckSum16 (
  const UINT16 *Buffer,
  UINTN Length
  );
# 4436 "/workspace/edk2/MdePkg/Include/Library/BaseLib.h"
UINT32
__attribute__((cdecl))
CalculateSum32 (
  const UINT32 *Buffer,
  UINTN Length
  );
# 4464 "/workspace/edk2/MdePkg/Include/Library/BaseLib.h"
UINT32
__attribute__((cdecl))
CalculateCheckSum32 (
  const UINT32 *Buffer,
  UINTN Length
  );
# 4491 "/workspace/edk2/MdePkg/Include/Library/BaseLib.h"
UINT64
__attribute__((cdecl))
CalculateSum64 (
  const UINT64 *Buffer,
  UINTN Length
  );
# 4519 "/workspace/edk2/MdePkg/Include/Library/BaseLib.h"
UINT64
__attribute__((cdecl))
CalculateCheckSum64 (
  const UINT64 *Buffer,
  UINTN Length
  );
# 4539 "/workspace/edk2/MdePkg/Include/Library/BaseLib.h"
UINT32
__attribute__((cdecl))
CalculateCrc32(
  void *Buffer,
  UINTN Length
  );
# 4557 "/workspace/edk2/MdePkg/Include/Library/BaseLib.h"
typedef
void
(__attribute__((cdecl)) *SWITCH_STACK_ENTRY_POINT)(
  void *Context1,
  void *Context2
  );
# 4572 "/workspace/edk2/MdePkg/Include/Library/BaseLib.h"
void
__attribute__((cdecl))
MemoryFence (
  void
  );
# 4600 "/workspace/edk2/MdePkg/Include/Library/BaseLib.h"
__attribute__((returns_twice))
UINTN
__attribute__((cdecl))
SetJump (
  BASE_LIBRARY_JUMP_BUFFER *JumpBuffer
  );
# 4624 "/workspace/edk2/MdePkg/Include/Library/BaseLib.h"
void
__attribute__((cdecl))
LongJump (
  BASE_LIBRARY_JUMP_BUFFER *JumpBuffer,
  UINTN Value
  );






void
__attribute__((cdecl))
EnableInterrupts (
  void
  );






void
__attribute__((cdecl))
DisableInterrupts (
  void
  );
# 4662 "/workspace/edk2/MdePkg/Include/Library/BaseLib.h"
BOOLEAN
__attribute__((cdecl))
SaveAndDisableInterrupts (
  void
  );







void
__attribute__((cdecl))
EnableDisableInterrupts (
  void
  );
# 4691 "/workspace/edk2/MdePkg/Include/Library/BaseLib.h"
BOOLEAN
__attribute__((cdecl))
GetInterruptState (
  void
  );
# 4712 "/workspace/edk2/MdePkg/Include/Library/BaseLib.h"
BOOLEAN
__attribute__((cdecl))
SetInterruptState (
  BOOLEAN InterruptState
  );
# 4726 "/workspace/edk2/MdePkg/Include/Library/BaseLib.h"
void
__attribute__((cdecl))
CpuPause (
  void
  );
# 4762 "/workspace/edk2/MdePkg/Include/Library/BaseLib.h"
void
__attribute__((cdecl))
SwitchStack (
  SWITCH_STACK_ENTRY_POINT EntryPoint,
  void *Context1,
  void *Context2,
  void *NewStack,
  ...
  );
# 4780 "/workspace/edk2/MdePkg/Include/Library/BaseLib.h"
void
__attribute__((cdecl))
CpuBreakpoint (
  void
  );
# 4796 "/workspace/edk2/MdePkg/Include/Library/BaseLib.h"
void
__attribute__((cdecl))
CpuDeadLoop (
  void
  );
# 4810 "/workspace/edk2/MdePkg/Include/Library/BaseLib.h"
void
__attribute__((cdecl))
SpeculationBarrier (
  void
  );







typedef union {
  struct {
    UINT32 CF:1;
    UINT32 Reserved_0:1;
    UINT32 PF:1;
    UINT32 Reserved_1:1;
    UINT32 AF:1;
    UINT32 Reserved_2:1;
    UINT32 ZF:1;
    UINT32 SF:1;
    UINT32 TF:1;
    UINT32 IF:1;
    UINT32 DF:1;
    UINT32 OF:1;
    UINT32 IOPL:2;
    UINT32 NT:1;
    UINT32 Reserved_3:1;
  } Bits;
  UINT16 Uint16;
} IA32_FLAGS16;






typedef union {
  struct {
    UINT32 CF:1;
    UINT32 Reserved_0:1;
    UINT32 PF:1;
    UINT32 Reserved_1:1;
    UINT32 AF:1;
    UINT32 Reserved_2:1;
    UINT32 ZF:1;
    UINT32 SF:1;
    UINT32 TF:1;
    UINT32 IF:1;
    UINT32 DF:1;
    UINT32 OF:1;
    UINT32 IOPL:2;
    UINT32 NT:1;
    UINT32 Reserved_3:1;
    UINT32 RF:1;
    UINT32 VM:1;
    UINT32 AC:1;
    UINT32 VIF:1;
    UINT32 VIP:1;
    UINT32 ID:1;
    UINT32 Reserved_4:10;
  } Bits;
  UINTN UintN;
} IA32_EFLAGS32;






typedef union {
  struct {
    UINT32 PE:1;
    UINT32 MP:1;
    UINT32 EM:1;
    UINT32 TS:1;
    UINT32 ET:1;
    UINT32 NE:1;
    UINT32 Reserved_0:10;
    UINT32 WP:1;
    UINT32 Reserved_1:1;
    UINT32 AM:1;
    UINT32 Reserved_2:10;
    UINT32 NW:1;
    UINT32 CD:1;
    UINT32 PG:1;
  } Bits;
  UINTN UintN;
} IA32_CR0;






typedef union {
  struct {
    UINT32 VME:1;
    UINT32 PVI:1;
    UINT32 TSD:1;
    UINT32 DE:1;
    UINT32 PSE:1;
    UINT32 PAE:1;
    UINT32 MCE:1;
    UINT32 PGE:1;
    UINT32 PCE:1;

    UINT32 OSFXSR:1;

    UINT32 OSXMMEXCPT:1;


    UINT32 UMIP:1;
    UINT32 LA57:1;
    UINT32 VMXE:1;
    UINT32 SMXE:1;
    UINT32 Reserved_3:1;
    UINT32 FSGSBASE:1;
    UINT32 PCIDE:1;
    UINT32 OSXSAVE:1;
    UINT32 Reserved_4:1;
    UINT32 SMEP:1;
    UINT32 SMAP:1;
    UINT32 PKE:1;
    UINT32 Reserved_5:9;
  } Bits;
  UINTN UintN;
} IA32_CR4;




typedef union {
  struct {
    UINT32 LimitLow:16;
    UINT32 BaseLow:16;
    UINT32 BaseMid:8;
    UINT32 Type:4;
    UINT32 S:1;
    UINT32 DPL:2;
    UINT32 P:1;
    UINT32 LimitHigh:4;
    UINT32 AVL:1;
    UINT32 L:1;
    UINT32 DB:1;
    UINT32 G:1;
    UINT32 BaseHigh:8;
  } Bits;
  UINT64 Uint64;
} IA32_SEGMENT_DESCRIPTOR;





typedef struct {
  UINT16 Limit;
  UINTN Base;
} IA32_DESCRIPTOR;
# 4985 "/workspace/edk2/MdePkg/Include/Library/BaseLib.h"
typedef union {
  struct {
    UINT32 OffsetLow:16;
    UINT32 Selector:16;
    UINT32 Reserved_0:8;
    UINT32 GateType:8;
    UINT32 OffsetHigh:16;
  } Bits;
  UINT64 Uint64;
} IA32_IDT_GATE_DESCRIPTOR;





typedef struct {
  UINT16 PreviousTaskLink;
  UINT16 Reserved_2;
  UINT32 ESP0;
  UINT16 SS0;
  UINT16 Reserved_10;
  UINT32 ESP1;
  UINT16 SS1;
  UINT16 Reserved_18;
  UINT32 ESP2;
  UINT16 SS2;
  UINT16 Reserved_26;
  UINT32 CR3;
  UINT32 EIP;
  UINT32 EFLAGS;
  UINT32 EAX;
  UINT32 ECX;
  UINT32 EDX;
  UINT32 EBX;
  UINT32 ESP;
  UINT32 EBP;
  UINT32 ESI;
  UINT32 EDI;
  UINT16 ES;
  UINT16 Reserved_74;
  UINT16 CS;
  UINT16 Reserved_78;
  UINT16 SS;
  UINT16 Reserved_82;
  UINT16 DS;
  UINT16 Reserved_86;
  UINT16 FS;
  UINT16 Reserved_90;
  UINT16 GS;
  UINT16 Reserved_94;
  UINT16 LDTSegmentSelector;
  UINT16 Reserved_98;
  UINT16 T;
  UINT16 IOMapBaseAddress;
} IA32_TASK_STATE_SEGMENT;

typedef union {
  struct {
    UINT32 LimitLow:16;
    UINT32 BaseLow:16;
    UINT32 BaseMid:8;
    UINT32 Type:4;
    UINT32 Reserved_43:1;
    UINT32 DPL:2;
    UINT32 P:1;
    UINT32 LimitHigh:4;
    UINT32 AVL:1;
    UINT32 Reserved_52:2;
    UINT32 G:1;
    UINT32 BaseHigh:8;
  } Bits;
  UINT64 Uint64;
} IA32_TSS_DESCRIPTOR;
# 5127 "/workspace/edk2/MdePkg/Include/Library/BaseLib.h"
typedef struct {
  UINT8 Buffer[512];
} IA32_FX_BUFFER;




typedef struct {
  UINT32 Reserved1;
  UINT32 Reserved2;
  UINT32 Reserved3;
  UINT32 Reserved4;
  UINT8 BL;
  UINT8 BH;
  UINT16 Reserved5;
  UINT8 DL;
  UINT8 DH;
  UINT16 Reserved6;
  UINT8 CL;
  UINT8 CH;
  UINT16 Reserved7;
  UINT8 AL;
  UINT8 AH;
  UINT16 Reserved8;
} IA32_BYTE_REGS;

typedef struct {
  UINT16 DI;
  UINT16 Reserved1;
  UINT16 SI;
  UINT16 Reserved2;
  UINT16 BP;
  UINT16 Reserved3;
  UINT16 SP;
  UINT16 Reserved4;
  UINT16 BX;
  UINT16 Reserved5;
  UINT16 DX;
  UINT16 Reserved6;
  UINT16 CX;
  UINT16 Reserved7;
  UINT16 AX;
  UINT16 Reserved8;
} IA32_WORD_REGS;

typedef struct {
  UINT32 EDI;
  UINT32 ESI;
  UINT32 EBP;
  UINT32 ESP;
  UINT32 EBX;
  UINT32 EDX;
  UINT32 ECX;
  UINT32 EAX;
  UINT16 DS;
  UINT16 ES;
  UINT16 FS;
  UINT16 GS;
  IA32_EFLAGS32 EFLAGS;
  UINT32 Eip;
  UINT16 CS;
  UINT16 SS;
} IA32_DWORD_REGS;

typedef union {
  IA32_DWORD_REGS E;
  IA32_WORD_REGS X;
  IA32_BYTE_REGS H;
} IA32_REGISTER_SET;




typedef struct {
  IA32_REGISTER_SET *RealModeState;
  void *RealModeBuffer;
  UINT32 RealModeBufferSize;
  UINT32 ThunkAttributes;
} THUNK_CONTEXT;
# 5223 "/workspace/edk2/MdePkg/Include/Library/BaseLib.h"
typedef void (X86_ASSEMBLY_PATCH_LABEL) (void);
# 5250 "/workspace/edk2/MdePkg/Include/Library/BaseLib.h"
UINT32
__attribute__((cdecl))
AsmCpuid (
  UINT32 Index,
  UINT32 *Eax,
  UINT32 *Ebx,
  UINT32 *Ecx,
  UINT32 *Edx
  );
# 5293 "/workspace/edk2/MdePkg/Include/Library/BaseLib.h"
UINT32
__attribute__((cdecl))
AsmCpuidEx (
  UINT32 Index,
  UINT32 SubIndex,
  UINT32 *Eax,
  UINT32 *Ebx,
  UINT32 *Ecx,
  UINT32 *Edx
  );
# 5312 "/workspace/edk2/MdePkg/Include/Library/BaseLib.h"
void
__attribute__((cdecl))
AsmDisableCache (
  void
  );
# 5326 "/workspace/edk2/MdePkg/Include/Library/BaseLib.h"
void
__attribute__((cdecl))
AsmEnableCache (
  void
  );
# 5347 "/workspace/edk2/MdePkg/Include/Library/BaseLib.h"
UINT32
__attribute__((cdecl))
AsmReadMsr32 (
  UINT32 Index
  );
# 5371 "/workspace/edk2/MdePkg/Include/Library/BaseLib.h"
UINT32
__attribute__((cdecl))
AsmWriteMsr32 (
  UINT32 Index,
  UINT32 Value
  );
# 5398 "/workspace/edk2/MdePkg/Include/Library/BaseLib.h"
UINT32
__attribute__((cdecl))
AsmMsrOr32 (
  UINT32 Index,
  UINT32 OrData
  );
# 5425 "/workspace/edk2/MdePkg/Include/Library/BaseLib.h"
UINT32
__attribute__((cdecl))
AsmMsrAnd32 (
  UINT32 Index,
  UINT32 AndData
  );
# 5455 "/workspace/edk2/MdePkg/Include/Library/BaseLib.h"
UINT32
__attribute__((cdecl))
AsmMsrAndThenOr32 (
  UINT32 Index,
  UINT32 AndData,
  UINT32 OrData
  );
# 5486 "/workspace/edk2/MdePkg/Include/Library/BaseLib.h"
UINT32
__attribute__((cdecl))
AsmMsrBitFieldRead32 (
  UINT32 Index,
  UINTN StartBit,
  UINTN EndBit
  );
# 5520 "/workspace/edk2/MdePkg/Include/Library/BaseLib.h"
UINT32
__attribute__((cdecl))
AsmMsrBitFieldWrite32 (
  UINT32 Index,
  UINTN StartBit,
  UINTN EndBit,
  UINT32 Value
  );
# 5557 "/workspace/edk2/MdePkg/Include/Library/BaseLib.h"
UINT32
__attribute__((cdecl))
AsmMsrBitFieldOr32 (
  UINT32 Index,
  UINTN StartBit,
  UINTN EndBit,
  UINT32 OrData
  );
# 5594 "/workspace/edk2/MdePkg/Include/Library/BaseLib.h"
UINT32
__attribute__((cdecl))
AsmMsrBitFieldAnd32 (
  UINT32 Index,
  UINTN StartBit,
  UINTN EndBit,
  UINT32 AndData
  );
# 5635 "/workspace/edk2/MdePkg/Include/Library/BaseLib.h"
UINT32
__attribute__((cdecl))
AsmMsrBitFieldAndThenOr32 (
  UINT32 Index,
  UINTN StartBit,
  UINTN EndBit,
  UINT32 AndData,
  UINT32 OrData
  );
# 5660 "/workspace/edk2/MdePkg/Include/Library/BaseLib.h"
UINT64
__attribute__((cdecl))
AsmReadMsr64 (
  UINT32 Index
  );
# 5684 "/workspace/edk2/MdePkg/Include/Library/BaseLib.h"
UINT64
__attribute__((cdecl))
AsmWriteMsr64 (
  UINT32 Index,
  UINT64 Value
  );
# 5710 "/workspace/edk2/MdePkg/Include/Library/BaseLib.h"
UINT64
__attribute__((cdecl))
AsmMsrOr64 (
  UINT32 Index,
  UINT64 OrData
  );
# 5736 "/workspace/edk2/MdePkg/Include/Library/BaseLib.h"
UINT64
__attribute__((cdecl))
AsmMsrAnd64 (
  UINT32 Index,
  UINT64 AndData
  );
# 5765 "/workspace/edk2/MdePkg/Include/Library/BaseLib.h"
UINT64
__attribute__((cdecl))
AsmMsrAndThenOr64 (
  UINT32 Index,
  UINT64 AndData,
  UINT64 OrData
  );
# 5796 "/workspace/edk2/MdePkg/Include/Library/BaseLib.h"
UINT64
__attribute__((cdecl))
AsmMsrBitFieldRead64 (
  UINT32 Index,
  UINTN StartBit,
  UINTN EndBit
  );
# 5829 "/workspace/edk2/MdePkg/Include/Library/BaseLib.h"
UINT64
__attribute__((cdecl))
AsmMsrBitFieldWrite64 (
  UINT32 Index,
  UINTN StartBit,
  UINTN EndBit,
  UINT64 Value
  );
# 5866 "/workspace/edk2/MdePkg/Include/Library/BaseLib.h"
UINT64
__attribute__((cdecl))
AsmMsrBitFieldOr64 (
  UINT32 Index,
  UINTN StartBit,
  UINTN EndBit,
  UINT64 OrData
  );
# 5903 "/workspace/edk2/MdePkg/Include/Library/BaseLib.h"
UINT64
__attribute__((cdecl))
AsmMsrBitFieldAnd64 (
  UINT32 Index,
  UINTN StartBit,
  UINTN EndBit,
  UINT64 AndData
  );
# 5943 "/workspace/edk2/MdePkg/Include/Library/BaseLib.h"
UINT64
__attribute__((cdecl))
AsmMsrBitFieldAndThenOr64 (
  UINT32 Index,
  UINTN StartBit,
  UINTN EndBit,
  UINT64 AndData,
  UINT64 OrData
  );
# 5964 "/workspace/edk2/MdePkg/Include/Library/BaseLib.h"
UINTN
__attribute__((cdecl))
AsmReadEflags (
  void
  );
# 5981 "/workspace/edk2/MdePkg/Include/Library/BaseLib.h"
UINTN
__attribute__((cdecl))
AsmReadCr0 (
  void
  );
# 5998 "/workspace/edk2/MdePkg/Include/Library/BaseLib.h"
UINTN
__attribute__((cdecl))
AsmReadCr2 (
  void
  );
# 6015 "/workspace/edk2/MdePkg/Include/Library/BaseLib.h"
UINTN
__attribute__((cdecl))
AsmReadCr3 (
  void
  );
# 6032 "/workspace/edk2/MdePkg/Include/Library/BaseLib.h"
UINTN
__attribute__((cdecl))
AsmReadCr4 (
  void
  );
# 6050 "/workspace/edk2/MdePkg/Include/Library/BaseLib.h"
UINTN
__attribute__((cdecl))
AsmWriteCr0 (
  UINTN Cr0
  );
# 6068 "/workspace/edk2/MdePkg/Include/Library/BaseLib.h"
UINTN
__attribute__((cdecl))
AsmWriteCr2 (
  UINTN Cr2
  );
# 6086 "/workspace/edk2/MdePkg/Include/Library/BaseLib.h"
UINTN
__attribute__((cdecl))
AsmWriteCr3 (
  UINTN Cr3
  );
# 6104 "/workspace/edk2/MdePkg/Include/Library/BaseLib.h"
UINTN
__attribute__((cdecl))
AsmWriteCr4 (
  UINTN Cr4
  );
# 6121 "/workspace/edk2/MdePkg/Include/Library/BaseLib.h"
UINTN
__attribute__((cdecl))
AsmReadDr0 (
  void
  );
# 6138 "/workspace/edk2/MdePkg/Include/Library/BaseLib.h"
UINTN
__attribute__((cdecl))
AsmReadDr1 (
  void
  );
# 6155 "/workspace/edk2/MdePkg/Include/Library/BaseLib.h"
UINTN
__attribute__((cdecl))
AsmReadDr2 (
  void
  );
# 6172 "/workspace/edk2/MdePkg/Include/Library/BaseLib.h"
UINTN
__attribute__((cdecl))
AsmReadDr3 (
  void
  );
# 6189 "/workspace/edk2/MdePkg/Include/Library/BaseLib.h"
UINTN
__attribute__((cdecl))
AsmReadDr4 (
  void
  );
# 6206 "/workspace/edk2/MdePkg/Include/Library/BaseLib.h"
UINTN
__attribute__((cdecl))
AsmReadDr5 (
  void
  );
# 6223 "/workspace/edk2/MdePkg/Include/Library/BaseLib.h"
UINTN
__attribute__((cdecl))
AsmReadDr6 (
  void
  );
# 6240 "/workspace/edk2/MdePkg/Include/Library/BaseLib.h"
UINTN
__attribute__((cdecl))
AsmReadDr7 (
  void
  );
# 6258 "/workspace/edk2/MdePkg/Include/Library/BaseLib.h"
UINTN
__attribute__((cdecl))
AsmWriteDr0 (
  UINTN Dr0
  );
# 6276 "/workspace/edk2/MdePkg/Include/Library/BaseLib.h"
UINTN
__attribute__((cdecl))
AsmWriteDr1 (
  UINTN Dr1
  );
# 6294 "/workspace/edk2/MdePkg/Include/Library/BaseLib.h"
UINTN
__attribute__((cdecl))
AsmWriteDr2 (
  UINTN Dr2
  );
# 6312 "/workspace/edk2/MdePkg/Include/Library/BaseLib.h"
UINTN
__attribute__((cdecl))
AsmWriteDr3 (
  UINTN Dr3
  );
# 6330 "/workspace/edk2/MdePkg/Include/Library/BaseLib.h"
UINTN
__attribute__((cdecl))
AsmWriteDr4 (
  UINTN Dr4
  );
# 6348 "/workspace/edk2/MdePkg/Include/Library/BaseLib.h"
UINTN
__attribute__((cdecl))
AsmWriteDr5 (
  UINTN Dr5
  );
# 6366 "/workspace/edk2/MdePkg/Include/Library/BaseLib.h"
UINTN
__attribute__((cdecl))
AsmWriteDr6 (
  UINTN Dr6
  );
# 6384 "/workspace/edk2/MdePkg/Include/Library/BaseLib.h"
UINTN
__attribute__((cdecl))
AsmWriteDr7 (
  UINTN Dr7
  );
# 6400 "/workspace/edk2/MdePkg/Include/Library/BaseLib.h"
UINT16
__attribute__((cdecl))
AsmReadCs (
  void
  );
# 6416 "/workspace/edk2/MdePkg/Include/Library/BaseLib.h"
UINT16
__attribute__((cdecl))
AsmReadDs (
  void
  );
# 6432 "/workspace/edk2/MdePkg/Include/Library/BaseLib.h"
UINT16
__attribute__((cdecl))
AsmReadEs (
  void
  );
# 6448 "/workspace/edk2/MdePkg/Include/Library/BaseLib.h"
UINT16
__attribute__((cdecl))
AsmReadFs (
  void
  );
# 6464 "/workspace/edk2/MdePkg/Include/Library/BaseLib.h"
UINT16
__attribute__((cdecl))
AsmReadGs (
  void
  );
# 6480 "/workspace/edk2/MdePkg/Include/Library/BaseLib.h"
UINT16
__attribute__((cdecl))
AsmReadSs (
  void
  );
# 6496 "/workspace/edk2/MdePkg/Include/Library/BaseLib.h"
UINT16
__attribute__((cdecl))
AsmReadTr (
  void
  );
# 6514 "/workspace/edk2/MdePkg/Include/Library/BaseLib.h"
void
__attribute__((cdecl))
AsmReadGdtr (
  IA32_DESCRIPTOR *Gdtr
  );
# 6532 "/workspace/edk2/MdePkg/Include/Library/BaseLib.h"
void
__attribute__((cdecl))
AsmWriteGdtr (
  const IA32_DESCRIPTOR *Gdtr
  );
# 6550 "/workspace/edk2/MdePkg/Include/Library/BaseLib.h"
void
__attribute__((cdecl))
AsmReadIdtr (
  IA32_DESCRIPTOR *Idtr
  );
# 6568 "/workspace/edk2/MdePkg/Include/Library/BaseLib.h"
void
__attribute__((cdecl))
AsmWriteIdtr (
  const IA32_DESCRIPTOR *Idtr
  );
# 6584 "/workspace/edk2/MdePkg/Include/Library/BaseLib.h"
UINT16
__attribute__((cdecl))
AsmReadLdtr (
  void
  );
# 6600 "/workspace/edk2/MdePkg/Include/Library/BaseLib.h"
void
__attribute__((cdecl))
AsmWriteLdtr (
  UINT16 Ldtr
  );
# 6620 "/workspace/edk2/MdePkg/Include/Library/BaseLib.h"
void
__attribute__((cdecl))
AsmFxSave (
  IA32_FX_BUFFER *Buffer
  );
# 6641 "/workspace/edk2/MdePkg/Include/Library/BaseLib.h"
void
__attribute__((cdecl))
AsmFxRestore (
  const IA32_FX_BUFFER *Buffer
  );
# 6657 "/workspace/edk2/MdePkg/Include/Library/BaseLib.h"
UINT64
__attribute__((cdecl))
AsmReadMm0 (
  void
  );
# 6673 "/workspace/edk2/MdePkg/Include/Library/BaseLib.h"
UINT64
__attribute__((cdecl))
AsmReadMm1 (
  void
  );
# 6689 "/workspace/edk2/MdePkg/Include/Library/BaseLib.h"
UINT64
__attribute__((cdecl))
AsmReadMm2 (
  void
  );
# 6705 "/workspace/edk2/MdePkg/Include/Library/BaseLib.h"
UINT64
__attribute__((cdecl))
AsmReadMm3 (
  void
  );
# 6721 "/workspace/edk2/MdePkg/Include/Library/BaseLib.h"
UINT64
__attribute__((cdecl))
AsmReadMm4 (
  void
  );
# 6737 "/workspace/edk2/MdePkg/Include/Library/BaseLib.h"
UINT64
__attribute__((cdecl))
AsmReadMm5 (
  void
  );
# 6753 "/workspace/edk2/MdePkg/Include/Library/BaseLib.h"
UINT64
__attribute__((cdecl))
AsmReadMm6 (
  void
  );
# 6769 "/workspace/edk2/MdePkg/Include/Library/BaseLib.h"
UINT64
__attribute__((cdecl))
AsmReadMm7 (
  void
  );
# 6785 "/workspace/edk2/MdePkg/Include/Library/BaseLib.h"
void
__attribute__((cdecl))
AsmWriteMm0 (
  UINT64 Value
  );
# 6801 "/workspace/edk2/MdePkg/Include/Library/BaseLib.h"
void
__attribute__((cdecl))
AsmWriteMm1 (
  UINT64 Value
  );
# 6817 "/workspace/edk2/MdePkg/Include/Library/BaseLib.h"
void
__attribute__((cdecl))
AsmWriteMm2 (
  UINT64 Value
  );
# 6833 "/workspace/edk2/MdePkg/Include/Library/BaseLib.h"
void
__attribute__((cdecl))
AsmWriteMm3 (
  UINT64 Value
  );
# 6849 "/workspace/edk2/MdePkg/Include/Library/BaseLib.h"
void
__attribute__((cdecl))
AsmWriteMm4 (
  UINT64 Value
  );
# 6865 "/workspace/edk2/MdePkg/Include/Library/BaseLib.h"
void
__attribute__((cdecl))
AsmWriteMm5 (
  UINT64 Value
  );
# 6881 "/workspace/edk2/MdePkg/Include/Library/BaseLib.h"
void
__attribute__((cdecl))
AsmWriteMm6 (
  UINT64 Value
  );
# 6897 "/workspace/edk2/MdePkg/Include/Library/BaseLib.h"
void
__attribute__((cdecl))
AsmWriteMm7 (
  UINT64 Value
  );
# 6913 "/workspace/edk2/MdePkg/Include/Library/BaseLib.h"
UINT64
__attribute__((cdecl))
AsmReadTsc (
  void
  );
# 6931 "/workspace/edk2/MdePkg/Include/Library/BaseLib.h"
UINT64
__attribute__((cdecl))
AsmReadPmc (
  UINT32 Index
  );
# 6954 "/workspace/edk2/MdePkg/Include/Library/BaseLib.h"
UINTN
__attribute__((cdecl))
AsmMonitor (
  UINTN Eax,
  UINTN Ecx,
  UINTN Edx
  );
# 6977 "/workspace/edk2/MdePkg/Include/Library/BaseLib.h"
UINTN
__attribute__((cdecl))
AsmMwait (
  UINTN Eax,
  UINTN Ecx
  );
# 6992 "/workspace/edk2/MdePkg/Include/Library/BaseLib.h"
void
__attribute__((cdecl))
AsmWbinvd (
  void
  );
# 7006 "/workspace/edk2/MdePkg/Include/Library/BaseLib.h"
void
__attribute__((cdecl))
AsmInvd (
  void
  );
# 7028 "/workspace/edk2/MdePkg/Include/Library/BaseLib.h"
void *
__attribute__((cdecl))
AsmFlushCacheLine (
  void *LinearAddress
  );
# 7072 "/workspace/edk2/MdePkg/Include/Library/BaseLib.h"
void
__attribute__((cdecl))
AsmEnablePaging32 (
  SWITCH_STACK_ENTRY_POINT EntryPoint,
  void *Context1,
  void *Context2,
  void *NewStack
  );
# 7116 "/workspace/edk2/MdePkg/Include/Library/BaseLib.h"
void
__attribute__((cdecl))
AsmDisablePaging32 (
  SWITCH_STACK_ENTRY_POINT EntryPoint,
  void *Context1,
  void *Context2,
  void *NewStack
  );
# 7158 "/workspace/edk2/MdePkg/Include/Library/BaseLib.h"
void
__attribute__((cdecl))
AsmEnablePaging64 (
  UINT16 Cs,
  UINT64 EntryPoint,
  UINT64 Context1,
  UINT64 Context2,
  UINT64 NewStack
  );
# 7199 "/workspace/edk2/MdePkg/Include/Library/BaseLib.h"
void
__attribute__((cdecl))
AsmDisablePaging64 (
  UINT16 Cs,
  UINT32 EntryPoint,
  UINT32 Context1,
  UINT32 Context2,
  UINT32 NewStack
  );
# 7235 "/workspace/edk2/MdePkg/Include/Library/BaseLib.h"
void
__attribute__((cdecl))
AsmGetThunk16Properties (
  UINT32 *RealModeBufferSize,
  UINT32 *ExtraStackSize
  );
# 7257 "/workspace/edk2/MdePkg/Include/Library/BaseLib.h"
void
__attribute__((cdecl))
AsmPrepareThunk16 (
  THUNK_CONTEXT *ThunkContext
  );
# 7317 "/workspace/edk2/MdePkg/Include/Library/BaseLib.h"
void
__attribute__((cdecl))
AsmThunk16 (
  THUNK_CONTEXT *ThunkContext
  );
# 7344 "/workspace/edk2/MdePkg/Include/Library/BaseLib.h"
void
__attribute__((cdecl))
AsmPrepareAndThunk16 (
  THUNK_CONTEXT *ThunkContext
  );
# 7361 "/workspace/edk2/MdePkg/Include/Library/BaseLib.h"
BOOLEAN
__attribute__((cdecl))
AsmRdRand16 (
  UINT16 *Rand
  );
# 7378 "/workspace/edk2/MdePkg/Include/Library/BaseLib.h"
BOOLEAN
__attribute__((cdecl))
AsmRdRand32 (
  UINT32 *Rand
  );
# 7395 "/workspace/edk2/MdePkg/Include/Library/BaseLib.h"
BOOLEAN
__attribute__((cdecl))
AsmRdRand64 (
  UINT64 *Rand
  );






void
__attribute__((cdecl))
AsmWriteTr (
  UINT16 Selector
  );
# 7419 "/workspace/edk2/MdePkg/Include/Library/BaseLib.h"
void
__attribute__((cdecl))
AsmLfence (
  void
  );
# 7435 "/workspace/edk2/MdePkg/Include/Library/BaseLib.h"
UINT64
__attribute__((cdecl))
AsmXGetBv (
  UINT32 Index
  );
# 7449 "/workspace/edk2/MdePkg/Include/Library/BaseLib.h"
void
__attribute__((cdecl))
AsmVmgExit (
  void
  );
# 7490 "/workspace/edk2/MdePkg/Include/Library/BaseLib.h"
void
__attribute__((cdecl))
PatchInstructionX86 (
  X86_ASSEMBLY_PATCH_LABEL *InstructionEnd,
  UINT64 PatchValue,
  UINTN ValueSize
  );
# 19 "/workspace/edk2/MdePkg/Include/Ppi/PciCfg2.h" 2




typedef struct _EFI_PEI_PCI_CFG2_PPI EFI_PEI_PCI_CFG2_PPI;
# 35 "/workspace/edk2/MdePkg/Include/Ppi/PciCfg2.h"
typedef enum {



  EfiPeiPciCfgWidthUint8 = 0,



  EfiPeiPciCfgWidthUint16 = 1,



  EfiPeiPciCfgWidthUint32 = 2,



  EfiPeiPciCfgWidthUint64 = 3,
  EfiPeiPciCfgWidthMaximum
} EFI_PEI_PCI_CFG_PPI_WIDTH;




typedef struct {




  UINT8 Register;




  UINT8 Function;



  UINT8 Device;



  UINT8 Bus;





  UINT32 ExtendedRegister;
} EFI_PEI_PCI_CFG_PPI_PCI_ADDRESS;
# 109 "/workspace/edk2/MdePkg/Include/Ppi/PciCfg2.h"
typedef
EFI_STATUS
(__attribute__((cdecl)) *EFI_PEI_PCI_CFG2_PPI_IO)(
  const EFI_PEI_SERVICES **PeiServices,
  const EFI_PEI_PCI_CFG2_PPI *This,
  EFI_PEI_PCI_CFG_PPI_WIDTH Width,
  UINT64 Address,
  void *Buffer
);
# 150 "/workspace/edk2/MdePkg/Include/Ppi/PciCfg2.h"
typedef
EFI_STATUS
(__attribute__((cdecl)) *EFI_PEI_PCI_CFG2_PPI_RW)(
  const EFI_PEI_SERVICES **PeiServices,
  const EFI_PEI_PCI_CFG2_PPI *This,
  EFI_PEI_PCI_CFG_PPI_WIDTH Width,
  UINT64 Address,
  void *SetBits,
  void *ClearBits
);





struct _EFI_PEI_PCI_CFG2_PPI {
  EFI_PEI_PCI_CFG2_PPI_IO Read;
  EFI_PEI_PCI_CFG2_PPI_IO Write;
  EFI_PEI_PCI_CFG2_PPI_RW Modify;



  UINT16 Segment;
};


extern EFI_GUID gEfiPciCfg2PpiGuid;
# 41 "/workspace/edk2/MdePkg/Include/Pi/PiPeiCis.h" 2
# 54 "/workspace/edk2/MdePkg/Include/Pi/PiPeiCis.h"
typedef
EFI_STATUS
(__attribute__((cdecl)) *EFI_PEIM_ENTRY_POINT2)(
  EFI_PEI_FILE_HANDLE FileHandle,
  const EFI_PEI_SERVICES **PeiServices
  );
# 71 "/workspace/edk2/MdePkg/Include/Pi/PiPeiCis.h"
typedef
EFI_STATUS
(__attribute__((cdecl)) *EFI_PEIM_NOTIFY_ENTRY_POINT)(
  EFI_PEI_SERVICES **PeiServices,
  EFI_PEI_NOTIFY_DESCRIPTOR *NotifyDescriptor,
  void *Ppi
  );
# 92 "/workspace/edk2/MdePkg/Include/Pi/PiPeiCis.h"
typedef struct {




  UINTN Flags;



  EFI_GUID *Guid;



  void *Ppi;
} EFI_PEI_PPI_DESCRIPTOR;





struct _EFI_PEI_NOTIFY_DESCRIPTOR {



  UINTN Flags;



  EFI_GUID *Guid;



  EFI_PEIM_NOTIFY_ENTRY_POINT Notify;
};





typedef union {



  EFI_PEI_NOTIFY_DESCRIPTOR Notify;



  EFI_PEI_PPI_DESCRIPTOR Ppi;
} EFI_PEI_DESCRIPTOR;
# 159 "/workspace/edk2/MdePkg/Include/Pi/PiPeiCis.h"
typedef
EFI_STATUS
(__attribute__((cdecl)) *EFI_PEI_INSTALL_PPI)(
  const EFI_PEI_SERVICES **PeiServices,
  const EFI_PEI_PPI_DESCRIPTOR *PpiList
  );
# 184 "/workspace/edk2/MdePkg/Include/Pi/PiPeiCis.h"
typedef
EFI_STATUS
(__attribute__((cdecl)) *EFI_PEI_REINSTALL_PPI)(
  const EFI_PEI_SERVICES **PeiServices,
  const EFI_PEI_PPI_DESCRIPTOR *OldPpi,
  const EFI_PEI_PPI_DESCRIPTOR *NewPpi
  );
# 205 "/workspace/edk2/MdePkg/Include/Pi/PiPeiCis.h"
typedef
EFI_STATUS
(__attribute__((cdecl)) *EFI_PEI_LOCATE_PPI)(
  const EFI_PEI_SERVICES **PeiServices,
  const EFI_GUID *Guid,
  UINTN Instance,
  EFI_PEI_PPI_DESCRIPTOR **PpiDescriptor ,
  void **Ppi
  );
# 230 "/workspace/edk2/MdePkg/Include/Pi/PiPeiCis.h"
typedef
EFI_STATUS
(__attribute__((cdecl)) *EFI_PEI_NOTIFY_PPI)(
  const EFI_PEI_SERVICES **PeiServices,
  const EFI_PEI_NOTIFY_DESCRIPTOR *NotifyList
  );
# 246 "/workspace/edk2/MdePkg/Include/Pi/PiPeiCis.h"
typedef
EFI_STATUS
(__attribute__((cdecl)) *EFI_PEI_GET_BOOT_MODE)(
  const EFI_PEI_SERVICES **PeiServices,
  EFI_BOOT_MODE *BootMode
  );
# 262 "/workspace/edk2/MdePkg/Include/Pi/PiPeiCis.h"
typedef
EFI_STATUS
(__attribute__((cdecl)) *EFI_PEI_SET_BOOT_MODE)(
  const EFI_PEI_SERVICES **PeiServices,
  EFI_BOOT_MODE BootMode
  );
# 279 "/workspace/edk2/MdePkg/Include/Pi/PiPeiCis.h"
typedef
EFI_STATUS
(__attribute__((cdecl)) *EFI_PEI_GET_HOB_LIST)(
  const EFI_PEI_SERVICES **PeiServices,
  void **HobList
  );
# 298 "/workspace/edk2/MdePkg/Include/Pi/PiPeiCis.h"
typedef
EFI_STATUS
(__attribute__((cdecl)) *EFI_PEI_CREATE_HOB)(
  const EFI_PEI_SERVICES **PeiServices,
  UINT16 Type,
  UINT16 Length,
  void **Hob
  );
# 326 "/workspace/edk2/MdePkg/Include/Pi/PiPeiCis.h"
typedef
EFI_STATUS
(__attribute__((cdecl)) *EFI_PEI_FFS_FIND_NEXT_VOLUME2)(
  const EFI_PEI_SERVICES **PeiServices,
  UINTN Instance,
  EFI_PEI_FV_HANDLE *VolumeHandle
  );
# 355 "/workspace/edk2/MdePkg/Include/Pi/PiPeiCis.h"
typedef
EFI_STATUS
(__attribute__((cdecl)) *EFI_PEI_FFS_FIND_NEXT_FILE2)(
  const EFI_PEI_SERVICES **PeiServices,
  EFI_FV_FILETYPE SearchType,
  const EFI_PEI_FV_HANDLE FvHandle,
  EFI_PEI_FILE_HANDLE *FileHandle
  );
# 383 "/workspace/edk2/MdePkg/Include/Pi/PiPeiCis.h"
typedef
EFI_STATUS
(__attribute__((cdecl)) *EFI_PEI_FFS_FIND_SECTION_DATA2)(
  const EFI_PEI_SERVICES **PeiServices,
  EFI_SECTION_TYPE SectionType,
  EFI_PEI_FILE_HANDLE FileHandle,
  void **SectionData
  );
# 413 "/workspace/edk2/MdePkg/Include/Pi/PiPeiCis.h"
typedef
EFI_STATUS
(__attribute__((cdecl)) *EFI_PEI_FFS_FIND_SECTION_DATA3)(
  const EFI_PEI_SERVICES **PeiServices,
  EFI_SECTION_TYPE SectionType,
  UINTN SectionInstance,
  EFI_PEI_FILE_HANDLE FileHandle,
  void **SectionData,
  UINT32 *AuthenticationStatus
  );
# 436 "/workspace/edk2/MdePkg/Include/Pi/PiPeiCis.h"
typedef
EFI_STATUS
(__attribute__((cdecl)) *EFI_PEI_INSTALL_PEI_MEMORY)(
  const EFI_PEI_SERVICES **PeiServices,
  EFI_PHYSICAL_ADDRESS MemoryBegin,
  UINT64 MemoryLength
  );
# 466 "/workspace/edk2/MdePkg/Include/Pi/PiPeiCis.h"
typedef
EFI_STATUS
(__attribute__((cdecl)) *EFI_PEI_ALLOCATE_PAGES)(
  const EFI_PEI_SERVICES **PeiServices,
  EFI_MEMORY_TYPE MemoryType,
  UINTN Pages,
  EFI_PHYSICAL_ADDRESS *Memory
  );
# 488 "/workspace/edk2/MdePkg/Include/Pi/PiPeiCis.h"
typedef
EFI_STATUS
(__attribute__((cdecl)) *EFI_PEI_FREE_PAGES) (
  const EFI_PEI_SERVICES **PeiServices,
  EFI_PHYSICAL_ADDRESS Memory,
  UINTN Pages
  );
# 508 "/workspace/edk2/MdePkg/Include/Pi/PiPeiCis.h"
typedef
EFI_STATUS
(__attribute__((cdecl)) *EFI_PEI_ALLOCATE_POOL)(
  const EFI_PEI_SERVICES **PeiServices,
  UINTN Size,
  void **Buffer
  );
# 524 "/workspace/edk2/MdePkg/Include/Pi/PiPeiCis.h"
typedef
void
(__attribute__((cdecl)) *EFI_PEI_COPY_MEM)(
  void *Destination,
  void *Source,
  UINTN Length
  );
# 540 "/workspace/edk2/MdePkg/Include/Pi/PiPeiCis.h"
typedef
void
(__attribute__((cdecl)) *EFI_PEI_SET_MEM)(
  void *Buffer,
  UINTN Size,
  UINT8 Value
  );
# 577 "/workspace/edk2/MdePkg/Include/Pi/PiPeiCis.h"
typedef
EFI_STATUS
(__attribute__((cdecl)) *EFI_PEI_REPORT_STATUS_CODE)(
  const EFI_PEI_SERVICES **PeiServices,
  EFI_STATUS_CODE_TYPE Type,
  EFI_STATUS_CODE_VALUE Value,
  UINT32 Instance,
  const EFI_GUID *CallerId ,
  const EFI_STATUS_CODE_DATA *Data
  );
# 601 "/workspace/edk2/MdePkg/Include/Pi/PiPeiCis.h"
typedef
EFI_STATUS
(__attribute__((cdecl)) *EFI_PEI_RESET_SYSTEM)(
  const EFI_PEI_SERVICES **PeiServices
  );
# 620 "/workspace/edk2/MdePkg/Include/Pi/PiPeiCis.h"
typedef
void
(__attribute__((cdecl)) *EFI_PEI_RESET2_SYSTEM) (
  EFI_RESET_TYPE ResetType,
  EFI_STATUS ResetStatus,
  UINTN DataSize,
  void *ResetData
  );
# 649 "/workspace/edk2/MdePkg/Include/Pi/PiPeiCis.h"
typedef
EFI_STATUS
(__attribute__((cdecl)) *EFI_PEI_FFS_FIND_BY_NAME)(
  const EFI_GUID *FileName,
  EFI_PEI_FV_HANDLE VolumeHandle,
  EFI_PEI_FILE_HANDLE *FileHandle
  );




typedef struct {



  EFI_GUID FileName;



  EFI_FV_FILETYPE FileType;



  EFI_FV_FILE_ATTRIBUTES FileAttributes;





  void *Buffer;



  UINT32 BufferSize;
} EFI_FV_FILE_INFO;




typedef struct {



  EFI_GUID FileName;



  EFI_FV_FILETYPE FileType;



  EFI_FV_FILE_ATTRIBUTES FileAttributes;





  void *Buffer;



  UINT32 BufferSize;



  UINT32 AuthenticationStatus;
} EFI_FV_FILE_INFO2;
# 735 "/workspace/edk2/MdePkg/Include/Pi/PiPeiCis.h"
typedef
EFI_STATUS
(__attribute__((cdecl)) *EFI_PEI_FFS_GET_FILE_INFO)(
  EFI_PEI_FILE_HANDLE FileHandle,
  EFI_FV_FILE_INFO *FileInfo
  );
# 759 "/workspace/edk2/MdePkg/Include/Pi/PiPeiCis.h"
typedef
EFI_STATUS
(__attribute__((cdecl)) *EFI_PEI_FFS_GET_FILE_INFO2)(
  EFI_PEI_FILE_HANDLE FileHandle,
  EFI_FV_FILE_INFO2 *FileInfo
  );




typedef struct {



  EFI_FVB_ATTRIBUTES_2 FvAttributes;



  EFI_GUID FvFormat;



  EFI_GUID FvName;





  void *FvStart;



  UINT64 FvSize;
} EFI_FV_INFO;
# 811 "/workspace/edk2/MdePkg/Include/Pi/PiPeiCis.h"
typedef
EFI_STATUS
(__attribute__((cdecl)) *EFI_PEI_FFS_GET_VOLUME_INFO)(
  EFI_PEI_FV_HANDLE VolumeHandle,
  EFI_FV_INFO *VolumeInfo
  );
# 842 "/workspace/edk2/MdePkg/Include/Pi/PiPeiCis.h"
typedef
EFI_STATUS
(__attribute__((cdecl)) *EFI_PEI_REGISTER_FOR_SHADOW)(
  EFI_PEI_FILE_HANDLE FileHandle
  );
# 880 "/workspace/edk2/MdePkg/Include/Pi/PiPeiCis.h"
struct _EFI_PEI_SERVICES {



  EFI_TABLE_HEADER Hdr;




  EFI_PEI_INSTALL_PPI InstallPpi;
  EFI_PEI_REINSTALL_PPI ReInstallPpi;
  EFI_PEI_LOCATE_PPI LocatePpi;
  EFI_PEI_NOTIFY_PPI NotifyPpi;




  EFI_PEI_GET_BOOT_MODE GetBootMode;
  EFI_PEI_SET_BOOT_MODE SetBootMode;




  EFI_PEI_GET_HOB_LIST GetHobList;
  EFI_PEI_CREATE_HOB CreateHob;




  EFI_PEI_FFS_FIND_NEXT_VOLUME2 FfsFindNextVolume;
  EFI_PEI_FFS_FIND_NEXT_FILE2 FfsFindNextFile;
  EFI_PEI_FFS_FIND_SECTION_DATA2 FfsFindSectionData;




  EFI_PEI_INSTALL_PEI_MEMORY InstallPeiMemory;
  EFI_PEI_ALLOCATE_PAGES AllocatePages;
  EFI_PEI_ALLOCATE_POOL AllocatePool;
  EFI_PEI_COPY_MEM CopyMem;
  EFI_PEI_SET_MEM SetMem;




  EFI_PEI_REPORT_STATUS_CODE ReportStatusCode;




  EFI_PEI_RESET_SYSTEM ResetSystem;





  EFI_PEI_CPU_IO_PPI *CpuIo;
  EFI_PEI_PCI_CFG2_PPI *PciCfg;




  EFI_PEI_FFS_FIND_BY_NAME FfsFindFileByName;
  EFI_PEI_FFS_GET_FILE_INFO FfsGetFileInfo;
  EFI_PEI_FFS_GET_VOLUME_INFO FfsGetVolumeInfo;
  EFI_PEI_REGISTER_FOR_SHADOW RegisterForShadow;
  EFI_PEI_FFS_FIND_SECTION_DATA3 FindSectionData3;
  EFI_PEI_FFS_GET_FILE_INFO2 FfsGetFileInfo2;
  EFI_PEI_RESET2_SYSTEM ResetSystem2;
  EFI_PEI_FREE_PAGES FreePages;
};







typedef struct _EFI_SEC_PEI_HAND_OFF {



  UINT16 DataSize;






  void *BootFirmwareVolumeBase;




  UINTN BootFirmwareVolumeSize;




  void *TemporaryRamBase;




  UINTN TemporaryRamSize;
# 995 "/workspace/edk2/MdePkg/Include/Pi/PiPeiCis.h"
  void *PeiTemporaryRamBase;





  UINTN PeiTemporaryRamSize;







  void *StackBase;




  UINTN StackSize;
} EFI_SEC_PEI_HAND_OFF;
# 1054 "/workspace/edk2/MdePkg/Include/Pi/PiPeiCis.h"
typedef
void
(__attribute__((cdecl)) *EFI_PEI_CORE_ENTRY_POINT)(
  const EFI_SEC_PEI_HAND_OFF *SecCoreData,
  const EFI_PEI_PPI_DESCRIPTOR *PpiList
);
# 19 "/workspace/edk2/MdePkg/Include/PiPei.h" 2
# 17 "/workspace/edk2/Build/MdeModule/DEBUG_GCC5/IA32/MdeModulePkg/Core/DxeIplPeim/DxeIpl/DEBUG/AutoGen.h" 2
# 1 "/workspace/edk2/MdePkg/Include/Library/PcdLib.h" 1
# 845 "/workspace/edk2/MdePkg/Include/Library/PcdLib.h"
UINTN
__attribute__((cdecl))
LibPcdSetSku (
  UINTN SkuId
  );
# 862 "/workspace/edk2/MdePkg/Include/Library/PcdLib.h"
UINT8
__attribute__((cdecl))
LibPcdGet8 (
  UINTN TokenNumber
  );
# 879 "/workspace/edk2/MdePkg/Include/Library/PcdLib.h"
UINT16
__attribute__((cdecl))
LibPcdGet16 (
  UINTN TokenNumber
  );
# 896 "/workspace/edk2/MdePkg/Include/Library/PcdLib.h"
UINT32
__attribute__((cdecl))
LibPcdGet32 (
  UINTN TokenNumber
  );
# 913 "/workspace/edk2/MdePkg/Include/Library/PcdLib.h"
UINT64
__attribute__((cdecl))
LibPcdGet64 (
  UINTN TokenNumber
  );
# 930 "/workspace/edk2/MdePkg/Include/Library/PcdLib.h"
void *
__attribute__((cdecl))
LibPcdGetPtr (
  UINTN TokenNumber
  );
# 947 "/workspace/edk2/MdePkg/Include/Library/PcdLib.h"
BOOLEAN
__attribute__((cdecl))
LibPcdGetBool (
  UINTN TokenNumber
  );
# 962 "/workspace/edk2/MdePkg/Include/Library/PcdLib.h"
UINTN
__attribute__((cdecl))
LibPcdGetSize (
  UINTN TokenNumber
  );
# 983 "/workspace/edk2/MdePkg/Include/Library/PcdLib.h"
UINT8
__attribute__((cdecl))
LibPcdGetEx8 (
  const GUID *Guid,
  UINTN TokenNumber
  );
# 1005 "/workspace/edk2/MdePkg/Include/Library/PcdLib.h"
UINT16
__attribute__((cdecl))
LibPcdGetEx16 (
  const GUID *Guid,
  UINTN TokenNumber
  );
# 1024 "/workspace/edk2/MdePkg/Include/Library/PcdLib.h"
UINT32
__attribute__((cdecl))
LibPcdGetEx32 (
  const GUID *Guid,
  UINTN TokenNumber
  );
# 1046 "/workspace/edk2/MdePkg/Include/Library/PcdLib.h"
UINT64
__attribute__((cdecl))
LibPcdGetEx64 (
  const GUID *Guid,
  UINTN TokenNumber
  );
# 1068 "/workspace/edk2/MdePkg/Include/Library/PcdLib.h"
void *
__attribute__((cdecl))
LibPcdGetExPtr (
  const GUID *Guid,
  UINTN TokenNumber
  );
# 1090 "/workspace/edk2/MdePkg/Include/Library/PcdLib.h"
BOOLEAN
__attribute__((cdecl))
LibPcdGetExBool (
  const GUID *Guid,
  UINTN TokenNumber
  );
# 1112 "/workspace/edk2/MdePkg/Include/Library/PcdLib.h"
UINTN
__attribute__((cdecl))
LibPcdGetExSize (
  const GUID *Guid,
  UINTN TokenNumber
  );
# 1132 "/workspace/edk2/MdePkg/Include/Library/PcdLib.h"
RETURN_STATUS
__attribute__((cdecl))
LibPcdSet8S (
  UINTN TokenNumber,
  UINT8 Value
  );
# 1151 "/workspace/edk2/MdePkg/Include/Library/PcdLib.h"
RETURN_STATUS
__attribute__((cdecl))
LibPcdSet16S (
  UINTN TokenNumber,
  UINT16 Value
  );
# 1170 "/workspace/edk2/MdePkg/Include/Library/PcdLib.h"
RETURN_STATUS
__attribute__((cdecl))
LibPcdSet32S (
  UINTN TokenNumber,
  UINT32 Value
  );
# 1189 "/workspace/edk2/MdePkg/Include/Library/PcdLib.h"
RETURN_STATUS
__attribute__((cdecl))
LibPcdSet64S (
  UINTN TokenNumber,
  UINT64 Value
  );
# 1218 "/workspace/edk2/MdePkg/Include/Library/PcdLib.h"
RETURN_STATUS
__attribute__((cdecl))
LibPcdSetPtrS (
  UINTN TokenNumber,
  UINTN *SizeOfBuffer,
  const void *Buffer
  );
# 1238 "/workspace/edk2/MdePkg/Include/Library/PcdLib.h"
RETURN_STATUS
__attribute__((cdecl))
LibPcdSetBoolS (
  UINTN TokenNumber,
  BOOLEAN Value
  );
# 1261 "/workspace/edk2/MdePkg/Include/Library/PcdLib.h"
RETURN_STATUS
__attribute__((cdecl))
LibPcdSetEx8S (
  const GUID *Guid,
  UINTN TokenNumber,
  UINT8 Value
  );
# 1285 "/workspace/edk2/MdePkg/Include/Library/PcdLib.h"
RETURN_STATUS
__attribute__((cdecl))
LibPcdSetEx16S (
  const GUID *Guid,
  UINTN TokenNumber,
  UINT16 Value
  );
# 1309 "/workspace/edk2/MdePkg/Include/Library/PcdLib.h"
RETURN_STATUS
__attribute__((cdecl))
LibPcdSetEx32S (
  const GUID *Guid,
  UINTN TokenNumber,
  UINT32 Value
  );
# 1333 "/workspace/edk2/MdePkg/Include/Library/PcdLib.h"
RETURN_STATUS
__attribute__((cdecl))
LibPcdSetEx64S (
  const GUID *Guid,
  UINTN TokenNumber,
  UINT64 Value
  );
# 1363 "/workspace/edk2/MdePkg/Include/Library/PcdLib.h"
RETURN_STATUS
__attribute__((cdecl))
LibPcdSetExPtrS (
  const GUID *Guid,
  UINTN TokenNumber,
  UINTN *SizeOfBuffer,
  void *Buffer
  );
# 1388 "/workspace/edk2/MdePkg/Include/Library/PcdLib.h"
RETURN_STATUS
__attribute__((cdecl))
LibPcdSetExBoolS (
  const GUID *Guid,
  UINTN TokenNumber,
  BOOLEAN Value
  );
# 1412 "/workspace/edk2/MdePkg/Include/Library/PcdLib.h"
typedef
void
(__attribute__((cdecl)) *PCD_CALLBACK)(
  const GUID *CallBackGuid,
  UINTN CallBackToken,
  void *TokenData,
  UINTN TokenDataSize
  );
# 1438 "/workspace/edk2/MdePkg/Include/Library/PcdLib.h"
void
__attribute__((cdecl))
LibPcdCallbackOnSet (
  const GUID *Guid,
  UINTN TokenNumber,
  PCD_CALLBACK NotificationFunction
  );
# 1460 "/workspace/edk2/MdePkg/Include/Library/PcdLib.h"
void
__attribute__((cdecl))
LibPcdCancelCallback (
  const GUID *Guid,
  UINTN TokenNumber,
  PCD_CALLBACK NotificationFunction
  );
# 1488 "/workspace/edk2/MdePkg/Include/Library/PcdLib.h"
UINTN
__attribute__((cdecl))
LibPcdGetNextToken (
  const GUID *Guid,
  UINTN TokenNumber
  );
# 1510 "/workspace/edk2/MdePkg/Include/Library/PcdLib.h"
GUID *
__attribute__((cdecl))
LibPcdGetNextTokenSpace (
  const GUID *TokenSpaceGuid
  );
# 1540 "/workspace/edk2/MdePkg/Include/Library/PcdLib.h"
void *
__attribute__((cdecl))
LibPatchPcdSetPtr (
  void *PatchVariable,
  UINTN MaximumDatumSize,
  UINTN *SizeOfBuffer,
  const void *Buffer
  );
# 1572 "/workspace/edk2/MdePkg/Include/Library/PcdLib.h"
RETURN_STATUS
__attribute__((cdecl))
LibPatchPcdSetPtrS (
  void *PatchVariable,
  UINTN MaximumDatumSize,
  UINTN *SizeOfBuffer,
  const void *Buffer
  );
# 1606 "/workspace/edk2/MdePkg/Include/Library/PcdLib.h"
void *
__attribute__((cdecl))
LibPatchPcdSetPtrAndSize (
  void *PatchVariable,
  UINTN *SizeOfPatchVariable,
  UINTN MaximumDatumSize,
  UINTN *SizeOfBuffer,
  const void *Buffer
  );
# 1641 "/workspace/edk2/MdePkg/Include/Library/PcdLib.h"
RETURN_STATUS
__attribute__((cdecl))
LibPatchPcdSetPtrAndSizeS (
  void *PatchVariable,
  UINTN *SizeOfPatchVariable,
  UINTN MaximumDatumSize,
  UINTN *SizeOfBuffer,
  const void *Buffer
  );

typedef enum {
  PCD_TYPE_8,
  PCD_TYPE_16,
  PCD_TYPE_32,
  PCD_TYPE_64,
  PCD_TYPE_BOOL,
  PCD_TYPE_PTR
} PCD_TYPE;

typedef struct {




  PCD_TYPE PcdType;




  UINTN PcdSize;






  CHAR8 *PcdName;
} PCD_INFO;
# 1693 "/workspace/edk2/MdePkg/Include/Library/PcdLib.h"
void
__attribute__((cdecl))
LibPcdGetInfo (
  UINTN TokenNumber,
  PCD_INFO *PcdInfo
  );
# 1713 "/workspace/edk2/MdePkg/Include/Library/PcdLib.h"
void
__attribute__((cdecl))
LibPcdGetInfoEx (
  const GUID *Guid,
  UINTN TokenNumber,
  PCD_INFO *PcdInfo
  );
# 1728 "/workspace/edk2/MdePkg/Include/Library/PcdLib.h"
UINTN
__attribute__((cdecl))
LibPcdGetSku (
  void
  );
# 18 "/workspace/edk2/Build/MdeModule/DEBUG_GCC5/IA32/MdeModulePkg/Core/DxeIplPeim/DxeIpl/DEBUG/AutoGen.h" 2

extern GUID gEfiCallerIdGuid;
extern GUID gEdkiiDscPlatformGuid;
extern CHAR8 *gEfiCallerBaseName;







extern EFI_GUID gEfiMemoryTypeInformationGuid;
extern EFI_GUID gEfiMdeModulePkgTokenSpaceGuid;
extern EFI_GUID gEfiMdePkgTokenSpaceGuid;
extern EFI_GUID gEfiHobMemoryAllocStackGuid;
extern EFI_GUID gEfiHobMemoryAllocBspStoreGuid;
extern EFI_GUID gEfiHobMemoryAllocModuleGuid;
extern EFI_GUID gEfiFirmwareFileSystem2Guid;


extern EFI_GUID gEfiDxeIplPpiGuid;
extern EFI_GUID gEfiPeiDecompressPpiGuid;
extern EFI_GUID gEfiEndOfPeiSignalPpiGuid;
extern EFI_GUID gEfiPeiReadOnlyVariable2PpiGuid;
extern EFI_GUID gEfiPeiLoadFilePpiGuid;
extern EFI_GUID gEfiPeiS3Resume2PpiGuid;
extern EFI_GUID gEfiPeiRecoveryModulePpiGuid;
extern EFI_GUID gEfiVectorHandoffInfoPpiGuid;
extern EFI_GUID gEfiPeiMemoryDiscoveredPpiGuid;
extern EFI_GUID gEdkiiPeiBootInCapsuleOnDiskModePpiGuid;
extern EFI_GUID gEdkiiPeiCapsuleOnDiskPpiGuid;
extern EFI_GUID gEfiPeiFirmwareVolumeInfoPpiGuid;
extern EFI_GUID gEfiPeiFirmwareVolumeInfo2PpiGuid;


extern UINT64 _gPcd_SkuId_Array[];







extern const BOOLEAN _gPcd_FixedAtBuild_PcdDxeIplSwitchToLongMode;







extern const BOOLEAN _gPcd_FixedAtBuild_PcdDxeIplSupportUefiDecompress;







extern const BOOLEAN _gPcd_FixedAtBuild_PcdUse1GPageTable;







extern const UINT64 _gPcd_FixedAtBuild_PcdPteMemoryEncryptionAddressOrMask;







extern const UINT8 _gPcd_FixedAtBuild_PcdNullPointerDetectionPropertyMask;







extern const UINT8 _gPcd_FixedAtBuild_PcdHeapGuardPropertyMask;







extern const BOOLEAN _gPcd_FixedAtBuild_PcdCpuStackGuard;







extern const BOOLEAN _gPcd_FixedAtBuild_PcdUse5LevelPageTable;
# 137 "/workspace/edk2/Build/MdeModule/DEBUG_GCC5/IA32/MdeModulePkg/Core/DxeIplPeim/DxeIpl/DEBUG/AutoGen.h"
extern const BOOLEAN _gPcd_FixedAtBuild_PcdSetNxForStack;







extern const UINT64 _gPcd_FixedAtBuild_PcdDxeNxMemoryProtectionPolicy;







extern const UINT32 _gPcd_FixedAtBuild_PcdImageProtectionPolicy;






EFI_STATUS
__attribute__((cdecl))
PeimInitializeDxeIpl (
  EFI_PEI_FILE_HANDLE FileHandle,
  const EFI_PEI_SERVICES **PeiServices
  );
# 1 "<command-line>" 2
# 1 "/workspace/edk2/MdeModulePkg/Core/DxeIplPeim/Ia32/IdtVectorAsm.nasm"
;
# 10 "/workspace/edk2/MdeModulePkg/Core/DxeIplPeim/Ia32/IdtVectorAsm.nasm"
    SECTION .text

;
;------------------------------------------------------------------------------
; Generic IDT Vector Handlers for the Host.
;
;------------------------------------------------------------------------------

ALIGN 8
global AsmGetVectorTemplatInfo
global AsmVectorFixup

@VectorTemplateBase:
        push eax
        db 0x6a ; push #VectorNumber
@VectorNum:
        db 0
        mov eax, CommonInterruptEntry
        jmp eax
@VectorTemplateEnd:

global AsmGetVectorTemplatInfo
AsmGetVectorTemplatInfo:
        mov ecx, [esp + 4]
        mov dword [ecx], @VectorTemplateBase
        mov eax, (@VectorTemplateEnd - @VectorTemplateBase)
        ret

global AsmVectorFixup
AsmVectorFixup:
        mov eax, dword [esp + 8]
        mov ecx, [esp + 4]
        mov [ecx + (@VectorNum - @VectorTemplateBase)], al
        ret

;---------------------------------------;
; CommonInterruptEntry ;
;---------------------------------------;
; The follow algorithm is used for the common interrupt routine.

;
; +---------------------+ <-- 16-byte aligned ensured by processor
; + Old SS +
; +---------------------+
; + Old RSP +
; +---------------------+
; + RFlags +
; +---------------------+
; + CS +
; +---------------------+
; + RIP +
; +---------------------+
; + Error Code +
; +---------------------+
; + Vector Number +
; +---------------------+

CommonInterruptEntry:
  cli

  jmp $
